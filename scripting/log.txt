
> websocket_backend@1.0.0 start /Users/matthiasfuchs/projects/schwimmen/webtiming/websocket_backend
> node app.js


> swimfrontend@0.1.0 start /Users/matthiasfuchs/projects/schwimmen/webtiming/react_frontend/swimfrontend
> react-scripts start

Listening on port 4001
connected
Subscribing to [object Object]
Starting the development server...

Compiled successfully!

You can now view swimfrontend in the browser.

  Local:            http://localhost:3000/
  On Your Network:  http://192.168.178.144:3000/

Note that the development build is not optimized.
To create a production build, use npm run build.

Client disconnected
Subscribing to [object Object]

> swimfrontend@0.1.0 start /Users/matthiasfuchs/projects/schwimmen/webtiming/react_frontend/swimfrontend
> react-scripts start


> express-api-mqtt-example@1.0.0 start /Users/matthiasfuchs/projects/schwimmen/webtiming/datamapping
> node app.js


> websocket_backend@1.0.0 start /Users/matthiasfuchs/projects/schwimmen/webtiming/websocket_backend
> node app.js

app running on port. 3001
mqtt sender client connected
mqtt client connected
Something is already running on port 3000.
123455
123455 cleared
mainchannel 123455 cleared
send 123455 cleared
hello
hello cleared
mainchannel hello cleared
send hello cleared
check
check cleared
mainchannel check cleared
send check cleared
time
time cleared
mainchannel time cleared
send time cleared
The build failed because the process exited too early. This probably means the system ran out of memory or someone called `kill -9` on the process.

> websocket_backend@1.0.0 start /Users/matthiasfuchs/projects/schwimmen/webtiming/websocket_backend
> node app.js


> swimfrontend@0.1.0 start /Users/matthiasfuchs/projects/schwimmen/webtiming/react_frontend/swimfrontend
> react-scripts start


> express-api-mqtt-example@1.0.0 start /Users/matthiasfuchs/projects/schwimmen/webtiming/datamapping
> node app.js

app running on port. 3001
mqtt sender client connected
mqtt raw client connected
websocket backend Listening on port 4001
websocket backend connected
Starting the development server...

websocket backend Subscribing to [object Object]
Compiled successfully!

You can now view swimfrontend in the browser.

  Local:            http://localhost:3000/
  On Your Network:  http://192.168.178.144:3000/

Note that the development build is not optimized.
To create a production build, use npm run build.

websocket backend Client disconnected
websocket backend Subscribing to [object Object]
datamapping incoming time
datamapping mapper time cleared
websocket backend mainchannel time cleared
websocket backend send time cleared
datamapping incoming 1
datamapping mapper 1 cleared
websocket backend mainchannel 1 cleared
websocket backend send 1 cleared

> websocket_backend@1.0.0 start /Users/matthiasfuchs/projects/schwimmen/webtiming/websocket_backend
> node app.js


> express-api-mqtt-example@1.0.0 start /Users/matthiasfuchs/projects/schwimmen/webtiming/datamapping
> node app.js


> administration@0.1.0 start /Users/matthiasfuchs/projects/schwimmen/webtiming/react_frontend/administration
> react-scripts start

websocket backend Listening on port 4001
websocket backend connected
<incoming> using /Users/matthiasfuchs/projects/schwimmen/webtiming/datamapping/incoming/../property.ini
<incoming> using file resources/kinder.lef
<swim_event> read resources/kinder.lef
<mqqt_message_sender>lenex success upload new lenex file
<swim_event> Event type ALL
<sender> no auth set for outgoing mqttfalse undefined undefined
<sender> DEST_MQTT_HOST: mqtt://localhost
<mapper> use 6 lanes
app running on port. 3001
<sender> mqtt_sender client connected
mqtt_handler raw client connected
[34mâ„¹[39m [90mï½¢wdsï½£[39m: Project is running at http://192.168.178.144/
[34mâ„¹[39m [90mï½¢wdsï½£[39m: webpack output is served from 
[34mâ„¹[39m [90mï½¢wdsï½£[39m: Content not from webpack is served from /Users/matthiasfuchs/projects/schwimmen/webtiming/react_frontend/administration/public
[34mâ„¹[39m [90mï½¢wdsï½£[39m: 404s will fallback to /
Starting the development server...

websocket backend Subscribing to mqtt://localhost
Files successfully emitted, waiting for typecheck results...
websocket backend Client disconnected
/GET
Compiled successfully!

You can now view administration in the browser.

  Local:            http://localhost:3000
  On Your Network:  http://192.168.178.144:3000

Note that the development build is not optimized.
To create a production build, use npm run build.

websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584034401"}
websocket backend mainchannel {"type":"start","time":"1584034401"}
start
websocket backend send {"type":"start","time":"1584034401"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584034896"}
websocket backend mainchannel {"type":"start","time":"1584034896"}
start
websocket backend send {"type":"start","time":"1584034896"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584034900"}
race 0
<incoming> Type: header
Event: -0-
HEAT: 0
<swim_events> getInternalHeatId 0 0
<swim_events> getInternalHeatId crash 0 0 mode ALL
<swim_events> nothing found !!!
Event: -0-
<swim_event> search for number 0
<swim_event> single event
websocket backend mainchannel {"type":"race","time":"1584034900"}
race
websocket backend send {"type":"race","time":"1584034900"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"0","heat":"0","competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"0","heat":"0","competition":"43. FÃ¼rther Kinderschwimmen"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584034904"}
websocket backend mainchannel {"type":"start","time":"1584034904"}
start
websocket backend send {"type":"start","time":"1584034904"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584034921"}
race 0
<incoming> Type: header
Event: -0-
HEAT: 0
<swim_events> getInternalHeatId 0 0
<swim_events> getInternalHeatId crash 0 0 mode ALL
<swim_events> nothing found !!!
Event: -0-
<swim_event> search for number 0
<swim_event> single event
websocket backend mainchannel {"type":"race","time":"1584034921"}
race
websocket backend send {"type":"race","time":"1584034921"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"0","heat":"0","competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"0","heat":"0","competition":"43. FÃ¼rther Kinderschwimmen"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584034927"}
websocket backend mainchannel {"type":"start","time":"1584034927"}
start
websocket backend send {"type":"start","time":"1584034927"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"header 1 1"}
mqtt_handler datamapping incoming header 1 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584034948"}
websocket backend mainchannel {"type":"start","time":"1584034948"}
start
websocket backend send {"type":"start","time":"1584034948"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584034950"}
race 1
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584034950"}
race
websocket backend send {"type":"race","time":"1584034950"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584034954"}
websocket backend mainchannel {"type":"start","time":"1584034954"}
start
websocket backend send {"type":"start","time":"1584034954"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"message s"}
mqtt_handler datamapping incoming message s
<message_mapper> beginn parse
<incoming> Type: message
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"message","value":"s","time":"1584035054"}
websocket backend mainchannel {"type":"message","value":"s","time":"1584035054"}
message
websocket backend send {"type":"message","value":"s","time":"1584035054"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584035058"}
websocket backend mainchannel {"type":"start","time":"1584035058"}
start
websocket backend send {"type":"start","time":"1584035058"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584035065"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584035065"}
video
websocket backend send {"type":"video","version":"2","time":"1584035065"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584035069"}
websocket backend mainchannel {"type":"start","time":"1584035069"}
start
websocket backend send {"type":"start","time":"1584035069"}
/POST
Message: {"message":"clock"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584035076"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584035076"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584035076"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584035080"}
websocket backend mainchannel {"type":"start","time":"1584035080"}
start
websocket backend send {"type":"start","time":"1584035080"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584035132"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584035132"}
video
websocket backend send {"type":"video","version":"2","time":"1584035132"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584035135"}
websocket backend mainchannel {"type":"start","time":"1584035135"}
start
websocket backend send {"type":"start","time":"1584035135"}
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584035138"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584035138"}
video
websocket backend send {"type":"video","version":"3","time":"1584035138"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584035142"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584035142"}
video
websocket backend send {"type":"video","version":"1","time":"1584035142"}
/POST
Message: {"message":"message s"}
mqtt_handler datamapping incoming message s
<message_mapper> beginn parse
<incoming> Type: message
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"message","value":"s","time":"1584035145"}
websocket backend mainchannel {"type":"message","value":"s","time":"1584035145"}
message
websocket backend send {"type":"message","value":"s","time":"1584035145"}
/POST
Message: {"message":"clock"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584035149"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584035149"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584035149"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584035153"}
websocket backend mainchannel {"type":"start","time":"1584035153"}
start
websocket backend send {"type":"start","time":"1584035153"}
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584035157"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584035157"}
video
websocket backend send {"type":"video","version":"3","time":"1584035157"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584035160"}
websocket backend mainchannel {"type":"start","time":"1584035160"}
start
websocket backend send {"type":"start","time":"1584035160"}
/POST
Message: {"message":"clock"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584035165"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584035165"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584035165"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584035169"}
websocket backend mainchannel {"type":"start","time":"1584035169"}
start
websocket backend send {"type":"start","time":"1584035169"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"message s"}
mqtt_handler datamapping incoming message s
<message_mapper> beginn parse
<incoming> Type: message
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"message","value":"s","time":"1584035264"}
websocket backend mainchannel {"type":"message","value":"s","time":"1584035264"}
message
websocket backend send {"type":"message","value":"s","time":"1584035264"}
/POST
Message: {"message":"lane 1 1:11,11 1"}
mqtt_handler datamapping incoming lane 1 1:11,11 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 1
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"1","place":"1","time":"1:11,11","heat":"1"}
<message_mapper> store lane 1: lane 1 1:11,11 1
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"1","time":"1:11,11","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"1","time":"1:11,11","heat":"1"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584035303"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584035303"}
video
websocket backend send {"type":"video","version":"1","time":"1584035303"}
/POST
Message: {"message":"header 1 2"}
mqtt_handler datamapping incoming header 1 2
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 2
<swim_events> getInternalHeatId 1 2
<swim_event> number heats 25608
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
----------------- reset message
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584035429"}
websocket backend mainchannel {"type":"start","time":"1584035429"}
start
websocket backend send {"type":"start","time":"1584035429"}
/POST
Message: {"message":"header 1 2"}
mqtt_handler datamapping incoming header 1 2
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 2
<swim_events> getInternalHeatId 1 2
<swim_event> number heats 25608
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"stop"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584035554"}
websocket backend mainchannel {"type":"stop","time":"1584035554"}
stop
websocket backend send {"type":"stop","time":"1584035554"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584035559"}
websocket backend mainchannel {"type":"start","time":"1584035559"}
start
websocket backend send {"type":"start","time":"1584035559"}
/POST
Message: {"message":"lane 1 1:11,11 1"}
mqtt_handler datamapping incoming lane 1 1:11,11 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 1
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"2"}
<message_mapper> store lane 1: lane 1 1:11,11 1
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"2"}
/POST
Message: {"message":"lane 1 1:11,11 1"}
mqtt_handler datamapping incoming lane 1 1:11,11 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 1
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"2"}
<message_mapper> store lane 1: lane 1 1:11,11 1
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"2"}
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1584038060"}
websocket backend mainchannel {"type":"startlist","time":"1584038060"}
startlist
websocket backend send {"type":"startlist","time":"1584038060"}
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1584038083"}
websocket backend mainchannel {"type":"startlist","time":"1584038083"}
startlist
websocket backend send {"type":"startlist","time":"1584038083"}
/POST
Message: {"message":"header 1 1"}
mqtt_handler datamapping incoming header 1 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"header 1 2"}
mqtt_handler datamapping incoming header 1 2
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 2
<swim_events> getInternalHeatId 1 2
<swim_event> number heats 25608
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584038301"}
websocket backend mainchannel {"type":"start","time":"1584038301"}
start
websocket backend send {"type":"start","time":"1584038301"}
/POST
Message: {"message":"header 1 1"}
mqtt_handler datamapping incoming header 1 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"header 1 2"}
mqtt_handler datamapping incoming header 1 2
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 2
<swim_events> getInternalHeatId 1 2
<swim_event> number heats 25608
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1584038469"}
websocket backend mainchannel {"type":"startlist","time":"1584038469"}
startlist
websocket backend send {"type":"startlist","time":"1584038469"}
/POST
Message: {"message":"header 1 1"}
mqtt_handler datamapping incoming header 1 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"header 1 12"}
mqtt_handler datamapping incoming header 1 12
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 12
<swim_events> getInternalHeatId 1 12
<swim_event> number heats 
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"12","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 2
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 3
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 4
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 5
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"12","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"12","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"12"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"12"}
websocket backend mainchannel {"type":"lane","lane":"2","event":"1","place":"undefined","time":"undefined","heat":"12"}
lane
websocket backend send {"type":"lane","lane":"2","event":"1","place":"undefined","time":"undefined","heat":"12"}
websocket backend mainchannel {"type":"lane","lane":"3","event":"1","place":"undefined","time":"undefined","heat":"12"}
lane
websocket backend send {"type":"lane","lane":"3","event":"1","place":"undefined","time":"undefined","heat":"12"}
websocket backend mainchannel {"type":"lane","lane":"4","event":"1","place":"undefined","time":"undefined","heat":"12"}
lane
websocket backend send {"type":"lane","lane":"4","event":"1","place":"undefined","time":"undefined","heat":"12"}
websocket backend mainchannel {"type":"lane","lane":"5","event":"1","place":"undefined","time":"undefined","heat":"12"}
lane
websocket backend send {"type":"lane","lane":"5","event":"1","place":"undefined","time":"undefined","heat":"12"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"12"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"12"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"lane 1 1:11,11 1"}
mqtt_handler datamapping incoming lane 1 1:11,11 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 1
<swim_event> get swimmer for internalheatid  no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"1","place":"1","time":"1:11,11","heat":"12"}
<message_mapper> store lane 1: lane 1 1:11,11 1
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"1","time":"1:11,11","heat":"12"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"1","time":"1:11,11","heat":"12"}
/POST
Message: {"message":"header 1 1"}
mqtt_handler datamapping incoming header 1 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584038659"}
race 1
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584038659"}
race
websocket backend send {"type":"race","time":"1584038659"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584038669"}
race 1
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584038669"}
race
websocket backend send {"type":"race","time":"1584038669"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1584038744"}
websocket backend mainchannel {"type":"startlist","time":"1584038744"}
startlist
websocket backend send {"type":"startlist","time":"1584038744"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584038748"}
race 1
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584038748"}
race
websocket backend send {"type":"race","time":"1584038748"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1584038757"}
websocket backend mainchannel {"type":"startlist","time":"1584038757"}
startlist
websocket backend send {"type":"startlist","time":"1584038757"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584038764"}
race 1
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584038764"}
race
websocket backend send {"type":"race","time":"1584038764"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584038769"}
race 1
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584038769"}
race
websocket backend send {"type":"race","time":"1584038769"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584038776"}
websocket backend mainchannel {"type":"start","time":"1584038776"}
start
websocket backend send {"type":"start","time":"1584038776"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"header 1 2"}
mqtt_handler datamapping incoming header 1 2
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 2
<swim_events> getInternalHeatId 1 2
<swim_event> number heats 25608
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584038839"}
race 1
<incoming> Type: header
Event: -1-
HEAT: 2
<swim_events> getInternalHeatId 1 2
<swim_event> number heats 25608
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"race","time":"1584038839"}
race
websocket backend send {"type":"race","time":"1584038839"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
/POST
Message: {"message":"stop"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584038850"}
websocket backend mainchannel {"type":"stop","time":"1584038850"}
stop
websocket backend send {"type":"stop","time":"1584038850"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584038851"}
websocket backend mainchannel {"type":"start","time":"1584038851"}
start
websocket backend send {"type":"start","time":"1584038851"}
/POST
Message: {"message":"lane 1 1:11,11 1"}
mqtt_handler datamapping incoming lane 1 1:11,11 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 1
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"2"}
<message_mapper> store lane 1: lane 1 1:11,11 1
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"2"}
/POST
Message: {"message":"header 1 3"}
mqtt_handler datamapping incoming header 1 3
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 3
<swim_events> getInternalHeatId 1 3
<swim_event> number heats 25609
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584038883"}
websocket backend mainchannel {"type":"start","time":"1584038883"}
start
websocket backend send {"type":"start","time":"1584038883"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584038907"}
race 1
<incoming> Type: header
Event: -1-
HEAT: 3
<swim_events> getInternalHeatId 1 3
<swim_event> number heats 25609
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"race","time":"1584038907"}
race
websocket backend send {"type":"race","time":"1584038907"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
/POST
Message: {"message":"lane 1 1:11,11 2"}
mqtt_handler datamapping incoming lane 1 1:11,11 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 2
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"2","time":"1:11,11","heat":"3"}
<message_mapper> store lane 1: lane 1 1:11,11 2
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"2","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"2","time":"1:11,11","heat":"3"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584038985"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584038985"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584038985"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584038986"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584038986"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584038986"}
mqtt_handler datamapping incoming header 1 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
----------------- reset clock
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584038994"}
websocket backend mainchannel {"type":"start","time":"1584038994"}
start
websocket backend send {"type":"start","time":"1584038994"}
mqtt_handler datamapping incoming lane 1 1:39,9 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:39,9
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"1","place":"0","time":"1:39,9","heat":"1"}
<message_mapper> store lane 1: lane 1 1:39,9 0
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"0","time":"1:39,9","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"0","time":"1:39,9","heat":"1"}
mqtt_handler datamapping incoming lane 2 1:0,60 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:0,60
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"1:0,60","heat":"1"}
<message_mapper> store lane 2: lane 2 1:0,60 0
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"1:0,60","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"1:0,60","heat":"1"}
mqtt_handler datamapping incoming lane 3 0:59,82 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:59,82
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:59,82","heat":"1"}
<message_mapper> store lane 3: lane 3 0:59,82 0
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:59,82","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:59,82","heat":"1"}
mqtt_handler datamapping incoming lane 4 0:57,39 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:57,39
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"0:57,39","heat":"1"}
<message_mapper> store lane 4: lane 4 0:57,39 0
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"0:57,39","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"0:57,39","heat":"1"}
mqtt_handler datamapping incoming lane 5 0:43,35 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:43,35
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:43,35","heat":"1"}
<message_mapper> store lane 5: lane 5 0:43,35 0
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:43,35","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:43,35","heat":"1"}
mqtt_handler datamapping incoming lane 6 1:51,26 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:51,26
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"1","place":"0","time":"1:51,26","heat":"1"}
<message_mapper> store lane 6: lane 6 1:51,26 0
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"0","time":"1:51,26","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"0","time":"1:51,26","heat":"1"}
mqtt_handler datamapping incoming lane 1 1:59,64 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:59,64
(place)lane: 1
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"1","place":"1","time":"1:59,64","heat":"1"}
<message_mapper> store lane 1: lane 1 1:59,64 1
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"1","time":"1:59,64","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"1","time":"1:59,64","heat":"1"}
mqtt_handler datamapping incoming lane 2 0:27,18 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:27,18
(place)lane: 2
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"2","time":"0:27,18","heat":"1"}
<message_mapper> store lane 2: lane 2 0:27,18 2
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"2","time":"0:27,18","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"2","time":"0:27,18","heat":"1"}
mqtt_handler datamapping incoming lane 3 0:45,2 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:45,2
(place)lane: 3
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"0:45,2","heat":"1"}
<message_mapper> store lane 3: lane 3 0:45,2 3
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"0:45,2","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"0:45,2","heat":"1"}
mqtt_handler datamapping incoming lane 4 0:11,20 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:11,20
(place)lane: 4
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"4","time":"0:11,20","heat":"1"}
<message_mapper> store lane 4: lane 4 0:11,20 4
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"4","time":"0:11,20","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"4","time":"0:11,20","heat":"1"}
mqtt_handler datamapping incoming lane 5 1:56,15 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:56,15
(place)lane: 5
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"1:56,15","heat":"1"}
<message_mapper> store lane 5: lane 5 1:56,15 5
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"1:56,15","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"1:56,15","heat":"1"}
mqtt_handler datamapping incoming lane 6 0:50,93 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:50,93
(place)lane: 6
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"1","place":"6","time":"0:50,93","heat":"1"}
<message_mapper> store lane 6: lane 6 0:50,93 6
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"6","time":"0:50,93","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"6","time":"0:50,93","heat":"1"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584039005"}
websocket backend mainchannel {"type":"stop","time":"1584039005"}
stop
websocket backend send {"type":"stop","time":"1584039005"}
mqtt_handler datamapping incoming header 1 2
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 2
<swim_events> getInternalHeatId 1 2
<swim_event> number heats 25608
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584039011"}
websocket backend mainchannel {"type":"start","time":"1584039011"}
start
websocket backend send {"type":"start","time":"1584039011"}
mqtt_handler datamapping incoming lane 1 1:4,73 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:4,73
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:4,73","heat":"2"}
<message_mapper> store lane 1: lane 1 1:4,73 0
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:4,73","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:4,73","heat":"2"}
mqtt_handler datamapping incoming lane 2 1:20,34 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:20,34
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"0","time":"1:20,34","heat":"2"}
<message_mapper> store lane 2: lane 2 1:20,34 0
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"0","time":"1:20,34","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"0","time":"1:20,34","heat":"2"}
mqtt_handler datamapping incoming lane 3 1:4,83 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:4,83
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:4,83","heat":"2"}
<message_mapper> store lane 3: lane 3 1:4,83 0
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:4,83","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:4,83","heat":"2"}
mqtt_handler datamapping incoming lane 4 1:35,13 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:35,13
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"1:35,13","heat":"2"}
<message_mapper> store lane 4: lane 4 1:35,13 0
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"1:35,13","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"1:35,13","heat":"2"}
mqtt_handler datamapping incoming lane 5 1:5,31 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:5,31
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:5,31","heat":"2"}
<message_mapper> store lane 5: lane 5 1:5,31 0
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:5,31","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:5,31","heat":"2"}
mqtt_handler datamapping incoming lane 6 0:48,95 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:48,95
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"0","time":"0:48,95","heat":"2"}
<message_mapper> store lane 6: lane 6 0:48,95 0
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"0","time":"0:48,95","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"0","time":"0:48,95","heat":"2"}
mqtt_handler datamapping incoming lane 1 0:24,35 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:24,35
(place)lane: 1
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"0:24,35","heat":"2"}
<message_mapper> store lane 1: lane 1 0:24,35 1
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"0:24,35","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"0:24,35","heat":"2"}
mqtt_handler datamapping incoming lane 2 0:38,59 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:38,59
(place)lane: 2
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"2","time":"0:38,59","heat":"2"}
<message_mapper> store lane 2: lane 2 0:38,59 2
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"2","time":"0:38,59","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"2","time":"0:38,59","heat":"2"}
mqtt_handler datamapping incoming lane 3 1:9,8 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:9,8
(place)lane: 3
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"1:9,8","heat":"2"}
<message_mapper> store lane 3: lane 3 1:9,8 3
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"1:9,8","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"1:9,8","heat":"2"}
mqtt_handler datamapping incoming lane 4 1:3,27 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:3,27
(place)lane: 4
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"4","time":"1:3,27","heat":"2"}
<message_mapper> store lane 4: lane 4 1:3,27 4
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"4","time":"1:3,27","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"4","time":"1:3,27","heat":"2"}
mqtt_handler datamapping incoming lane 5 0:51,8 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:51,8
(place)lane: 5
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"0:51,8","heat":"2"}
<message_mapper> store lane 5: lane 5 0:51,8 5
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"0:51,8","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"0:51,8","heat":"2"}
mqtt_handler datamapping incoming lane 6 1:55,21 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:55,21
(place)lane: 6
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"6","time":"1:55,21","heat":"2"}
<message_mapper> store lane 6: lane 6 1:55,21 6
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"6","time":"1:55,21","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"6","time":"1:55,21","heat":"2"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584039023"}
websocket backend mainchannel {"type":"stop","time":"1584039023"}
stop
websocket backend send {"type":"stop","time":"1584039023"}
mqtt_handler datamapping incoming header 1 3
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 3
<swim_events> getInternalHeatId 1 3
<swim_event> number heats 25609
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584039029"}
websocket backend mainchannel {"type":"start","time":"1584039029"}
start
websocket backend send {"type":"start","time":"1584039029"}
mqtt_handler datamapping incoming lane 1 1:31,19 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:31,19
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:31,19","heat":"3"}
<message_mapper> store lane 1: lane 1 1:31,19 0
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:31,19","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:31,19","heat":"3"}
mqtt_handler datamapping incoming lane 2 0:2,18 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:2,18
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:2,18","heat":"3"}
<message_mapper> store lane 2: lane 2 0:2,18 0
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:2,18","heat":"3"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:2,18","heat":"3"}
mqtt_handler datamapping incoming lane 3 0:0,84 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:0,84
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:0,84","heat":"3"}
<message_mapper> store lane 3: lane 3 0:0,84 0
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:0,84","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:0,84","heat":"3"}
mqtt_handler datamapping incoming lane 4 1:8,16 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:8,16
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:8,16","heat":"3"}
<message_mapper> store lane 4: lane 4 1:8,16 0
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:8,16","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:8,16","heat":"3"}
mqtt_handler datamapping incoming lane 5 0:48,64 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:48,64
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:48,64","heat":"3"}
<message_mapper> store lane 5: lane 5 0:48,64 0
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:48,64","heat":"3"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:48,64","heat":"3"}
mqtt_handler datamapping incoming lane 6 0:14,58 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:14,58
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:14,58","heat":"3"}
<message_mapper> store lane 6: lane 6 0:14,58 0
websocket backend mainchannel {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:14,58","heat":"3"}
lane
websocket backend send {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:14,58","heat":"3"}
mqtt_handler datamapping incoming lane 1 1:1,12 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:1,12
(place)lane: 1
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"1:1,12","heat":"3"}
<message_mapper> store lane 1: lane 1 1:1,12 1
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"1:1,12","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"1:1,12","heat":"3"}
mqtt_handler datamapping incoming lane 2 0:33,3 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:33,3
(place)lane: 2
<swim_event> get swimmer for internalheatid 25609 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"2","time":"0:33,3","heat":"3"}
<message_mapper> store lane 2: lane 2 0:33,3 2
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"2","time":"0:33,3","heat":"3"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"2","time":"0:33,3","heat":"3"}
mqtt_handler datamapping incoming lane 3 0:3,94 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:3,94
(place)lane: 3
<swim_event> get swimmer for internalheatid 25609 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"0:3,94","heat":"3"}
<message_mapper> store lane 3: lane 3 0:3,94 3
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"0:3,94","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"0:3,94","heat":"3"}
mqtt_handler datamapping incoming lane 4 0:24,59 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:24,59
(place)lane: 4
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"4","time":"0:24,59","heat":"3"}
<message_mapper> store lane 4: lane 4 0:24,59 4
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"4","time":"0:24,59","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"4","time":"0:24,59","heat":"3"}
mqtt_handler datamapping incoming lane 5 0:7,31 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:7,31
(place)lane: 5
<swim_event> get swimmer for internalheatid 25609 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"0:7,31","heat":"3"}
<message_mapper> store lane 5: lane 5 0:7,31 5
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"0:7,31","heat":"3"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"0:7,31","heat":"3"}
mqtt_handler datamapping incoming lane 6 1:14,34 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:14,34
(place)lane: 6
<swim_event> get swimmer for internalheatid 25609 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"6","time":"1:14,34","heat":"3"}
<message_mapper> store lane 6: lane 6 1:14,34 6
websocket backend mainchannel {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"6","time":"1:14,34","heat":"3"}
lane
websocket backend send {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"6","time":"1:14,34","heat":"3"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584039040"}
websocket backend mainchannel {"type":"stop","time":"1584039040"}
stop
websocket backend send {"type":"stop","time":"1584039040"}
mqtt_handler datamapping incoming header 1 4
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 4
<swim_events> getInternalHeatId 1 4
<swim_event> number heats 25610
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"4","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"4","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"4","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584039046"}
websocket backend mainchannel {"type":"start","time":"1584039046"}
start
websocket backend send {"type":"start","time":"1584039046"}
mqtt_handler datamapping incoming lane 1 0:38,58 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:38,58
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:38,58","heat":"4"}
<message_mapper> store lane 1: lane 1 0:38,58 0
websocket backend mainchannel {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:38,58","heat":"4"}
lane
websocket backend send {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:38,58","heat":"4"}
mqtt_handler datamapping incoming lane 2 1:16,42 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:16,42
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:16,42","heat":"4"}
<message_mapper> store lane 2: lane 2 1:16,42 0
websocket backend mainchannel {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:16,42","heat":"4"}
lane
websocket backend send {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:16,42","heat":"4"}
mqtt_handler datamapping incoming lane 3 0:14,34 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:14,34
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:14,34","heat":"4"}
<message_mapper> store lane 3: lane 3 0:14,34 0
websocket backend mainchannel {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:14,34","heat":"4"}
lane
websocket backend send {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:14,34","heat":"4"}
mqtt_handler datamapping incoming lane 4 1:57,74 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:57,74
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"0","time":"1:57,74","heat":"4"}
<message_mapper> store lane 4: lane 4 1:57,74 0
websocket backend mainchannel {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"0","time":"1:57,74","heat":"4"}
lane
websocket backend send {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"0","time":"1:57,74","heat":"4"}
mqtt_handler datamapping incoming lane 5 0:39,34 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:39,34
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:39,34","heat":"4"}
<message_mapper> store lane 5: lane 5 0:39,34 0
websocket backend mainchannel {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:39,34","heat":"4"}
lane
websocket backend send {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:39,34","heat":"4"}
mqtt_handler datamapping incoming lane 6 0:17,78 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:17,78
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"0:17,78","heat":"4"}
<message_mapper> store lane 6: lane 6 0:17,78 0
websocket backend mainchannel {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"0:17,78","heat":"4"}
lane
websocket backend send {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"0:17,78","heat":"4"}
mqtt_handler datamapping incoming lane 1 0:1,84 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:1,84
(place)lane: 1
<swim_event> get swimmer for internalheatid 25610 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"0:1,84","heat":"4"}
<message_mapper> store lane 1: lane 1 0:1,84 1
websocket backend mainchannel {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"0:1,84","heat":"4"}
lane
websocket backend send {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"0:1,84","heat":"4"}
mqtt_handler datamapping incoming lane 2 0:8,93 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:8,93
(place)lane: 2
<swim_event> get swimmer for internalheatid 25610 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"2","time":"0:8,93","heat":"4"}
<message_mapper> store lane 2: lane 2 0:8,93 2
websocket backend mainchannel {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"2","time":"0:8,93","heat":"4"}
lane
websocket backend send {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"2","time":"0:8,93","heat":"4"}
mqtt_handler datamapping incoming lane 3 0:33,72 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:33,72
(place)lane: 3
<swim_event> get swimmer for internalheatid 25610 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"0:33,72","heat":"4"}
<message_mapper> store lane 3: lane 3 0:33,72 3
websocket backend mainchannel {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"0:33,72","heat":"4"}
lane
websocket backend send {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"0:33,72","heat":"4"}
mqtt_handler datamapping incoming lane 4 0:10,90 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:10,90
(place)lane: 4
<swim_event> get swimmer for internalheatid 25610 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"4","time":"0:10,90","heat":"4"}
<message_mapper> store lane 4: lane 4 0:10,90 4
websocket backend mainchannel {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"4","time":"0:10,90","heat":"4"}
lane
websocket backend send {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"4","time":"0:10,90","heat":"4"}
mqtt_handler datamapping incoming lane 5 0:7,59 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:7,59
(place)lane: 5
<swim_event> get swimmer for internalheatid 25610 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"0:7,59","heat":"4"}
<message_mapper> store lane 5: lane 5 0:7,59 5
websocket backend mainchannel {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"0:7,59","heat":"4"}
lane
websocket backend send {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"0:7,59","heat":"4"}
mqtt_handler datamapping incoming lane 6 1:42,34 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:42,34
(place)lane: 6
<swim_event> get swimmer for internalheatid 25610 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"6","time":"1:42,34","heat":"4"}
<message_mapper> store lane 6: lane 6 1:42,34 6
websocket backend mainchannel {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"6","time":"1:42,34","heat":"4"}
lane
websocket backend send {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"6","time":"1:42,34","heat":"4"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584039058"}
websocket backend mainchannel {"type":"stop","time":"1584039058"}
stop
websocket backend send {"type":"stop","time":"1584039058"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584039061"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584039061"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584039061"}
mqtt_handler datamapping incoming header 2 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -2-
HEAT: 1
<swim_events> getInternalHeatId 2 1
<swim_event> number heats 25612
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"2","heat":"1","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25612 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25612 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25612 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25612 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25612 no relay lane 5
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25612 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"1","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
----------------- reset clock
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"1","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"2","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"2","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"5","event":"2","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"5","event":"2","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"1"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584039069"}
websocket backend mainchannel {"type":"start","time":"1584039069"}
start
websocket backend send {"type":"start","time":"1584039069"}
mqtt_handler datamapping incoming lane 1 1:23,19 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:23,19
(place)lane: 0
<swim_event> get swimmer for internalheatid 25612 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"2","place":"0","time":"1:23,19","heat":"1"}
<message_mapper> store lane 1: lane 1 1:23,19 0
websocket backend mainchannel {"type":"lane","lane":"1","event":"2","place":"0","time":"1:23,19","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"2","place":"0","time":"1:23,19","heat":"1"}
mqtt_handler datamapping incoming lane 2 1:47,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:47,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25612 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"1:47,11","heat":"1"}
<message_mapper> store lane 2: lane 2 1:47,11 0
websocket backend mainchannel {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"1:47,11","heat":"1"}
lane
websocket backend send {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"1:47,11","heat":"1"}
mqtt_handler datamapping incoming lane 3 1:28,57 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:28,57
(place)lane: 0
<swim_event> get swimmer for internalheatid 25612 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"1:28,57","heat":"1"}
<message_mapper> store lane 3: lane 3 1:28,57 0
websocket backend mainchannel {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"1:28,57","heat":"1"}
lane
websocket backend send {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"1:28,57","heat":"1"}
mqtt_handler datamapping incoming lane 4 1:6,21 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:6,21
(place)lane: 0
<swim_event> get swimmer for internalheatid 25612 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"0","time":"1:6,21","heat":"1"}
<message_mapper> store lane 4: lane 4 1:6,21 0
websocket backend mainchannel {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"0","time":"1:6,21","heat":"1"}
lane
websocket backend send {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"0","time":"1:6,21","heat":"1"}
mqtt_handler datamapping incoming lane 5 1:4,27 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:4,27
(place)lane: 0
<swim_event> get swimmer for internalheatid 25612 no relay lane 5
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"5","event":"2","place":"0","time":"1:4,27","heat":"1"}
<message_mapper> store lane 5: lane 5 1:4,27 0
websocket backend mainchannel {"type":"lane","lane":"5","event":"2","place":"0","time":"1:4,27","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"5","event":"2","place":"0","time":"1:4,27","heat":"1"}
mqtt_handler datamapping incoming lane 6 0:35,15 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:35,15
(place)lane: 0
<swim_event> get swimmer for internalheatid 25612 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"2","place":"0","time":"0:35,15","heat":"1"}
<message_mapper> store lane 6: lane 6 0:35,15 0
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"0","time":"0:35,15","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"0","time":"0:35,15","heat":"1"}
mqtt_handler datamapping incoming lane 1 0:25,7 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:25,7
(place)lane: 1
<swim_event> get swimmer for internalheatid 25612 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"2","place":"1","time":"0:25,7","heat":"1"}
<message_mapper> store lane 1: lane 1 0:25,7 1
websocket backend mainchannel {"type":"lane","lane":"1","event":"2","place":"1","time":"0:25,7","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"2","place":"1","time":"0:25,7","heat":"1"}
mqtt_handler datamapping incoming lane 2 1:4,64 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:4,64
(place)lane: 2
<swim_event> get swimmer for internalheatid 25612 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"2","time":"1:4,64","heat":"1"}
<message_mapper> store lane 2: lane 2 1:4,64 2
websocket backend mainchannel {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"2","time":"1:4,64","heat":"1"}
lane
websocket backend send {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"2","time":"1:4,64","heat":"1"}
mqtt_handler datamapping incoming lane 3 0:36,8 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:36,8
(place)lane: 3
<swim_event> get swimmer for internalheatid 25612 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"3","time":"0:36,8","heat":"1"}
<message_mapper> store lane 3: lane 3 0:36,8 3
websocket backend mainchannel {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"3","time":"0:36,8","heat":"1"}
lane
websocket backend send {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"3","time":"0:36,8","heat":"1"}
mqtt_handler datamapping incoming lane 4 0:36,51 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:36,51
(place)lane: 4
<swim_event> get swimmer for internalheatid 25612 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"4","time":"0:36,51","heat":"1"}
<message_mapper> store lane 4: lane 4 0:36,51 4
websocket backend mainchannel {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"4","time":"0:36,51","heat":"1"}
lane
websocket backend send {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"4","time":"0:36,51","heat":"1"}
mqtt_handler datamapping incoming lane 5 0:53,10 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:53,10
(place)lane: 5
<swim_event> get swimmer for internalheatid 25612 no relay lane 5
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"5","event":"2","place":"5","time":"0:53,10","heat":"1"}
<message_mapper> store lane 5: lane 5 0:53,10 5
websocket backend mainchannel {"type":"lane","lane":"5","event":"2","place":"5","time":"0:53,10","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"5","event":"2","place":"5","time":"0:53,10","heat":"1"}
mqtt_handler datamapping incoming lane 6 0:53,28 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:53,28
(place)lane: 6
<swim_event> get swimmer for internalheatid 25612 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"2","place":"6","time":"0:53,28","heat":"1"}
<message_mapper> store lane 6: lane 6 0:53,28 6
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"6","time":"0:53,28","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"6","time":"0:53,28","heat":"1"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584039080"}
websocket backend mainchannel {"type":"stop","time":"1584039080"}
stop
websocket backend send {"type":"stop","time":"1584039080"}
mqtt_handler datamapping incoming header 2 2
<message_mapper> beginn parse
<incoming> Type: header
Event: -2-
HEAT: 2
<swim_events> getInternalHeatId 2 2
<swim_event> number heats 25613
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584039086"}
websocket backend mainchannel {"type":"start","time":"1584039086"}
start
websocket backend send {"type":"start","time":"1584039086"}
mqtt_handler datamapping incoming lane 1 0:54,23 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:54,23
(place)lane: 0
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"0","time":"0:54,23","heat":"2"}
<message_mapper> store lane 1: lane 1 0:54,23 0
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"0","time":"0:54,23","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"0","time":"0:54,23","heat":"2"}
mqtt_handler datamapping incoming lane 2 1:17,3 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:17,3
(place)lane: 0
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"1:17,3","heat":"2"}
<message_mapper> store lane 2: lane 2 1:17,3 0
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"1:17,3","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"1:17,3","heat":"2"}
mqtt_handler datamapping incoming lane 3 1:51,42 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:51,42
(place)lane: 0
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"1:51,42","heat":"2"}
<message_mapper> store lane 3: lane 3 1:51,42 0
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"1:51,42","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"1:51,42","heat":"2"}
mqtt_handler datamapping incoming lane 4 0:20,42 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:20,42
(place)lane: 0
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"0:20,42","heat":"2"}
<message_mapper> store lane 4: lane 4 0:20,42 0
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"0:20,42","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"0:20,42","heat":"2"}
mqtt_handler datamapping incoming lane 5 1:40,95 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:40,95
(place)lane: 0
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"1:40,95","heat":"2"}
<message_mapper> store lane 5: lane 5 1:40,95 0
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"1:40,95","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"1:40,95","heat":"2"}
mqtt_handler datamapping incoming lane 6 0:15,18 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:15,18
(place)lane: 0
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"2","place":"0","time":"0:15,18","heat":"2"}
<message_mapper> store lane 6: lane 6 0:15,18 0
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"0","time":"0:15,18","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"0","time":"0:15,18","heat":"2"}
mqtt_handler datamapping incoming lane 1 0:45,72 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:45,72
(place)lane: 1
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"1","time":"0:45,72","heat":"2"}
<message_mapper> store lane 1: lane 1 0:45,72 1
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"1","time":"0:45,72","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"1","time":"0:45,72","heat":"2"}
mqtt_handler datamapping incoming lane 2 1:6,50 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:6,50
(place)lane: 2
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"2","time":"1:6,50","heat":"2"}
<message_mapper> store lane 2: lane 2 1:6,50 2
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"2","time":"1:6,50","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"2","time":"1:6,50","heat":"2"}
mqtt_handler datamapping incoming lane 3 1:47,59 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:47,59
(place)lane: 3
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"3","time":"1:47,59","heat":"2"}
<message_mapper> store lane 3: lane 3 1:47,59 3
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"3","time":"1:47,59","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"3","time":"1:47,59","heat":"2"}
mqtt_handler datamapping incoming lane 4 0:13,35 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:13,35
(place)lane: 4
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"4","time":"0:13,35","heat":"2"}
<message_mapper> store lane 4: lane 4 0:13,35 4
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"4","time":"0:13,35","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"4","time":"0:13,35","heat":"2"}
mqtt_handler datamapping incoming lane 5 1:16,40 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:16,40
(place)lane: 5
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"5","time":"1:16,40","heat":"2"}
<message_mapper> store lane 5: lane 5 1:16,40 5
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"5","time":"1:16,40","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"5","time":"1:16,40","heat":"2"}
mqtt_handler datamapping incoming lane 6 1:55,41 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:55,41
(place)lane: 6
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"2","place":"6","time":"1:55,41","heat":"2"}
<message_mapper> store lane 6: lane 6 1:55,41 6
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"6","time":"1:55,41","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"6","time":"1:55,41","heat":"2"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584039097"}
websocket backend mainchannel {"type":"stop","time":"1584039097"}
stop
websocket backend send {"type":"stop","time":"1584039097"}
mqtt_handler datamapping incoming header 2 3
<message_mapper> beginn parse
<incoming> Type: header
Event: -2-
HEAT: 3
<swim_events> getInternalHeatId 2 3
<swim_event> number heats 25614
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"2","heat":"3","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25614 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25614 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25614 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25614 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25614 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25614 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"3","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"3","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24323","birthdate":"2013-01-01","firstname":"Alina","lastname":"Zeder","lane":"3","entrytime":"00:00:39.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24323","birthdate":"2013-01-01","firstname":"Alina","lastname":"Zeder","lane":"3","entrytime":"00:00:39.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"4","entrytime":"00:00:39.89","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"4","entrytime":"00:00:39.89","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24529","birthdate":"2013-01-01","firstname":"Louisa","lastname":"Heidenreich","lane":"5","entrytime":"00:00:42.76","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24529","birthdate":"2013-01-01","firstname":"Louisa","lastname":"Heidenreich","lane":"5","entrytime":"00:00:42.76","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"6","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"6","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"3"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584039103"}
websocket backend mainchannel {"type":"start","time":"1584039103"}
start
websocket backend send {"type":"start","time":"1584039103"}
mqtt_handler datamapping incoming lane 1 0:4,45 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:4,45
(place)lane: 0
<swim_event> get swimmer for internalheatid 25614 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"0:4,45","heat":"3"}
<message_mapper> store lane 1: lane 1 0:4,45 0
websocket backend mainchannel {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"0:4,45","heat":"3"}
lane
websocket backend send {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"0:4,45","heat":"3"}
mqtt_handler datamapping incoming lane 2 1:46,87 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:46,87
(place)lane: 0
<swim_event> get swimmer for internalheatid 25614 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"0","time":"1:46,87","heat":"3"}
<message_mapper> store lane 2: lane 2 1:46,87 0
websocket backend mainchannel {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"0","time":"1:46,87","heat":"3"}
lane
websocket backend send {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"0","time":"1:46,87","heat":"3"}
mqtt_handler datamapping incoming lane 3 1:22,87 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:22,87
(place)lane: 0
<swim_event> get swimmer for internalheatid 25614 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24323","birthdate":"2013-01-01","firstname":"Alina","lastname":"Zeder","lane":"3","entrytime":"00:00:39.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"0","time":"1:22,87","heat":"3"}
<message_mapper> store lane 3: lane 3 1:22,87 0
websocket backend mainchannel {"athleteid":"24323","birthdate":"2013-01-01","firstname":"Alina","lastname":"Zeder","lane":"3","entrytime":"00:00:39.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"0","time":"1:22,87","heat":"3"}
lane
websocket backend send {"athleteid":"24323","birthdate":"2013-01-01","firstname":"Alina","lastname":"Zeder","lane":"3","entrytime":"00:00:39.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"0","time":"1:22,87","heat":"3"}
mqtt_handler datamapping incoming lane 4 1:4,91 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:4,91
(place)lane: 0
<swim_event> get swimmer for internalheatid 25614 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"4","entrytime":"00:00:39.89","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"1:4,91","heat":"3"}
<message_mapper> store lane 4: lane 4 1:4,91 0
websocket backend mainchannel {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"4","entrytime":"00:00:39.89","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"1:4,91","heat":"3"}
lane
websocket backend send {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"4","entrytime":"00:00:39.89","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"1:4,91","heat":"3"}
mqtt_handler datamapping incoming lane 5 1:0,50 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:0,50
(place)lane: 0
<swim_event> get swimmer for internalheatid 25614 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24529","birthdate":"2013-01-01","firstname":"Louisa","lastname":"Heidenreich","lane":"5","entrytime":"00:00:42.76","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"1:0,50","heat":"3"}
<message_mapper> store lane 5: lane 5 1:0,50 0
websocket backend mainchannel {"athleteid":"24529","birthdate":"2013-01-01","firstname":"Louisa","lastname":"Heidenreich","lane":"5","entrytime":"00:00:42.76","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"1:0,50","heat":"3"}
lane
websocket backend send {"athleteid":"24529","birthdate":"2013-01-01","firstname":"Louisa","lastname":"Heidenreich","lane":"5","entrytime":"00:00:42.76","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"1:0,50","heat":"3"}
mqtt_handler datamapping incoming lane 6 1:59,26 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:59,26
(place)lane: 0
<swim_event> get swimmer for internalheatid 25614 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"6","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"1:59,26","heat":"3"}
<message_mapper> store lane 6: lane 6 1:59,26 0
websocket backend mainchannel {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"6","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"1:59,26","heat":"3"}
lane
websocket backend send {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"6","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"1:59,26","heat":"3"}
mqtt_handler datamapping incoming lane 1 0:7,50 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:7,50
(place)lane: 1
<swim_event> get swimmer for internalheatid 25614 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"1","time":"0:7,50","heat":"3"}
<message_mapper> store lane 1: lane 1 0:7,50 1
websocket backend mainchannel {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"1","time":"0:7,50","heat":"3"}
lane
websocket backend send {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"1","time":"0:7,50","heat":"3"}
mqtt_handler datamapping incoming lane 2 1:31,18 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:31,18
(place)lane: 2
<swim_event> get swimmer for internalheatid 25614 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"2","time":"1:31,18","heat":"3"}
<message_mapper> store lane 2: lane 2 1:31,18 2
websocket backend mainchannel {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"2","time":"1:31,18","heat":"3"}
lane
websocket backend send {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"2","time":"1:31,18","heat":"3"}
mqtt_handler datamapping incoming lane 3 0:38,8 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:38,8
(place)lane: 3
<swim_event> get swimmer for internalheatid 25614 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24323","birthdate":"2013-01-01","firstname":"Alina","lastname":"Zeder","lane":"3","entrytime":"00:00:39.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"3","time":"0:38,8","heat":"3"}
<message_mapper> store lane 3: lane 3 0:38,8 3
websocket backend mainchannel {"athleteid":"24323","birthdate":"2013-01-01","firstname":"Alina","lastname":"Zeder","lane":"3","entrytime":"00:00:39.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"3","time":"0:38,8","heat":"3"}
lane
websocket backend send {"athleteid":"24323","birthdate":"2013-01-01","firstname":"Alina","lastname":"Zeder","lane":"3","entrytime":"00:00:39.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"3","time":"0:38,8","heat":"3"}
mqtt_handler datamapping incoming lane 4 1:17,60 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:17,60
(place)lane: 4
<swim_event> get swimmer for internalheatid 25614 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"4","entrytime":"00:00:39.89","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"4","time":"1:17,60","heat":"3"}
<message_mapper> store lane 4: lane 4 1:17,60 4
websocket backend mainchannel {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"4","entrytime":"00:00:39.89","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"4","time":"1:17,60","heat":"3"}
lane
websocket backend send {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"4","entrytime":"00:00:39.89","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"4","time":"1:17,60","heat":"3"}
mqtt_handler datamapping incoming lane 5 0:45,70 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:45,70
(place)lane: 5
<swim_event> get swimmer for internalheatid 25614 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24529","birthdate":"2013-01-01","firstname":"Louisa","lastname":"Heidenreich","lane":"5","entrytime":"00:00:42.76","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"5","time":"0:45,70","heat":"3"}
<message_mapper> store lane 5: lane 5 0:45,70 5
websocket backend mainchannel {"athleteid":"24529","birthdate":"2013-01-01","firstname":"Louisa","lastname":"Heidenreich","lane":"5","entrytime":"00:00:42.76","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"5","time":"0:45,70","heat":"3"}
lane
websocket backend send {"athleteid":"24529","birthdate":"2013-01-01","firstname":"Louisa","lastname":"Heidenreich","lane":"5","entrytime":"00:00:42.76","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"5","time":"0:45,70","heat":"3"}
mqtt_handler datamapping incoming lane 6 0:56,72 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:56,72
(place)lane: 6
<swim_event> get swimmer for internalheatid 25614 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"6","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"6","time":"0:56,72","heat":"3"}
<message_mapper> store lane 6: lane 6 0:56,72 6
websocket backend mainchannel {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"6","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"6","time":"0:56,72","heat":"3"}
lane
websocket backend send {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"6","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"6","time":"0:56,72","heat":"3"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584039115"}
websocket backend mainchannel {"type":"stop","time":"1584039115"}
stop
websocket backend send {"type":"stop","time":"1584039115"}
mqtt_handler datamapping incoming header 2 4
<message_mapper> beginn parse
<incoming> Type: header
Event: -2-
HEAT: 4
<swim_events> getInternalHeatId 2 4
<swim_event> number heats 25615
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"2","heat":"4","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25615 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25615 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25615 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25615 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25615 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25615 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"4","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"4","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"1","entrytime":"00:00:36.41","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"1","entrytime":"00:00:36.41","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"25538","birthdate":"2012-01-01","firstname":"Leila","lastname":"Schomleu","lane":"2","entrytime":"00:00:36.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"25538","birthdate":"2012-01-01","firstname":"Leila","lastname":"Schomleu","lane":"2","entrytime":"00:00:36.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"25453","birthdate":"2012-01-01","firstname":"Anna","lastname":"SchrÃ¶ter","lane":"3","entrytime":"00:00:35.00","name":"SC Uttenreuth","code":"4383","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"25453","birthdate":"2012-01-01","firstname":"Anna","lastname":"SchrÃ¶ter","lane":"3","entrytime":"00:00:35.00","name":"SC Uttenreuth","code":"4383","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24716","birthdate":"2013-01-01","firstname":"Julia","lastname":"Ehnis","lane":"4","entrytime":"00:00:35.36","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24716","birthdate":"2013-01-01","firstname":"Julia","lastname":"Ehnis","lane":"4","entrytime":"00:00:35.36","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24721","birthdate":"2012-01-01","firstname":"Lia Sophie","lastname":"Fuchs","lane":"5","entrytime":"00:00:36.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24721","birthdate":"2012-01-01","firstname":"Lia Sophie","lastname":"Fuchs","lane":"5","entrytime":"00:00:36.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"25543","birthdate":"2013-01-01","firstname":"Tamina","lastname":"Schomleu","lane":"6","entrytime":"00:00:38.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"25543","birthdate":"2013-01-01","firstname":"Tamina","lastname":"Schomleu","lane":"6","entrytime":"00:00:38.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"4"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584039121"}
websocket backend mainchannel {"type":"start","time":"1584039121"}
start
websocket backend send {"type":"start","time":"1584039121"}
mqtt_handler datamapping incoming lane 1 0:17,23 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:17,23
(place)lane: 0
<swim_event> get swimmer for internalheatid 25615 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"1","entrytime":"00:00:36.41","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"2","place":"0","time":"0:17,23","heat":"4"}
<message_mapper> store lane 1: lane 1 0:17,23 0
websocket backend mainchannel {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"1","entrytime":"00:00:36.41","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"2","place":"0","time":"0:17,23","heat":"4"}
lane
websocket backend send {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"1","entrytime":"00:00:36.41","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"2","place":"0","time":"0:17,23","heat":"4"}
mqtt_handler datamapping incoming lane 2 0:52,88 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:52,88
(place)lane: 0
<swim_event> get swimmer for internalheatid 25615 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25538","birthdate":"2012-01-01","firstname":"Leila","lastname":"Schomleu","lane":"2","entrytime":"00:00:36.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"2","place":"0","time":"0:52,88","heat":"4"}
<message_mapper> store lane 2: lane 2 0:52,88 0
websocket backend mainchannel {"athleteid":"25538","birthdate":"2012-01-01","firstname":"Leila","lastname":"Schomleu","lane":"2","entrytime":"00:00:36.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"2","place":"0","time":"0:52,88","heat":"4"}
lane
websocket backend send {"athleteid":"25538","birthdate":"2012-01-01","firstname":"Leila","lastname":"Schomleu","lane":"2","entrytime":"00:00:36.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"2","place":"0","time":"0:52,88","heat":"4"}
mqtt_handler datamapping incoming lane 3 1:5,54 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:5,54
(place)lane: 0
<swim_event> get swimmer for internalheatid 25615 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25453","birthdate":"2012-01-01","firstname":"Anna","lastname":"SchrÃ¶ter","lane":"3","entrytime":"00:00:35.00","name":"SC Uttenreuth","code":"4383","type":"lane","event":"2","place":"0","time":"1:5,54","heat":"4"}
<message_mapper> store lane 3: lane 3 1:5,54 0
websocket backend mainchannel {"athleteid":"25453","birthdate":"2012-01-01","firstname":"Anna","lastname":"SchrÃ¶ter","lane":"3","entrytime":"00:00:35.00","name":"SC Uttenreuth","code":"4383","type":"lane","event":"2","place":"0","time":"1:5,54","heat":"4"}
lane
websocket backend send {"athleteid":"25453","birthdate":"2012-01-01","firstname":"Anna","lastname":"SchrÃ¶ter","lane":"3","entrytime":"00:00:35.00","name":"SC Uttenreuth","code":"4383","type":"lane","event":"2","place":"0","time":"1:5,54","heat":"4"}
mqtt_handler datamapping incoming lane 4 0:33,28 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:33,28
(place)lane: 0
<swim_event> get swimmer for internalheatid 25615 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24716","birthdate":"2013-01-01","firstname":"Julia","lastname":"Ehnis","lane":"4","entrytime":"00:00:35.36","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"0:33,28","heat":"4"}
<message_mapper> store lane 4: lane 4 0:33,28 0
websocket backend mainchannel {"athleteid":"24716","birthdate":"2013-01-01","firstname":"Julia","lastname":"Ehnis","lane":"4","entrytime":"00:00:35.36","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"0:33,28","heat":"4"}
lane
websocket backend send {"athleteid":"24716","birthdate":"2013-01-01","firstname":"Julia","lastname":"Ehnis","lane":"4","entrytime":"00:00:35.36","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"0:33,28","heat":"4"}
mqtt_handler datamapping incoming lane 5 0:43,31 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:43,31
(place)lane: 0
<swim_event> get swimmer for internalheatid 25615 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24721","birthdate":"2012-01-01","firstname":"Lia Sophie","lastname":"Fuchs","lane":"5","entrytime":"00:00:36.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"0:43,31","heat":"4"}
<message_mapper> store lane 5: lane 5 0:43,31 0
websocket backend mainchannel {"athleteid":"24721","birthdate":"2012-01-01","firstname":"Lia Sophie","lastname":"Fuchs","lane":"5","entrytime":"00:00:36.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"0:43,31","heat":"4"}
lane
websocket backend send {"athleteid":"24721","birthdate":"2012-01-01","firstname":"Lia Sophie","lastname":"Fuchs","lane":"5","entrytime":"00:00:36.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"0:43,31","heat":"4"}
mqtt_handler datamapping incoming lane 6 0:53,33 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:53,33
(place)lane: 0
<swim_event> get swimmer for internalheatid 25615 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25543","birthdate":"2013-01-01","firstname":"Tamina","lastname":"Schomleu","lane":"6","entrytime":"00:00:38.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"2","place":"0","time":"0:53,33","heat":"4"}
<message_mapper> store lane 6: lane 6 0:53,33 0
websocket backend mainchannel {"athleteid":"25543","birthdate":"2013-01-01","firstname":"Tamina","lastname":"Schomleu","lane":"6","entrytime":"00:00:38.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"2","place":"0","time":"0:53,33","heat":"4"}
lane
websocket backend send {"athleteid":"25543","birthdate":"2013-01-01","firstname":"Tamina","lastname":"Schomleu","lane":"6","entrytime":"00:00:38.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"2","place":"0","time":"0:53,33","heat":"4"}
mqtt_handler datamapping incoming lane 1 0:35,74 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:35,74
(place)lane: 1
<swim_event> get swimmer for internalheatid 25615 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"1","entrytime":"00:00:36.41","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"2","place":"1","time":"0:35,74","heat":"4"}
<message_mapper> store lane 1: lane 1 0:35,74 1
websocket backend mainchannel {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"1","entrytime":"00:00:36.41","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"2","place":"1","time":"0:35,74","heat":"4"}
lane
websocket backend send {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"1","entrytime":"00:00:36.41","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"2","place":"1","time":"0:35,74","heat":"4"}
mqtt_handler datamapping incoming lane 2 1:40,22 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:40,22
(place)lane: 2
<swim_event> get swimmer for internalheatid 25615 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25538","birthdate":"2012-01-01","firstname":"Leila","lastname":"Schomleu","lane":"2","entrytime":"00:00:36.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"2","place":"2","time":"1:40,22","heat":"4"}
<message_mapper> store lane 2: lane 2 1:40,22 2
websocket backend mainchannel {"athleteid":"25538","birthdate":"2012-01-01","firstname":"Leila","lastname":"Schomleu","lane":"2","entrytime":"00:00:36.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"2","place":"2","time":"1:40,22","heat":"4"}
lane
websocket backend send {"athleteid":"25538","birthdate":"2012-01-01","firstname":"Leila","lastname":"Schomleu","lane":"2","entrytime":"00:00:36.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"2","place":"2","time":"1:40,22","heat":"4"}
mqtt_handler datamapping incoming lane 3 0:10,34 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:10,34
(place)lane: 3
<swim_event> get swimmer for internalheatid 25615 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25453","birthdate":"2012-01-01","firstname":"Anna","lastname":"SchrÃ¶ter","lane":"3","entrytime":"00:00:35.00","name":"SC Uttenreuth","code":"4383","type":"lane","event":"2","place":"3","time":"0:10,34","heat":"4"}
<message_mapper> store lane 3: lane 3 0:10,34 3
websocket backend mainchannel {"athleteid":"25453","birthdate":"2012-01-01","firstname":"Anna","lastname":"SchrÃ¶ter","lane":"3","entrytime":"00:00:35.00","name":"SC Uttenreuth","code":"4383","type":"lane","event":"2","place":"3","time":"0:10,34","heat":"4"}
lane
websocket backend send {"athleteid":"25453","birthdate":"2012-01-01","firstname":"Anna","lastname":"SchrÃ¶ter","lane":"3","entrytime":"00:00:35.00","name":"SC Uttenreuth","code":"4383","type":"lane","event":"2","place":"3","time":"0:10,34","heat":"4"}
mqtt_handler datamapping incoming lane 4 0:47,20 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:47,20
(place)lane: 4
<swim_event> get swimmer for internalheatid 25615 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24716","birthdate":"2013-01-01","firstname":"Julia","lastname":"Ehnis","lane":"4","entrytime":"00:00:35.36","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"4","time":"0:47,20","heat":"4"}
<message_mapper> store lane 4: lane 4 0:47,20 4
websocket backend mainchannel {"athleteid":"24716","birthdate":"2013-01-01","firstname":"Julia","lastname":"Ehnis","lane":"4","entrytime":"00:00:35.36","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"4","time":"0:47,20","heat":"4"}
lane
websocket backend send {"athleteid":"24716","birthdate":"2013-01-01","firstname":"Julia","lastname":"Ehnis","lane":"4","entrytime":"00:00:35.36","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"4","time":"0:47,20","heat":"4"}
mqtt_handler datamapping incoming lane 5 1:27,15 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:27,15
(place)lane: 5
<swim_event> get swimmer for internalheatid 25615 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24721","birthdate":"2012-01-01","firstname":"Lia Sophie","lastname":"Fuchs","lane":"5","entrytime":"00:00:36.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"5","time":"1:27,15","heat":"4"}
<message_mapper> store lane 5: lane 5 1:27,15 5
websocket backend mainchannel {"athleteid":"24721","birthdate":"2012-01-01","firstname":"Lia Sophie","lastname":"Fuchs","lane":"5","entrytime":"00:00:36.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"5","time":"1:27,15","heat":"4"}
lane
websocket backend send {"athleteid":"24721","birthdate":"2012-01-01","firstname":"Lia Sophie","lastname":"Fuchs","lane":"5","entrytime":"00:00:36.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"5","time":"1:27,15","heat":"4"}
mqtt_handler datamapping incoming lane 6 0:13,14 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:13,14
(place)lane: 6
<swim_event> get swimmer for internalheatid 25615 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25543","birthdate":"2013-01-01","firstname":"Tamina","lastname":"Schomleu","lane":"6","entrytime":"00:00:38.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"2","place":"6","time":"0:13,14","heat":"4"}
<message_mapper> store lane 6: lane 6 0:13,14 6
websocket backend mainchannel {"athleteid":"25543","birthdate":"2013-01-01","firstname":"Tamina","lastname":"Schomleu","lane":"6","entrytime":"00:00:38.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"2","place":"6","time":"0:13,14","heat":"4"}
lane
websocket backend send {"athleteid":"25543","birthdate":"2013-01-01","firstname":"Tamina","lastname":"Schomleu","lane":"6","entrytime":"00:00:38.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"2","place":"6","time":"0:13,14","heat":"4"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584039132"}
websocket backend mainchannel {"type":"stop","time":"1584039132"}
stop
websocket backend send {"type":"stop","time":"1584039132"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584039135"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584039135"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584039135"}
mqtt_handler datamapping incoming header 3 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -3-
HEAT: 1
<swim_events> getInternalHeatId 3 1
<swim_event> number heats 25618
Event: -3-
<swim_event> search for number 3
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"3","heat":"1","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25618 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25618 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25618 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25618 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25618 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25618 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"3","heat":"1","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
header
----------------- reset clock
websocket backend send {"type":"header","relaycount":"1","event":"3","heat":"1","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25392","birthdate":"2012-01-01","firstname":"Justus","lastname":"Rakow","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25392","birthdate":"2012-01-01","firstname":"Justus","lastname":"Rakow","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25373","birthdate":"2013-01-01","firstname":"Alexander","lastname":"Hutchinson Riquelme","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25373","birthdate":"2013-01-01","firstname":"Alexander","lastname":"Hutchinson Riquelme","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"3","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"3","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25395","birthdate":"2013-01-01","firstname":"Emilian","lastname":"Rauch","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25395","birthdate":"2013-01-01","firstname":"Emilian","lastname":"Rauch","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"5","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"5","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"3","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"3","place":"undefined","time":"undefined","heat":"1"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584039143"}
websocket backend mainchannel {"type":"start","time":"1584039143"}
start
websocket backend send {"type":"start","time":"1584039143"}
mqtt_handler datamapping incoming lane 1 1:31,62 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:31,62
(place)lane: 0
<swim_event> get swimmer for internalheatid 25618 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25392","birthdate":"2012-01-01","firstname":"Justus","lastname":"Rakow","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"1:31,62","heat":"1"}
<message_mapper> store lane 1: lane 1 1:31,62 0
websocket backend mainchannel {"athleteid":"25392","birthdate":"2012-01-01","firstname":"Justus","lastname":"Rakow","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"1:31,62","heat":"1"}
lane
websocket backend send {"athleteid":"25392","birthdate":"2012-01-01","firstname":"Justus","lastname":"Rakow","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"1:31,62","heat":"1"}
mqtt_handler datamapping incoming lane 2 1:54,82 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:54,82
(place)lane: 0
<swim_event> get swimmer for internalheatid 25618 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25373","birthdate":"2013-01-01","firstname":"Alexander","lastname":"Hutchinson Riquelme","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"1:54,82","heat":"1"}
<message_mapper> store lane 2: lane 2 1:54,82 0
websocket backend mainchannel {"athleteid":"25373","birthdate":"2013-01-01","firstname":"Alexander","lastname":"Hutchinson Riquelme","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"1:54,82","heat":"1"}
lane
websocket backend send {"athleteid":"25373","birthdate":"2013-01-01","firstname":"Alexander","lastname":"Hutchinson Riquelme","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"1:54,82","heat":"1"}
mqtt_handler datamapping incoming lane 3 0:25,43 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:25,43
(place)lane: 0
<swim_event> get swimmer for internalheatid 25618 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"3","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"0:25,43","heat":"1"}
<message_mapper> store lane 3: lane 3 0:25,43 0
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"3","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"0:25,43","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"3","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"0:25,43","heat":"1"}
mqtt_handler datamapping incoming lane 4 0:37,2 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:37,2
(place)lane: 0
<swim_event> get swimmer for internalheatid 25618 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25395","birthdate":"2013-01-01","firstname":"Emilian","lastname":"Rauch","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"0:37,2","heat":"1"}
<message_mapper> store lane 4: lane 4 0:37,2 0
websocket backend mainchannel {"athleteid":"25395","birthdate":"2013-01-01","firstname":"Emilian","lastname":"Rauch","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"0:37,2","heat":"1"}
lane
websocket backend send {"athleteid":"25395","birthdate":"2013-01-01","firstname":"Emilian","lastname":"Rauch","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"0:37,2","heat":"1"}
mqtt_handler datamapping incoming lane 5 1:3,13 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:3,13
(place)lane: 0
<swim_event> get swimmer for internalheatid 25618 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"5","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"1:3,13","heat":"1"}
<message_mapper> store lane 5: lane 5 1:3,13 0
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"5","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"1:3,13","heat":"1"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"5","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"1:3,13","heat":"1"}
mqtt_handler datamapping incoming lane 6 1:12,34 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:12,34
(place)lane: 0
<swim_event> get swimmer for internalheatid 25618 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"3","place":"0","time":"1:12,34","heat":"1"}
<message_mapper> store lane 6: lane 6 1:12,34 0
websocket backend mainchannel {"type":"lane","lane":"6","event":"3","place":"0","time":"1:12,34","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"3","place":"0","time":"1:12,34","heat":"1"}
mqtt_handler datamapping incoming lane 1 1:53,7 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:53,7
(place)lane: 1
<swim_event> get swimmer for internalheatid 25618 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25392","birthdate":"2012-01-01","firstname":"Justus","lastname":"Rakow","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"1","time":"1:53,7","heat":"1"}
<message_mapper> store lane 1: lane 1 1:53,7 1
websocket backend mainchannel {"athleteid":"25392","birthdate":"2012-01-01","firstname":"Justus","lastname":"Rakow","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"1","time":"1:53,7","heat":"1"}
lane
websocket backend send {"athleteid":"25392","birthdate":"2012-01-01","firstname":"Justus","lastname":"Rakow","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"1","time":"1:53,7","heat":"1"}
mqtt_handler datamapping incoming lane 2 1:33,66 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:33,66
(place)lane: 2
<swim_event> get swimmer for internalheatid 25618 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25373","birthdate":"2013-01-01","firstname":"Alexander","lastname":"Hutchinson Riquelme","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"2","time":"1:33,66","heat":"1"}
<message_mapper> store lane 2: lane 2 1:33,66 2
websocket backend mainchannel {"athleteid":"25373","birthdate":"2013-01-01","firstname":"Alexander","lastname":"Hutchinson Riquelme","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"2","time":"1:33,66","heat":"1"}
lane
websocket backend send {"athleteid":"25373","birthdate":"2013-01-01","firstname":"Alexander","lastname":"Hutchinson Riquelme","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"2","time":"1:33,66","heat":"1"}
mqtt_handler datamapping incoming lane 3 1:8,55 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:8,55
(place)lane: 3
<swim_event> get swimmer for internalheatid 25618 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"3","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"3","time":"1:8,55","heat":"1"}
<message_mapper> store lane 3: lane 3 1:8,55 3
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"3","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"3","time":"1:8,55","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"3","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"3","time":"1:8,55","heat":"1"}
mqtt_handler datamapping incoming lane 4 1:52,34 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:52,34
(place)lane: 4
<swim_event> get swimmer for internalheatid 25618 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25395","birthdate":"2013-01-01","firstname":"Emilian","lastname":"Rauch","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"4","time":"1:52,34","heat":"1"}
<message_mapper> store lane 4: lane 4 1:52,34 4
websocket backend mainchannel {"athleteid":"25395","birthdate":"2013-01-01","firstname":"Emilian","lastname":"Rauch","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"4","time":"1:52,34","heat":"1"}
lane
websocket backend send {"athleteid":"25395","birthdate":"2013-01-01","firstname":"Emilian","lastname":"Rauch","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"4","time":"1:52,34","heat":"1"}
mqtt_handler datamapping incoming lane 5 1:22,26 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:22,26
(place)lane: 5
<swim_event> get swimmer for internalheatid 25618 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"5","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"5","time":"1:22,26","heat":"1"}
<message_mapper> store lane 5: lane 5 1:22,26 5
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"5","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"5","time":"1:22,26","heat":"1"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"5","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"5","time":"1:22,26","heat":"1"}
mqtt_handler datamapping incoming lane 6 1:39,92 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:39,92
(place)lane: 6
<swim_event> get swimmer for internalheatid 25618 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"3","place":"6","time":"1:39,92","heat":"1"}
<message_mapper> store lane 6: lane 6 1:39,92 6
websocket backend mainchannel {"type":"lane","lane":"6","event":"3","place":"6","time":"1:39,92","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"3","place":"6","time":"1:39,92","heat":"1"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584039154"}
websocket backend mainchannel {"type":"stop","time":"1584039154"}
stop
websocket backend send {"type":"stop","time":"1584039154"}
mqtt_handler datamapping incoming header 3 2
<message_mapper> beginn parse
<incoming> Type: header
Event: -3-
HEAT: 2
<swim_events> getInternalHeatId 3 2
<swim_event> number heats 25619
Event: -3-
<swim_event> search for number 3
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"3","heat":"2","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25619 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25619 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25619 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25619 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25619 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25619 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"3","heat":"2","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"3","heat":"2","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"1","entrytime":"00:00:41.98","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"1","entrytime":"00:00:41.98","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25398","birthdate":"2012-01-01","firstname":"Leon","lastname":"Rauscher","lane":"2","entrytime":"00:00:37.15","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25398","birthdate":"2012-01-01","firstname":"Leon","lastname":"Rauscher","lane":"2","entrytime":"00:00:37.15","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25152","birthdate":"2012-01-01","firstname":"Eymen","lastname":"Hayirli","lane":"3","entrytime":"00:00:30.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25152","birthdate":"2012-01-01","firstname":"Eymen","lastname":"Hayirli","lane":"3","entrytime":"00:00:30.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25102","birthdate":"2012-01-01","firstname":"Stefan","lastname":"David","lane":"4","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25102","birthdate":"2012-01-01","firstname":"Stefan","lastname":"David","lane":"4","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25412","birthdate":"2012-01-01","firstname":"Antoni","lastname":"Swietlik","lane":"5","entrytime":"00:00:41.27","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25412","birthdate":"2012-01-01","firstname":"Antoni","lastname":"Swietlik","lane":"5","entrytime":"00:00:41.27","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"6","entrytime":"00:00:46.84","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"6","entrytime":"00:00:46.84","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"2"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584039160"}
websocket backend mainchannel {"type":"start","time":"1584039160"}
start
websocket backend send {"type":"start","time":"1584039160"}
mqtt_handler datamapping incoming lane 1 1:10,56 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:10,56
(place)lane: 0
<swim_event> get swimmer for internalheatid 25619 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"1","entrytime":"00:00:41.98","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"1:10,56","heat":"2"}
<message_mapper> store lane 1: lane 1 1:10,56 0
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"1","entrytime":"00:00:41.98","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"1:10,56","heat":"2"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"1","entrytime":"00:00:41.98","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"1:10,56","heat":"2"}
mqtt_handler datamapping incoming lane 2 1:28,93 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:28,93
(place)lane: 0
<swim_event> get swimmer for internalheatid 25619 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25398","birthdate":"2012-01-01","firstname":"Leon","lastname":"Rauscher","lane":"2","entrytime":"00:00:37.15","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"1:28,93","heat":"2"}
<message_mapper> store lane 2: lane 2 1:28,93 0
websocket backend mainchannel {"athleteid":"25398","birthdate":"2012-01-01","firstname":"Leon","lastname":"Rauscher","lane":"2","entrytime":"00:00:37.15","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"1:28,93","heat":"2"}
lane
websocket backend send {"athleteid":"25398","birthdate":"2012-01-01","firstname":"Leon","lastname":"Rauscher","lane":"2","entrytime":"00:00:37.15","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"1:28,93","heat":"2"}
mqtt_handler datamapping incoming lane 3 0:20,2 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:20,2
(place)lane: 0
<swim_event> get swimmer for internalheatid 25619 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25152","birthdate":"2012-01-01","firstname":"Eymen","lastname":"Hayirli","lane":"3","entrytime":"00:00:30.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"3","place":"0","time":"0:20,2","heat":"2"}
<message_mapper> store lane 3: lane 3 0:20,2 0
websocket backend mainchannel {"athleteid":"25152","birthdate":"2012-01-01","firstname":"Eymen","lastname":"Hayirli","lane":"3","entrytime":"00:00:30.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"3","place":"0","time":"0:20,2","heat":"2"}
lane
websocket backend send {"athleteid":"25152","birthdate":"2012-01-01","firstname":"Eymen","lastname":"Hayirli","lane":"3","entrytime":"00:00:30.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"3","place":"0","time":"0:20,2","heat":"2"}
mqtt_handler datamapping incoming lane 4 1:14,86 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:14,86
(place)lane: 0
<swim_event> get swimmer for internalheatid 25619 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25102","birthdate":"2012-01-01","firstname":"Stefan","lastname":"David","lane":"4","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"3","place":"0","time":"1:14,86","heat":"2"}
<message_mapper> store lane 4: lane 4 1:14,86 0
websocket backend mainchannel {"athleteid":"25102","birthdate":"2012-01-01","firstname":"Stefan","lastname":"David","lane":"4","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"3","place":"0","time":"1:14,86","heat":"2"}
lane
websocket backend send {"athleteid":"25102","birthdate":"2012-01-01","firstname":"Stefan","lastname":"David","lane":"4","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"3","place":"0","time":"1:14,86","heat":"2"}
mqtt_handler datamapping incoming lane 5 0:15,85 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:15,85
(place)lane: 0
<swim_event> get swimmer for internalheatid 25619 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25412","birthdate":"2012-01-01","firstname":"Antoni","lastname":"Swietlik","lane":"5","entrytime":"00:00:41.27","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"0:15,85","heat":"2"}
<message_mapper> store lane 5: lane 5 0:15,85 0
websocket backend mainchannel {"athleteid":"25412","birthdate":"2012-01-01","firstname":"Antoni","lastname":"Swietlik","lane":"5","entrytime":"00:00:41.27","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"0:15,85","heat":"2"}
lane
websocket backend send {"athleteid":"25412","birthdate":"2012-01-01","firstname":"Antoni","lastname":"Swietlik","lane":"5","entrytime":"00:00:41.27","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"0:15,85","heat":"2"}
mqtt_handler datamapping incoming lane 6 1:44,33 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:44,33
(place)lane: 0
<swim_event> get swimmer for internalheatid 25619 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"6","entrytime":"00:00:46.84","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"1:44,33","heat":"2"}
<message_mapper> store lane 6: lane 6 1:44,33 0
websocket backend mainchannel {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"6","entrytime":"00:00:46.84","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"1:44,33","heat":"2"}
lane
websocket backend send {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"6","entrytime":"00:00:46.84","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"1:44,33","heat":"2"}
mqtt_handler datamapping incoming lane 1 0:37,74 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:37,74
(place)lane: 1
<swim_event> get swimmer for internalheatid 25619 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"1","entrytime":"00:00:41.98","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"1","time":"0:37,74","heat":"2"}
<message_mapper> store lane 1: lane 1 0:37,74 1
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"1","entrytime":"00:00:41.98","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"1","time":"0:37,74","heat":"2"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"1","entrytime":"00:00:41.98","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"1","time":"0:37,74","heat":"2"}
mqtt_handler datamapping incoming lane 2 0:30,0 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:30,0
(place)lane: 2
<swim_event> get swimmer for internalheatid 25619 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25398","birthdate":"2012-01-01","firstname":"Leon","lastname":"Rauscher","lane":"2","entrytime":"00:00:37.15","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"2","time":"0:30,0","heat":"2"}
<message_mapper> store lane 2: lane 2 0:30,0 2
websocket backend mainchannel {"athleteid":"25398","birthdate":"2012-01-01","firstname":"Leon","lastname":"Rauscher","lane":"2","entrytime":"00:00:37.15","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"2","time":"0:30,0","heat":"2"}
lane
websocket backend send {"athleteid":"25398","birthdate":"2012-01-01","firstname":"Leon","lastname":"Rauscher","lane":"2","entrytime":"00:00:37.15","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"2","time":"0:30,0","heat":"2"}
mqtt_handler datamapping incoming lane 3 1:21,41 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:21,41
(place)lane: 3
<swim_event> get swimmer for internalheatid 25619 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25152","birthdate":"2012-01-01","firstname":"Eymen","lastname":"Hayirli","lane":"3","entrytime":"00:00:30.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"3","place":"3","time":"1:21,41","heat":"2"}
<message_mapper> store lane 3: lane 3 1:21,41 3
websocket backend mainchannel {"athleteid":"25152","birthdate":"2012-01-01","firstname":"Eymen","lastname":"Hayirli","lane":"3","entrytime":"00:00:30.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"3","place":"3","time":"1:21,41","heat":"2"}
lane
websocket backend send {"athleteid":"25152","birthdate":"2012-01-01","firstname":"Eymen","lastname":"Hayirli","lane":"3","entrytime":"00:00:30.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"3","place":"3","time":"1:21,41","heat":"2"}
mqtt_handler datamapping incoming lane 4 1:27,82 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:27,82
(place)lane: 4
<swim_event> get swimmer for internalheatid 25619 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25102","birthdate":"2012-01-01","firstname":"Stefan","lastname":"David","lane":"4","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"3","place":"4","time":"1:27,82","heat":"2"}
<message_mapper> store lane 4: lane 4 1:27,82 4
websocket backend mainchannel {"athleteid":"25102","birthdate":"2012-01-01","firstname":"Stefan","lastname":"David","lane":"4","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"3","place":"4","time":"1:27,82","heat":"2"}
lane
websocket backend send {"athleteid":"25102","birthdate":"2012-01-01","firstname":"Stefan","lastname":"David","lane":"4","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"3","place":"4","time":"1:27,82","heat":"2"}
mqtt_handler datamapping incoming lane 5 0:44,22 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:44,22
(place)lane: 5
<swim_event> get swimmer for internalheatid 25619 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25412","birthdate":"2012-01-01","firstname":"Antoni","lastname":"Swietlik","lane":"5","entrytime":"00:00:41.27","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"5","time":"0:44,22","heat":"2"}
<message_mapper> store lane 5: lane 5 0:44,22 5
websocket backend mainchannel {"athleteid":"25412","birthdate":"2012-01-01","firstname":"Antoni","lastname":"Swietlik","lane":"5","entrytime":"00:00:41.27","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"5","time":"0:44,22","heat":"2"}
lane
websocket backend send {"athleteid":"25412","birthdate":"2012-01-01","firstname":"Antoni","lastname":"Swietlik","lane":"5","entrytime":"00:00:41.27","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"5","time":"0:44,22","heat":"2"}
mqtt_handler datamapping incoming lane 6 0:57,27 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:57,27
(place)lane: 6
<swim_event> get swimmer for internalheatid 25619 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"6","entrytime":"00:00:46.84","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"6","time":"0:57,27","heat":"2"}
<message_mapper> store lane 6: lane 6 0:57,27 6
websocket backend mainchannel {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"6","entrytime":"00:00:46.84","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"6","time":"0:57,27","heat":"2"}
lane
websocket backend send {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"6","entrytime":"00:00:46.84","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"6","time":"0:57,27","heat":"2"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584039172"}
websocket backend mainchannel {"type":"stop","time":"1584039172"}
stop
websocket backend send {"type":"stop","time":"1584039172"}
mqtt_handler datamapping incoming header 3 3
<message_mapper> beginn parse
<incoming> Type: header
Event: -3-
HEAT: 3
<swim_events> getInternalHeatId 3 3
<swim_event> number heats 
Event: -3-
<swim_event> search for number 3
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"3","heat":"3","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 2
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 3
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 4
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 5
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"3","heat":"3","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"3","heat":"3","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"3","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"1","event":"3","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"type":"lane","lane":"2","event":"3","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"2","event":"3","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"type":"lane","lane":"3","event":"3","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"3","event":"3","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"type":"lane","lane":"4","event":"3","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"4","event":"3","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"type":"lane","lane":"5","event":"3","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"5","event":"3","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"3","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"6","event":"3","place":"undefined","time":"undefined","heat":"3"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584039178"}
websocket backend mainchannel {"type":"start","time":"1584039178"}
start
websocket backend send {"type":"start","time":"1584039178"}
mqtt_handler datamapping incoming lane 1 0:22,5 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:22,5
(place)lane: 0
<swim_event> get swimmer for internalheatid  no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"3","place":"0","time":"0:22,5","heat":"3"}
<message_mapper> store lane 1: lane 1 0:22,5 0
websocket backend mainchannel {"type":"lane","lane":"1","event":"3","place":"0","time":"0:22,5","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"1","event":"3","place":"0","time":"0:22,5","heat":"3"}
mqtt_handler datamapping incoming lane 2 1:24,83 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:24,83
(place)lane: 0
<swim_event> get swimmer for internalheatid  no relay lane 2
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"2","event":"3","place":"0","time":"1:24,83","heat":"3"}
<message_mapper> store lane 2: lane 2 1:24,83 0
websocket backend mainchannel {"type":"lane","lane":"2","event":"3","place":"0","time":"1:24,83","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"2","event":"3","place":"0","time":"1:24,83","heat":"3"}
mqtt_handler datamapping incoming lane 3 0:21,88 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:21,88
(place)lane: 0
<swim_event> get swimmer for internalheatid  no relay lane 3
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"3","event":"3","place":"0","time":"0:21,88","heat":"3"}
<message_mapper> store lane 3: lane 3 0:21,88 0
websocket backend mainchannel {"type":"lane","lane":"3","event":"3","place":"0","time":"0:21,88","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"3","event":"3","place":"0","time":"0:21,88","heat":"3"}
mqtt_handler datamapping incoming lane 4 1:43,96 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:43,96
(place)lane: 0
<swim_event> get swimmer for internalheatid  no relay lane 4
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"4","event":"3","place":"0","time":"1:43,96","heat":"3"}
<message_mapper> store lane 4: lane 4 1:43,96 0
websocket backend mainchannel {"type":"lane","lane":"4","event":"3","place":"0","time":"1:43,96","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"4","event":"3","place":"0","time":"1:43,96","heat":"3"}
mqtt_handler datamapping incoming lane 5 1:22,65 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:22,65
(place)lane: 0
<swim_event> get swimmer for internalheatid  no relay lane 5
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"5","event":"3","place":"0","time":"1:22,65","heat":"3"}
<message_mapper> store lane 5: lane 5 1:22,65 0
websocket backend mainchannel {"type":"lane","lane":"5","event":"3","place":"0","time":"1:22,65","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"5","event":"3","place":"0","time":"1:22,65","heat":"3"}
mqtt_handler datamapping incoming lane 6 0:56,80 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:56,80
(place)lane: 0
<swim_event> get swimmer for internalheatid  no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"3","place":"0","time":"0:56,80","heat":"3"}
<message_mapper> store lane 6: lane 6 0:56,80 0
websocket backend mainchannel {"type":"lane","lane":"6","event":"3","place":"0","time":"0:56,80","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"6","event":"3","place":"0","time":"0:56,80","heat":"3"}
mqtt_handler datamapping incoming lane 1 0:3,46 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:3,46
(place)lane: 1
<swim_event> get swimmer for internalheatid  no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"3","place":"1","time":"0:3,46","heat":"3"}
<message_mapper> store lane 1: lane 1 0:3,46 1
websocket backend mainchannel {"type":"lane","lane":"1","event":"3","place":"1","time":"0:3,46","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"1","event":"3","place":"1","time":"0:3,46","heat":"3"}
mqtt_handler datamapping incoming lane 2 1:16,53 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:16,53
(place)lane: 2
<swim_event> get swimmer for internalheatid  no relay lane 2
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"2","event":"3","place":"2","time":"1:16,53","heat":"3"}
<message_mapper> store lane 2: lane 2 1:16,53 2
websocket backend mainchannel {"type":"lane","lane":"2","event":"3","place":"2","time":"1:16,53","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"2","event":"3","place":"2","time":"1:16,53","heat":"3"}
mqtt_handler datamapping incoming lane 3 1:39,88 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:39,88
(place)lane: 3
<swim_event> get swimmer for internalheatid  no relay lane 3
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"3","event":"3","place":"3","time":"1:39,88","heat":"3"}
<message_mapper> store lane 3: lane 3 1:39,88 3
websocket backend mainchannel {"type":"lane","lane":"3","event":"3","place":"3","time":"1:39,88","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"3","event":"3","place":"3","time":"1:39,88","heat":"3"}
mqtt_handler datamapping incoming lane 4 0:26,18 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:26,18
(place)lane: 4
<swim_event> get swimmer for internalheatid  no relay lane 4
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"4","event":"3","place":"4","time":"0:26,18","heat":"3"}
<message_mapper> store lane 4: lane 4 0:26,18 4
websocket backend mainchannel {"type":"lane","lane":"4","event":"3","place":"4","time":"0:26,18","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"4","event":"3","place":"4","time":"0:26,18","heat":"3"}
mqtt_handler datamapping incoming lane 5 1:7,66 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:7,66
(place)lane: 5
<swim_event> get swimmer for internalheatid  no relay lane 5
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"5","event":"3","place":"5","time":"1:7,66","heat":"3"}
<message_mapper> store lane 5: lane 5 1:7,66 5
websocket backend mainchannel {"type":"lane","lane":"5","event":"3","place":"5","time":"1:7,66","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"5","event":"3","place":"5","time":"1:7,66","heat":"3"}
mqtt_handler datamapping incoming lane 6 1:31,52 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:31,52
(place)lane: 6
<swim_event> get swimmer for internalheatid  no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"3","place":"6","time":"1:31,52","heat":"3"}
<message_mapper> store lane 6: lane 6 1:31,52 6
websocket backend mainchannel {"type":"lane","lane":"6","event":"3","place":"6","time":"1:31,52","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"6","event":"3","place":"6","time":"1:31,52","heat":"3"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584039189"}
websocket backend mainchannel {"type":"stop","time":"1584039189"}
stop
websocket backend send {"type":"stop","time":"1584039189"}
mqtt_handler datamapping incoming header 3 4
<message_mapper> beginn parse
<incoming> Type: header
Event: -3-
HEAT: 4
<swim_events> getInternalHeatId 3 4
<swim_event> number heats 
Event: -3-
<swim_event> search for number 3
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"3","heat":"4","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 2
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 3
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 4
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 5
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"3","heat":"4","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"3","heat":"4","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"3","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"1","event":"3","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"type":"lane","lane":"2","event":"3","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"2","event":"3","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"type":"lane","lane":"3","event":"3","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"3","event":"3","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"type":"lane","lane":"4","event":"3","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"4","event":"3","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"type":"lane","lane":"5","event":"3","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"5","event":"3","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"3","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"6","event":"3","place":"undefined","time":"undefined","heat":"4"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584039195"}
websocket backend mainchannel {"type":"start","time":"1584039195"}
start
websocket backend send {"type":"start","time":"1584039195"}
mqtt_handler datamapping incoming lane 1 0:1,1 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:1,1
(place)lane: 0
<swim_event> get swimmer for internalheatid  no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"3","place":"0","time":"0:1,1","heat":"4"}
<message_mapper> store lane 1: lane 1 0:1,1 0
websocket backend mainchannel {"type":"lane","lane":"1","event":"3","place":"0","time":"0:1,1","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"1","event":"3","place":"0","time":"0:1,1","heat":"4"}
mqtt_handler datamapping incoming lane 2 1:21,10 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:21,10
(place)lane: 0
<swim_event> get swimmer for internalheatid  no relay lane 2
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"2","event":"3","place":"0","time":"1:21,10","heat":"4"}
<message_mapper> store lane 2: lane 2 1:21,10 0
websocket backend mainchannel {"type":"lane","lane":"2","event":"3","place":"0","time":"1:21,10","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"2","event":"3","place":"0","time":"1:21,10","heat":"4"}
mqtt_handler datamapping incoming lane 3 0:9,53 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:9,53
(place)lane: 0
<swim_event> get swimmer for internalheatid  no relay lane 3
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"3","event":"3","place":"0","time":"0:9,53","heat":"4"}
<message_mapper> store lane 3: lane 3 0:9,53 0
websocket backend mainchannel {"type":"lane","lane":"3","event":"3","place":"0","time":"0:9,53","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"3","event":"3","place":"0","time":"0:9,53","heat":"4"}
mqtt_handler datamapping incoming lane 4 1:23,28 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:23,28
(place)lane: 0
<swim_event> get swimmer for internalheatid  no relay lane 4
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"4","event":"3","place":"0","time":"1:23,28","heat":"4"}
<message_mapper> store lane 4: lane 4 1:23,28 0
websocket backend mainchannel {"type":"lane","lane":"4","event":"3","place":"0","time":"1:23,28","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"4","event":"3","place":"0","time":"1:23,28","heat":"4"}
mqtt_handler datamapping incoming lane 5 0:40,71 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:40,71
(place)lane: 0
<swim_event> get swimmer for internalheatid  no relay lane 5
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"5","event":"3","place":"0","time":"0:40,71","heat":"4"}
<message_mapper> store lane 5: lane 5 0:40,71 0
websocket backend mainchannel {"type":"lane","lane":"5","event":"3","place":"0","time":"0:40,71","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"5","event":"3","place":"0","time":"0:40,71","heat":"4"}
mqtt_handler datamapping incoming lane 6 0:9,32 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:9,32
(place)lane: 0
<swim_event> get swimmer for internalheatid  no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"3","place":"0","time":"0:9,32","heat":"4"}
<message_mapper> store lane 6: lane 6 0:9,32 0
websocket backend mainchannel {"type":"lane","lane":"6","event":"3","place":"0","time":"0:9,32","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"6","event":"3","place":"0","time":"0:9,32","heat":"4"}
mqtt_handler datamapping incoming lane 1 0:11,23 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:11,23
(place)lane: 1
<swim_event> get swimmer for internalheatid  no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"3","place":"1","time":"0:11,23","heat":"4"}
<message_mapper> store lane 1: lane 1 0:11,23 1
websocket backend mainchannel {"type":"lane","lane":"1","event":"3","place":"1","time":"0:11,23","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"1","event":"3","place":"1","time":"0:11,23","heat":"4"}
mqtt_handler datamapping incoming lane 2 1:8,52 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:8,52
(place)lane: 2
<swim_event> get swimmer for internalheatid  no relay lane 2
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"2","event":"3","place":"2","time":"1:8,52","heat":"4"}
<message_mapper> store lane 2: lane 2 1:8,52 2
websocket backend mainchannel {"type":"lane","lane":"2","event":"3","place":"2","time":"1:8,52","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"2","event":"3","place":"2","time":"1:8,52","heat":"4"}
mqtt_handler datamapping incoming lane 3 0:1,74 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:1,74
(place)lane: 3
<swim_event> get swimmer for internalheatid  no relay lane 3
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"3","event":"3","place":"3","time":"0:1,74","heat":"4"}
<message_mapper> store lane 3: lane 3 0:1,74 3
websocket backend mainchannel {"type":"lane","lane":"3","event":"3","place":"3","time":"0:1,74","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"3","event":"3","place":"3","time":"0:1,74","heat":"4"}
mqtt_handler datamapping incoming lane 4 0:56,20 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:56,20
(place)lane: 4
<swim_event> get swimmer for internalheatid  no relay lane 4
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"4","event":"3","place":"4","time":"0:56,20","heat":"4"}
<message_mapper> store lane 4: lane 4 0:56,20 4
websocket backend mainchannel {"type":"lane","lane":"4","event":"3","place":"4","time":"0:56,20","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"4","event":"3","place":"4","time":"0:56,20","heat":"4"}
mqtt_handler datamapping incoming lane 5 0:2,69 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:2,69
(place)lane: 5
<swim_event> get swimmer for internalheatid  no relay lane 5
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"5","event":"3","place":"5","time":"0:2,69","heat":"4"}
<message_mapper> store lane 5: lane 5 0:2,69 5
websocket backend mainchannel {"type":"lane","lane":"5","event":"3","place":"5","time":"0:2,69","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"5","event":"3","place":"5","time":"0:2,69","heat":"4"}
mqtt_handler datamapping incoming lane 6 0:23,59 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:23,59
(place)lane: 6
<swim_event> get swimmer for internalheatid  no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"3","place":"6","time":"0:23,59","heat":"4"}
<message_mapper> store lane 6: lane 6 0:23,59 6
websocket backend mainchannel {"type":"lane","lane":"6","event":"3","place":"6","time":"0:23,59","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"6","event":"3","place":"6","time":"0:23,59","heat":"4"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584039206"}
websocket backend mainchannel {"type":"stop","time":"1584039206"}
stop
websocket backend send {"type":"stop","time":"1584039206"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584039210"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584039210"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584039210"}
mqtt_handler datamapping incoming header 4 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -4-
HEAT: 1
<swim_events> getInternalHeatId 4 1
<swim_event> number heats 25620
Event: -4-
<swim_event> search for number 4
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"4","heat":"1","gender":"F","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25620 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25620 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25620 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25620 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25620 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25620 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"4","heat":"1","gender":"F","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
header
----------------- reset clock
websocket backend send {"type":"header","relaycount":"1","event":"4","heat":"1","gender":"F","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25427","birthdate":"2013-01-01","firstname":"Amilia","lastname":"Winkler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25427","birthdate":"2013-01-01","firstname":"Amilia","lastname":"Winkler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"3","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"3","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24095","birthdate":"2012-01-01","firstname":"Lena","lastname":"Knerer","lane":"4","entrytime":"NT","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24095","birthdate":"2012-01-01","firstname":"Lena","lastname":"Knerer","lane":"4","entrytime":"NT","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"5","entrytime":"NT","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"5","entrytime":"NT","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"4","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"4","place":"undefined","time":"undefined","heat":"1"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584039218"}
websocket backend mainchannel {"type":"start","time":"1584039218"}
start
websocket backend send {"type":"start","time":"1584039218"}
mqtt_handler datamapping incoming lane 1 1:48,96 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:48,96
(place)lane: 0
<swim_event> get swimmer for internalheatid 25620 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25427","birthdate":"2013-01-01","firstname":"Amilia","lastname":"Winkler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"0","time":"1:48,96","heat":"1"}
<message_mapper> store lane 1: lane 1 1:48,96 0
websocket backend mainchannel {"athleteid":"25427","birthdate":"2013-01-01","firstname":"Amilia","lastname":"Winkler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"0","time":"1:48,96","heat":"1"}
lane
websocket backend send {"athleteid":"25427","birthdate":"2013-01-01","firstname":"Amilia","lastname":"Winkler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"0","time":"1:48,96","heat":"1"}
mqtt_handler datamapping incoming lane 2 1:50,10 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:50,10
(place)lane: 0
<swim_event> get swimmer for internalheatid 25620 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"0","time":"1:50,10","heat":"1"}
<message_mapper> store lane 2: lane 2 1:50,10 0
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"0","time":"1:50,10","heat":"1"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"0","time":"1:50,10","heat":"1"}
mqtt_handler datamapping incoming lane 3 0:43,9 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:43,9
(place)lane: 0
<swim_event> get swimmer for internalheatid 25620 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"3","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"0","time":"0:43,9","heat":"1"}
<message_mapper> store lane 3: lane 3 0:43,9 0
websocket backend mainchannel {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"3","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"0","time":"0:43,9","heat":"1"}
lane
websocket backend send {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"3","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"0","time":"0:43,9","heat":"1"}
mqtt_handler datamapping incoming lane 4 1:29,45 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:29,45
(place)lane: 0
<swim_event> get swimmer for internalheatid 25620 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24095","birthdate":"2012-01-01","firstname":"Lena","lastname":"Knerer","lane":"4","entrytime":"NT","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"4","place":"0","time":"1:29,45","heat":"1"}
<message_mapper> store lane 4: lane 4 1:29,45 0
websocket backend mainchannel {"athleteid":"24095","birthdate":"2012-01-01","firstname":"Lena","lastname":"Knerer","lane":"4","entrytime":"NT","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"4","place":"0","time":"1:29,45","heat":"1"}
lane
websocket backend send {"athleteid":"24095","birthdate":"2012-01-01","firstname":"Lena","lastname":"Knerer","lane":"4","entrytime":"NT","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"4","place":"0","time":"1:29,45","heat":"1"}
mqtt_handler datamapping incoming lane 5 0:4,97 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:4,97
(place)lane: 0
<swim_event> get swimmer for internalheatid 25620 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"5","entrytime":"NT","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"4","place":"0","time":"0:4,97","heat":"1"}
<message_mapper> store lane 5: lane 5 0:4,97 0
websocket backend mainchannel {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"5","entrytime":"NT","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"4","place":"0","time":"0:4,97","heat":"1"}
lane
websocket backend send {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"5","entrytime":"NT","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"4","place":"0","time":"0:4,97","heat":"1"}
mqtt_handler datamapping incoming lane 6 1:3,6 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:3,6
(place)lane: 0
<swim_event> get swimmer for internalheatid 25620 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"4","place":"0","time":"1:3,6","heat":"1"}
<message_mapper> store lane 6: lane 6 1:3,6 0
websocket backend mainchannel {"type":"lane","lane":"6","event":"4","place":"0","time":"1:3,6","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"4","place":"0","time":"1:3,6","heat":"1"}
mqtt_handler datamapping incoming lane 1 0:47,78 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:47,78
(place)lane: 1
<swim_event> get swimmer for internalheatid 25620 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25427","birthdate":"2013-01-01","firstname":"Amilia","lastname":"Winkler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"1","time":"0:47,78","heat":"1"}
<message_mapper> store lane 1: lane 1 0:47,78 1
websocket backend mainchannel {"athleteid":"25427","birthdate":"2013-01-01","firstname":"Amilia","lastname":"Winkler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"1","time":"0:47,78","heat":"1"}
lane
websocket backend send {"athleteid":"25427","birthdate":"2013-01-01","firstname":"Amilia","lastname":"Winkler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"1","time":"0:47,78","heat":"1"}
mqtt_handler datamapping incoming lane 2 1:22,43 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:22,43
(place)lane: 2
<swim_event> get swimmer for internalheatid 25620 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"2","time":"1:22,43","heat":"1"}
<message_mapper> store lane 2: lane 2 1:22,43 2
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"2","time":"1:22,43","heat":"1"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"2","time":"1:22,43","heat":"1"}
mqtt_handler datamapping incoming lane 3 1:49,66 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:49,66
(place)lane: 3
<swim_event> get swimmer for internalheatid 25620 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"3","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"3","time":"1:49,66","heat":"1"}
<message_mapper> store lane 3: lane 3 1:49,66 3
websocket backend mainchannel {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"3","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"3","time":"1:49,66","heat":"1"}
lane
websocket backend send {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"3","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"3","time":"1:49,66","heat":"1"}
mqtt_handler datamapping incoming lane 4 1:9,75 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:9,75
(place)lane: 4
<swim_event> get swimmer for internalheatid 25620 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24095","birthdate":"2012-01-01","firstname":"Lena","lastname":"Knerer","lane":"4","entrytime":"NT","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"4","place":"4","time":"1:9,75","heat":"1"}
<message_mapper> store lane 4: lane 4 1:9,75 4
websocket backend mainchannel {"athleteid":"24095","birthdate":"2012-01-01","firstname":"Lena","lastname":"Knerer","lane":"4","entrytime":"NT","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"4","place":"4","time":"1:9,75","heat":"1"}
lane
websocket backend send {"athleteid":"24095","birthdate":"2012-01-01","firstname":"Lena","lastname":"Knerer","lane":"4","entrytime":"NT","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"4","place":"4","time":"1:9,75","heat":"1"}
mqtt_handler datamapping incoming lane 5 1:54,10 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:54,10
(place)lane: 5
<swim_event> get swimmer for internalheatid 25620 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"5","entrytime":"NT","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"4","place":"5","time":"1:54,10","heat":"1"}
<message_mapper> store lane 5: lane 5 1:54,10 5
websocket backend mainchannel {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"5","entrytime":"NT","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"4","place":"5","time":"1:54,10","heat":"1"}
lane
websocket backend send {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"5","entrytime":"NT","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"4","place":"5","time":"1:54,10","heat":"1"}
mqtt_handler datamapping incoming lane 6 1:27,65 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:27,65
(place)lane: 6
<swim_event> get swimmer for internalheatid 25620 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"4","place":"6","time":"1:27,65","heat":"1"}
<message_mapper> store lane 6: lane 6 1:27,65 6
websocket backend mainchannel {"type":"lane","lane":"6","event":"4","place":"6","time":"1:27,65","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"4","place":"6","time":"1:27,65","heat":"1"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584039229"}
websocket backend mainchannel {"type":"stop","time":"1584039229"}
stop
websocket backend send {"type":"stop","time":"1584039229"}
mqtt_handler datamapping incoming header 4 2
<message_mapper> beginn parse
<incoming> Type: header
Event: -4-
HEAT: 2
<swim_events> getInternalHeatId 4 2
<swim_event> number heats 25621
Event: -4-
<swim_event> search for number 4
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"4","heat":"2","gender":"F","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25621 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25621 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25621 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25621 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25621 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25621 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"4","heat":"2","gender":"F","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"4","heat":"2","gender":"F","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25382","birthdate":"2012-01-01","firstname":"Sophia","lastname":"LÃ¶w","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25382","birthdate":"2012-01-01","firstname":"Sophia","lastname":"LÃ¶w","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25408","birthdate":"2013-01-01","firstname":"Johanna","lastname":"Spitzner","lane":"2","entrytime":"00:00:45.29","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25408","birthdate":"2013-01-01","firstname":"Johanna","lastname":"Spitzner","lane":"2","entrytime":"00:00:45.29","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24432","birthdate":"2012-01-01","firstname":"Linda","lastname":"Schellenberger","lane":"3","entrytime":"00:00:32.00","name":"SG Bamberg","code":"5085","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24432","birthdate":"2012-01-01","firstname":"Linda","lastname":"Schellenberger","lane":"3","entrytime":"00:00:32.00","name":"SG Bamberg","code":"5085","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"4","entrytime":"00:00:44.00","name":"SG Bamberg","code":"5085","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"4","entrytime":"00:00:44.00","name":"SG Bamberg","code":"5085","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24721","birthdate":"2012-01-01","firstname":"Lia Sophie","lastname":"Fuchs","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24721","birthdate":"2012-01-01","firstname":"Lia Sophie","lastname":"Fuchs","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25368","birthdate":"2012-01-01","firstname":"Emilie","lastname":"Gierl","lane":"6","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25368","birthdate":"2012-01-01","firstname":"Emilie","lastname":"Gierl","lane":"6","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"2"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584039235"}
websocket backend mainchannel {"type":"start","time":"1584039235"}
start
websocket backend send {"type":"start","time":"1584039235"}
mqtt_handler datamapping incoming lane 1 0:34,88 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:34,88
(place)lane: 0
<swim_event> get swimmer for internalheatid 25621 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25382","birthdate":"2012-01-01","firstname":"Sophia","lastname":"LÃ¶w","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"0","time":"0:34,88","heat":"2"}
<message_mapper> store lane 1: lane 1 0:34,88 0
websocket backend mainchannel {"athleteid":"25382","birthdate":"2012-01-01","firstname":"Sophia","lastname":"LÃ¶w","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"0","time":"0:34,88","heat":"2"}
lane
websocket backend send {"athleteid":"25382","birthdate":"2012-01-01","firstname":"Sophia","lastname":"LÃ¶w","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"0","time":"0:34,88","heat":"2"}
mqtt_handler datamapping incoming lane 2 1:20,35 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:20,35
(place)lane: 0
<swim_event> get swimmer for internalheatid 25621 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25408","birthdate":"2013-01-01","firstname":"Johanna","lastname":"Spitzner","lane":"2","entrytime":"00:00:45.29","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"0","time":"1:20,35","heat":"2"}
<message_mapper> store lane 2: lane 2 1:20,35 0
websocket backend mainchannel {"athleteid":"25408","birthdate":"2013-01-01","firstname":"Johanna","lastname":"Spitzner","lane":"2","entrytime":"00:00:45.29","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"0","time":"1:20,35","heat":"2"}
lane
websocket backend send {"athleteid":"25408","birthdate":"2013-01-01","firstname":"Johanna","lastname":"Spitzner","lane":"2","entrytime":"00:00:45.29","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"0","time":"1:20,35","heat":"2"}
mqtt_handler datamapping incoming lane 3 1:29,51 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:29,51
(place)lane: 0
<swim_event> get swimmer for internalheatid 25621 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24432","birthdate":"2012-01-01","firstname":"Linda","lastname":"Schellenberger","lane":"3","entrytime":"00:00:32.00","name":"SG Bamberg","code":"5085","type":"lane","event":"4","place":"0","time":"1:29,51","heat":"2"}
<message_mapper> store lane 3: lane 3 1:29,51 0
websocket backend mainchannel {"athleteid":"24432","birthdate":"2012-01-01","firstname":"Linda","lastname":"Schellenberger","lane":"3","entrytime":"00:00:32.00","name":"SG Bamberg","code":"5085","type":"lane","event":"4","place":"0","time":"1:29,51","heat":"2"}
lane
websocket backend send {"athleteid":"24432","birthdate":"2012-01-01","firstname":"Linda","lastname":"Schellenberger","lane":"3","entrytime":"00:00:32.00","name":"SG Bamberg","code":"5085","type":"lane","event":"4","place":"0","time":"1:29,51","heat":"2"}
mqtt_handler datamapping incoming lane 4 0:20,64 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:20,64
(place)lane: 0
<swim_event> get swimmer for internalheatid 25621 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"4","entrytime":"00:00:44.00","name":"SG Bamberg","code":"5085","type":"lane","event":"4","place":"0","time":"0:20,64","heat":"2"}
<message_mapper> store lane 4: lane 4 0:20,64 0
websocket backend mainchannel {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"4","entrytime":"00:00:44.00","name":"SG Bamberg","code":"5085","type":"lane","event":"4","place":"0","time":"0:20,64","heat":"2"}
lane
websocket backend send {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"4","entrytime":"00:00:44.00","name":"SG Bamberg","code":"5085","type":"lane","event":"4","place":"0","time":"0:20,64","heat":"2"}
mqtt_handler datamapping incoming lane 5 0:4,0 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:4,0
(place)lane: 0
<swim_event> get swimmer for internalheatid 25621 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24721","birthdate":"2012-01-01","firstname":"Lia Sophie","lastname":"Fuchs","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"4","place":"0","time":"0:4,0","heat":"2"}
<message_mapper> store lane 5: lane 5 0:4,0 0
websocket backend mainchannel {"athleteid":"24721","birthdate":"2012-01-01","firstname":"Lia Sophie","lastname":"Fuchs","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"4","place":"0","time":"0:4,0","heat":"2"}
lane
websocket backend send {"athleteid":"24721","birthdate":"2012-01-01","firstname":"Lia Sophie","lastname":"Fuchs","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"4","place":"0","time":"0:4,0","heat":"2"}
mqtt_handler datamapping incoming lane 6 1:38,91 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:38,91
(place)lane: 0
<swim_event> get swimmer for internalheatid 25621 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25368","birthdate":"2012-01-01","firstname":"Emilie","lastname":"Gierl","lane":"6","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"0","time":"1:38,91","heat":"2"}
<message_mapper> store lane 6: lane 6 1:38,91 0
websocket backend mainchannel {"athleteid":"25368","birthdate":"2012-01-01","firstname":"Emilie","lastname":"Gierl","lane":"6","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"0","time":"1:38,91","heat":"2"}
lane
websocket backend send {"athleteid":"25368","birthdate":"2012-01-01","firstname":"Emilie","lastname":"Gierl","lane":"6","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"0","time":"1:38,91","heat":"2"}
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1584039247"}
websocket backend mainchannel {"type":"startlist","time":"1584039247"}
startlist
websocket backend send {"type":"startlist","time":"1584039247"}
/POST
Message: {"message":"clock"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584039264"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584039264"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584039264"}
/POST
Message: {"message":"lane 1 1:11,11 2"}
mqtt_handler datamapping incoming lane 1 1:11,11 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 2
<swim_event> get swimmer for internalheatid 25621 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25382","birthdate":"2012-01-01","firstname":"Sophia","lastname":"LÃ¶w","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"2","time":"1:11,11","heat":"2"}
<message_mapper> store lane 1: lane 1 1:11,11 2
websocket backend mainchannel {"athleteid":"25382","birthdate":"2012-01-01","firstname":"Sophia","lastname":"LÃ¶w","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"2","time":"1:11,11","heat":"2"}
lane
websocket backend send {"athleteid":"25382","birthdate":"2012-01-01","firstname":"Sophia","lastname":"LÃ¶w","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"2","time":"1:11,11","heat":"2"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584039282"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584039282"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584039282"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584039283"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584039283"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584039283"}
mqtt_handler datamapping incoming header 1 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
----------------- reset clock
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584039291"}
websocket backend mainchannel {"type":"start","time":"1584039291"}
start
websocket backend send {"type":"start","time":"1584039291"}
mqtt_handler datamapping incoming lane 0 1:8,52 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 0
(time)lane: 1:8,52
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 0
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"0","event":"1","place":"0","time":"1:8,52","heat":"1"}
<message_mapper> store lane 0: lane 0 1:8,52 0
websocket backend mainchannel {"type":"lane","lane":"0","event":"1","place":"0","time":"1:8,52","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"0","event":"1","place":"0","time":"1:8,52","heat":"1"}
mqtt_handler datamapping incoming lane 1 1:6,75 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:6,75
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"1","place":"0","time":"1:6,75","heat":"1"}
<message_mapper> store lane 1: lane 1 1:6,75 0
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"0","time":"1:6,75","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"0","time":"1:6,75","heat":"1"}
mqtt_handler datamapping incoming lane 2 0:18,65 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:18,65
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:18,65","heat":"1"}
<message_mapper> store lane 2: lane 2 0:18,65 0
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:18,65","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:18,65","heat":"1"}
mqtt_handler datamapping incoming lane 3 1:3,89 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:3,89
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:3,89","heat":"1"}
<message_mapper> store lane 3: lane 3 1:3,89 0
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:3,89","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:3,89","heat":"1"}
mqtt_handler datamapping incoming lane 4 1:39,20 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:39,20
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"1:39,20","heat":"1"}
<message_mapper> store lane 4: lane 4 1:39,20 0
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"1:39,20","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"1:39,20","heat":"1"}
mqtt_handler datamapping incoming lane 5 0:43,37 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:43,37
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:43,37","heat":"1"}
<message_mapper> store lane 5: lane 5 0:43,37 0
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:43,37","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:43,37","heat":"1"}
mqtt_handler datamapping incoming lane 6 1:57,21 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:57,21
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"1","place":"0","time":"1:57,21","heat":"1"}
<message_mapper> store lane 6: lane 6 1:57,21 0
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"0","time":"1:57,21","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"0","time":"1:57,21","heat":"1"}
mqtt_handler datamapping incoming lane 0 0:46,30 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 0
(time)lane: 0:46,30
(place)lane: 1
<swim_event> get swimmer for internalheatid 25607 no relay lane 0
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"0","event":"1","place":"1","time":"0:46,30","heat":"1"}
<message_mapper> store lane 0: lane 0 0:46,30 1
websocket backend mainchannel {"type":"lane","lane":"0","event":"1","place":"1","time":"0:46,30","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"0","event":"1","place":"1","time":"0:46,30","heat":"1"}
mqtt_handler datamapping incoming lane 1 1:46,52 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:46,52
(place)lane: 2
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"1","place":"2","time":"1:46,52","heat":"1"}
<message_mapper> store lane 1: lane 1 1:46,52 2
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"2","time":"1:46,52","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"2","time":"1:46,52","heat":"1"}
mqtt_handler datamapping incoming lane 2 0:55,68 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:55,68
(place)lane: 3
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"3","time":"0:55,68","heat":"1"}
<message_mapper> store lane 2: lane 2 0:55,68 3
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"3","time":"0:55,68","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"3","time":"0:55,68","heat":"1"}
mqtt_handler datamapping incoming lane 3 0:21,41 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:21,41
(place)lane: 4
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"4","time":"0:21,41","heat":"1"}
<message_mapper> store lane 3: lane 3 0:21,41 4
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"4","time":"0:21,41","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"4","time":"0:21,41","heat":"1"}
mqtt_handler datamapping incoming lane 4 0:41,21 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:41,21
(place)lane: 5
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"5","time":"0:41,21","heat":"1"}
<message_mapper> store lane 4: lane 4 0:41,21 5
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"5","time":"0:41,21","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"5","time":"0:41,21","heat":"1"}
mqtt_handler datamapping incoming lane 5 0:4,9 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:4,9
(place)lane: 6
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"6","time":"0:4,9","heat":"1"}
<message_mapper> store lane 5: lane 5 0:4,9 6
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"6","time":"0:4,9","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"6","time":"0:4,9","heat":"1"}
mqtt_handler datamapping incoming lane 6 1:57,7 7
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:57,7
(place)lane: 7
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"1","place":"7","time":"1:57,7","heat":"1"}
<message_mapper> store lane 6: lane 6 1:57,7 7
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"7","time":"1:57,7","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"7","time":"1:57,7","heat":"1"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584039302"}
websocket backend mainchannel {"type":"stop","time":"1584039302"}
stop
websocket backend send {"type":"stop","time":"1584039302"}
mqtt_handler datamapping incoming header 1 2
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 2
<swim_events> getInternalHeatId 1 2
<swim_event> number heats 25608
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584039308"}
websocket backend mainchannel {"type":"start","time":"1584039308"}
start
websocket backend send {"type":"start","time":"1584039308"}
mqtt_handler datamapping incoming lane 0 1:28,66 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 0
(time)lane: 1:28,66
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 0
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"0","event":"1","place":"0","time":"1:28,66","heat":"2"}
<message_mapper> store lane 0: lane 0 1:28,66 0
websocket backend mainchannel {"type":"lane","lane":"0","event":"1","place":"0","time":"1:28,66","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"0","event":"1","place":"0","time":"1:28,66","heat":"2"}
mqtt_handler datamapping incoming lane 1 1:54,15 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:54,15
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:54,15","heat":"2"}
<message_mapper> store lane 1: lane 1 1:54,15 0
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:54,15","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:54,15","heat":"2"}
mqtt_handler datamapping incoming lane 2 1:56,60 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:56,60
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"0","time":"1:56,60","heat":"2"}
<message_mapper> store lane 2: lane 2 1:56,60 0
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"0","time":"1:56,60","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"0","time":"1:56,60","heat":"2"}
mqtt_handler datamapping incoming lane 3 1:24,70 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:24,70
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:24,70","heat":"2"}
<message_mapper> store lane 3: lane 3 1:24,70 0
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:24,70","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:24,70","heat":"2"}
mqtt_handler datamapping incoming lane 4 0:29,33 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:29,33
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:29,33","heat":"2"}
<message_mapper> store lane 4: lane 4 0:29,33 0
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:29,33","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:29,33","heat":"2"}
mqtt_handler datamapping incoming lane 5 0:37,83 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:37,83
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:37,83","heat":"2"}
<message_mapper> store lane 5: lane 5 0:37,83 0
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:37,83","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:37,83","heat":"2"}
mqtt_handler datamapping incoming lane 6 1:23,27 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:23,27
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"0","time":"1:23,27","heat":"2"}
<message_mapper> store lane 6: lane 6 1:23,27 0
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"0","time":"1:23,27","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"0","time":"1:23,27","heat":"2"}
/POST
Message: {"message":"stop"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584039356"}
websocket backend mainchannel {"type":"stop","time":"1584039356"}
stop
websocket backend send {"type":"stop","time":"1584039356"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584039362"}
websocket backend mainchannel {"type":"start","time":"1584039362"}
start
websocket backend send {"type":"start","time":"1584039362"}
/POST
Message: {"message":"header 1 3"}
mqtt_handler datamapping incoming header 1 3
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 3
<swim_events> getInternalHeatId 1 3
<swim_event> number heats 25609
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
/POST
Message: {"message":"clear"}
mqtt_handler datamapping incoming clear
<message_mapper> beginn parse
<incoming> Type: clear
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clear","time":"1584039381"}
<message_mapper> clear race
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"clear","time":"1584039381"}
clear
clear lanes
websocket backend send {"type":"clear","time":"1584039381"}
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"3"}
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1584039473"}
websocket backend mainchannel {"type":"startlist","time":"1584039473"}
startlist
websocket backend send {"type":"startlist","time":"1584039473"}
/POST
Message: {"message":"clear"}
mqtt_handler datamapping incoming clear
<message_mapper> beginn parse
<incoming> Type: clear
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clear","time":"1584039480"}
<message_mapper> clear race
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"clear","time":"1584039480"}
clear
clear lanes
websocket backend send {"type":"clear","time":"1584039480"}
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"3"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"clear"}
mqtt_handler datamapping incoming clear
<message_mapper> beginn parse
<incoming> Type: clear
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clear","time":"1584039627"}
<message_mapper> clear race
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"clear","time":"1584039627"}
clear
clear lanes
websocket backend send {"type":"clear","time":"1584039627"}
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"3"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584039640"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584039640"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584039640"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584039641"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584039641"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584039641"}
mqtt_handler datamapping incoming header 1 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
----------------- reset clock
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584039649"}
websocket backend mainchannel {"type":"start","time":"1584039649"}
start
websocket backend send {"type":"start","time":"1584039649"}
mqtt_handler datamapping incoming lane 0 0:22,16 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 0
(time)lane: 0:22,16
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 0
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"0","event":"1","place":"0","time":"0:22,16","heat":"1"}
<message_mapper> store lane 0: lane 0 0:22,16 0
websocket backend mainchannel {"type":"lane","lane":"0","event":"1","place":"0","time":"0:22,16","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"0","event":"1","place":"0","time":"0:22,16","heat":"1"}
mqtt_handler datamapping incoming lane 1 0:2,55 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:2,55
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"1","place":"0","time":"0:2,55","heat":"1"}
<message_mapper> store lane 1: lane 1 0:2,55 0
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"0","time":"0:2,55","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"0","time":"0:2,55","heat":"1"}
mqtt_handler datamapping incoming lane 2 0:13,97 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:13,97
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:13,97","heat":"1"}
<message_mapper> store lane 2: lane 2 0:13,97 0
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:13,97","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:13,97","heat":"1"}
mqtt_handler datamapping incoming lane 3 1:47,67 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:47,67
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:47,67","heat":"1"}
<message_mapper> store lane 3: lane 3 1:47,67 0
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:47,67","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:47,67","heat":"1"}
mqtt_handler datamapping incoming lane 4 1:19,63 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:19,63
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"1:19,63","heat":"1"}
<message_mapper> store lane 4: lane 4 1:19,63 0
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"1:19,63","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"1:19,63","heat":"1"}
mqtt_handler datamapping incoming lane 5 0:26,58 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:26,58
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:26,58","heat":"1"}
<message_mapper> store lane 5: lane 5 0:26,58 0
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:26,58","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:26,58","heat":"1"}
mqtt_handler datamapping incoming lane 6 1:21,19 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:21,19
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"1","place":"0","time":"1:21,19","heat":"1"}
<message_mapper> store lane 6: lane 6 1:21,19 0
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"0","time":"1:21,19","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"0","time":"1:21,19","heat":"1"}
mqtt_handler datamapping incoming lane 0 1:40,37 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 0
(time)lane: 1:40,37
(place)lane: 1
<swim_event> get swimmer for internalheatid 25607 no relay lane 0
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"0","event":"1","place":"1","time":"1:40,37","heat":"1"}
<message_mapper> store lane 0: lane 0 1:40,37 1
websocket backend mainchannel {"type":"lane","lane":"0","event":"1","place":"1","time":"1:40,37","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"0","event":"1","place":"1","time":"1:40,37","heat":"1"}
mqtt_handler datamapping incoming lane 1 1:37,44 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:37,44
(place)lane: 2
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"1","place":"2","time":"1:37,44","heat":"1"}
<message_mapper> store lane 1: lane 1 1:37,44 2
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"2","time":"1:37,44","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"2","time":"1:37,44","heat":"1"}
mqtt_handler datamapping incoming lane 2 0:2,78 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:2,78
(place)lane: 3
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"3","time":"0:2,78","heat":"1"}
<message_mapper> store lane 2: lane 2 0:2,78 3
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"3","time":"0:2,78","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"3","time":"0:2,78","heat":"1"}
mqtt_handler datamapping incoming lane 3 1:25,67 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:25,67
(place)lane: 4
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"4","time":"1:25,67","heat":"1"}
<message_mapper> store lane 3: lane 3 1:25,67 4
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"4","time":"1:25,67","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"4","time":"1:25,67","heat":"1"}
mqtt_handler datamapping incoming lane 4 0:7,92 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:7,92
(place)lane: 5
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"5","time":"0:7,92","heat":"1"}
<message_mapper> store lane 4: lane 4 0:7,92 5
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"5","time":"0:7,92","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"5","time":"0:7,92","heat":"1"}
mqtt_handler datamapping incoming lane 5 1:34,62 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:34,62
(place)lane: 6
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"6","time":"1:34,62","heat":"1"}
<message_mapper> store lane 5: lane 5 1:34,62 6
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"6","time":"1:34,62","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"6","time":"1:34,62","heat":"1"}
mqtt_handler datamapping incoming lane 6 0:25,31 7
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:25,31
(place)lane: 7
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"1","place":"7","time":"0:25,31","heat":"1"}
<message_mapper> store lane 6: lane 6 0:25,31 7
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"7","time":"0:25,31","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"7","time":"0:25,31","heat":"1"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584039661"}
websocket backend mainchannel {"type":"stop","time":"1584039661"}
stop
websocket backend send {"type":"stop","time":"1584039661"}
mqtt_handler datamapping incoming header 1 2
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 2
<swim_events> getInternalHeatId 1 2
<swim_event> number heats 25608
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584039667"}
websocket backend mainchannel {"type":"start","time":"1584039667"}
start
websocket backend send {"type":"start","time":"1584039667"}
mqtt_handler datamapping incoming lane 0 1:49,65 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 0
(time)lane: 1:49,65
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 0
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"0","event":"1","place":"0","time":"1:49,65","heat":"2"}
<message_mapper> store lane 0: lane 0 1:49,65 0
websocket backend mainchannel {"type":"lane","lane":"0","event":"1","place":"0","time":"1:49,65","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"0","event":"1","place":"0","time":"1:49,65","heat":"2"}
mqtt_handler datamapping incoming lane 1 1:18,32 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:18,32
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:18,32","heat":"2"}
<message_mapper> store lane 1: lane 1 1:18,32 0
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:18,32","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:18,32","heat":"2"}
mqtt_handler datamapping incoming lane 2 1:8,42 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:8,42
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"0","time":"1:8,42","heat":"2"}
<message_mapper> store lane 2: lane 2 1:8,42 0
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"0","time":"1:8,42","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"0","time":"1:8,42","heat":"2"}
mqtt_handler datamapping incoming lane 3 0:29,49 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:29,49
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:29,49","heat":"2"}
<message_mapper> store lane 3: lane 3 0:29,49 0
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:29,49","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:29,49","heat":"2"}
mqtt_handler datamapping incoming lane 4 1:29,10 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:29,10
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"1:29,10","heat":"2"}
<message_mapper> store lane 4: lane 4 1:29,10 0
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"1:29,10","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"1:29,10","heat":"2"}
mqtt_handler datamapping incoming lane 5 1:32,72 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:32,72
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:32,72","heat":"2"}
<message_mapper> store lane 5: lane 5 1:32,72 0
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:32,72","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:32,72","heat":"2"}
mqtt_handler datamapping incoming lane 6 0:17,26 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:17,26
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"0","time":"0:17,26","heat":"2"}
<message_mapper> store lane 6: lane 6 0:17,26 0
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"0","time":"0:17,26","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"0","time":"0:17,26","heat":"2"}
mqtt_handler datamapping incoming lane 0 0:7,93 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 0
(time)lane: 0:7,93
(place)lane: 1
<swim_event> get swimmer for internalheatid 25608 no relay lane 0
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"0","event":"1","place":"1","time":"0:7,93","heat":"2"}
<message_mapper> store lane 0: lane 0 0:7,93 1
websocket backend mainchannel {"type":"lane","lane":"0","event":"1","place":"1","time":"0:7,93","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"0","event":"1","place":"1","time":"0:7,93","heat":"2"}
mqtt_handler datamapping incoming lane 1 0:34,96 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:34,96
(place)lane: 2
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"2","time":"0:34,96","heat":"2"}
<message_mapper> store lane 1: lane 1 0:34,96 2
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"2","time":"0:34,96","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"2","time":"0:34,96","heat":"2"}
mqtt_handler datamapping incoming lane 2 0:32,36 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:32,36
(place)lane: 3
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"3","time":"0:32,36","heat":"2"}
<message_mapper> store lane 2: lane 2 0:32,36 3
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"3","time":"0:32,36","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"3","time":"0:32,36","heat":"2"}
mqtt_handler datamapping incoming lane 3 0:59,58 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:59,58
(place)lane: 4
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"4","time":"0:59,58","heat":"2"}
<message_mapper> store lane 3: lane 3 0:59,58 4
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"4","time":"0:59,58","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"4","time":"0:59,58","heat":"2"}
mqtt_handler datamapping incoming lane 4 0:47,60 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:47,60
(place)lane: 5
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"5","time":"0:47,60","heat":"2"}
<message_mapper> store lane 4: lane 4 0:47,60 5
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"5","time":"0:47,60","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"5","time":"0:47,60","heat":"2"}
mqtt_handler datamapping incoming lane 5 1:48,30 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:48,30
(place)lane: 6
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"6","time":"1:48,30","heat":"2"}
<message_mapper> store lane 5: lane 5 1:48,30 6
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"6","time":"1:48,30","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"6","time":"1:48,30","heat":"2"}
mqtt_handler datamapping incoming lane 6 0:8,23 7
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:8,23
(place)lane: 7
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"7","time":"0:8,23","heat":"2"}
<message_mapper> store lane 6: lane 6 0:8,23 7
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"7","time":"0:8,23","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"7","time":"0:8,23","heat":"2"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584039678"}
websocket backend mainchannel {"type":"stop","time":"1584039678"}
stop
websocket backend send {"type":"stop","time":"1584039678"}
mqtt_handler datamapping incoming header 1 3
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 3
<swim_events> getInternalHeatId 1 3
<swim_event> number heats 25609
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584039684"}
websocket backend mainchannel {"type":"start","time":"1584039684"}
start
websocket backend send {"type":"start","time":"1584039684"}
/POST
Message: {"message":"clear"}
mqtt_handler datamapping incoming clear
<message_mapper> beginn parse
<incoming> Type: clear
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clear","time":"1584039691"}
<message_mapper> clear race
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"clear","time":"1584039691"}
clear
clear lanes
websocket backend send {"type":"clear","time":"1584039691"}
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"3"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584039749"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584039749"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584039749"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584039750"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584039750"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584039750"}
mqtt_handler datamapping incoming header 1 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
----------------- reset clock
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584039758"}
websocket backend mainchannel {"type":"start","time":"1584039758"}
start
websocket backend send {"type":"start","time":"1584039758"}
mqtt_handler datamapping incoming lane 1 1:53,8 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:53,8
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"1","place":"0","time":"1:53,8","heat":"1"}
<message_mapper> store lane 1: lane 1 1:53,8 0
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"0","time":"1:53,8","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"0","time":"1:53,8","heat":"1"}
mqtt_handler datamapping incoming lane 2 1:46,91 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:46,91
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"1:46,91","heat":"1"}
<message_mapper> store lane 2: lane 2 1:46,91 0
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"1:46,91","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"1:46,91","heat":"1"}
mqtt_handler datamapping incoming lane 3 0:39,46 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:39,46
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:39,46","heat":"1"}
<message_mapper> store lane 3: lane 3 0:39,46 0
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:39,46","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:39,46","heat":"1"}
mqtt_handler datamapping incoming lane 4 1:3,95 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:3,95
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"1:3,95","heat":"1"}
<message_mapper> store lane 4: lane 4 1:3,95 0
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"1:3,95","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"1:3,95","heat":"1"}
mqtt_handler datamapping incoming lane 5 0:9,3 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:9,3
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:9,3","heat":"1"}
<message_mapper> store lane 5: lane 5 0:9,3 0
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:9,3","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:9,3","heat":"1"}
mqtt_handler datamapping incoming lane 6 0:1,7 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:1,7
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"1","place":"0","time":"0:1,7","heat":"1"}
<message_mapper> store lane 6: lane 6 0:1,7 0
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"0","time":"0:1,7","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"0","time":"0:1,7","heat":"1"}
mqtt_handler datamapping incoming lane 1 0:51,51 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:51,51
(place)lane: 1
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"1","place":"1","time":"0:51,51","heat":"1"}
<message_mapper> store lane 1: lane 1 0:51,51 1
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"1","time":"0:51,51","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"1","time":"0:51,51","heat":"1"}
mqtt_handler datamapping incoming lane 2 1:1,37 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:1,37
(place)lane: 2
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"2","time":"1:1,37","heat":"1"}
<message_mapper> store lane 2: lane 2 1:1,37 2
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"2","time":"1:1,37","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"2","time":"1:1,37","heat":"1"}
mqtt_handler datamapping incoming lane 3 1:50,97 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:50,97
(place)lane: 3
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"1:50,97","heat":"1"}
<message_mapper> store lane 3: lane 3 1:50,97 3
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"1:50,97","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"1:50,97","heat":"1"}
mqtt_handler datamapping incoming lane 4 0:13,0 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:13,0
(place)lane: 4
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"4","time":"0:13,0","heat":"1"}
<message_mapper> store lane 4: lane 4 0:13,0 4
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"4","time":"0:13,0","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"4","time":"0:13,0","heat":"1"}
mqtt_handler datamapping incoming lane 5 0:18,32 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:18,32
(place)lane: 5
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"0:18,32","heat":"1"}
<message_mapper> store lane 5: lane 5 0:18,32 5
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"0:18,32","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"0:18,32","heat":"1"}
mqtt_handler datamapping incoming lane 6 1:22,75 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:22,75
(place)lane: 6
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"1","place":"6","time":"1:22,75","heat":"1"}
<message_mapper> store lane 6: lane 6 1:22,75 6
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"6","time":"1:22,75","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"6","time":"1:22,75","heat":"1"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584039769"}
websocket backend mainchannel {"type":"stop","time":"1584039769"}
stop
websocket backend send {"type":"stop","time":"1584039769"}
mqtt_handler datamapping incoming header 1 2
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 2
<swim_events> getInternalHeatId 1 2
<swim_event> number heats 25608
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584039775"}
websocket backend mainchannel {"type":"start","time":"1584039775"}
start
websocket backend send {"type":"start","time":"1584039775"}
mqtt_handler datamapping incoming lane 1 1:34,77 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:34,77
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:34,77","heat":"2"}
<message_mapper> store lane 1: lane 1 1:34,77 0
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:34,77","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:34,77","heat":"2"}
mqtt_handler datamapping incoming lane 2 0:40,72 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:40,72
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"0","time":"0:40,72","heat":"2"}
<message_mapper> store lane 2: lane 2 0:40,72 0
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"0","time":"0:40,72","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"0","time":"0:40,72","heat":"2"}
mqtt_handler datamapping incoming lane 3 1:17,13 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:17,13
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:17,13","heat":"2"}
<message_mapper> store lane 3: lane 3 1:17,13 0
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:17,13","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:17,13","heat":"2"}
mqtt_handler datamapping incoming lane 4 0:39,57 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:39,57
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:39,57","heat":"2"}
<message_mapper> store lane 4: lane 4 0:39,57 0
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:39,57","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:39,57","heat":"2"}
mqtt_handler datamapping incoming lane 5 0:12,47 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:12,47
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:12,47","heat":"2"}
<message_mapper> store lane 5: lane 5 0:12,47 0
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:12,47","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:12,47","heat":"2"}
mqtt_handler datamapping incoming lane 6 0:19,66 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:19,66
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"0","time":"0:19,66","heat":"2"}
<message_mapper> store lane 6: lane 6 0:19,66 0
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"0","time":"0:19,66","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"0","time":"0:19,66","heat":"2"}
mqtt_handler datamapping incoming lane 1 1:58,77 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:58,77
(place)lane: 1
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:58,77","heat":"2"}
<message_mapper> store lane 1: lane 1 1:58,77 1
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:58,77","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:58,77","heat":"2"}
mqtt_handler datamapping incoming lane 2 1:49,13 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:49,13
(place)lane: 2
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"2","time":"1:49,13","heat":"2"}
<message_mapper> store lane 2: lane 2 1:49,13 2
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"2","time":"1:49,13","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"2","time":"1:49,13","heat":"2"}
mqtt_handler datamapping incoming lane 3 1:37,97 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:37,97
(place)lane: 3
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"1:37,97","heat":"2"}
<message_mapper> store lane 3: lane 3 1:37,97 3
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"1:37,97","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"1:37,97","heat":"2"}
mqtt_handler datamapping incoming lane 4 1:30,90 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:30,90
(place)lane: 4
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"4","time":"1:30,90","heat":"2"}
<message_mapper> store lane 4: lane 4 1:30,90 4
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"4","time":"1:30,90","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"4","time":"1:30,90","heat":"2"}
mqtt_handler datamapping incoming lane 5 0:15,78 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:15,78
(place)lane: 5
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"0:15,78","heat":"2"}
<message_mapper> store lane 5: lane 5 0:15,78 5
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"0:15,78","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"0:15,78","heat":"2"}
mqtt_handler datamapping incoming lane 6 0:13,8 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:13,8
(place)lane: 6
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"6","time":"0:13,8","heat":"2"}
<message_mapper> store lane 6: lane 6 0:13,8 6
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"6","time":"0:13,8","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"6","time":"0:13,8","heat":"2"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584039786"}
websocket backend mainchannel {"type":"stop","time":"1584039786"}
stop
websocket backend send {"type":"stop","time":"1584039786"}
mqtt_handler datamapping incoming header 1 3
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 3
<swim_events> getInternalHeatId 1 3
<swim_event> number heats 25609
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584039792"}
websocket backend mainchannel {"type":"start","time":"1584039792"}
start
websocket backend send {"type":"start","time":"1584039792"}
mqtt_handler datamapping incoming lane 1 0:21,65 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:21,65
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:21,65","heat":"3"}
<message_mapper> store lane 1: lane 1 0:21,65 0
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:21,65","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:21,65","heat":"3"}
mqtt_handler datamapping incoming lane 2 1:30,90 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:30,90
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"1:30,90","heat":"3"}
<message_mapper> store lane 2: lane 2 1:30,90 0
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"1:30,90","heat":"3"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"1:30,90","heat":"3"}
mqtt_handler datamapping incoming lane 3 1:45,68 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:45,68
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:45,68","heat":"3"}
<message_mapper> store lane 3: lane 3 1:45,68 0
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:45,68","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:45,68","heat":"3"}
mqtt_handler datamapping incoming lane 4 1:53,68 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:53,68
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:53,68","heat":"3"}
<message_mapper> store lane 4: lane 4 1:53,68 0
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:53,68","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:53,68","heat":"3"}
mqtt_handler datamapping incoming lane 5 1:13,55 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:13,55
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:13,55","heat":"3"}
<message_mapper> store lane 5: lane 5 1:13,55 0
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:13,55","heat":"3"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:13,55","heat":"3"}
mqtt_handler datamapping incoming lane 6 1:37,7 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:37,7
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:37,7","heat":"3"}
<message_mapper> store lane 6: lane 6 1:37,7 0
websocket backend mainchannel {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:37,7","heat":"3"}
lane
websocket backend send {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:37,7","heat":"3"}
mqtt_handler datamapping incoming lane 1 0:51,82 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:51,82
(place)lane: 1
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"0:51,82","heat":"3"}
<message_mapper> store lane 1: lane 1 0:51,82 1
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"0:51,82","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"0:51,82","heat":"3"}
mqtt_handler datamapping incoming lane 2 1:26,64 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:26,64
(place)lane: 2
<swim_event> get swimmer for internalheatid 25609 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"2","time":"1:26,64","heat":"3"}
<message_mapper> store lane 2: lane 2 1:26,64 2
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"2","time":"1:26,64","heat":"3"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"2","time":"1:26,64","heat":"3"}
mqtt_handler datamapping incoming lane 3 0:47,21 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:47,21
(place)lane: 3
<swim_event> get swimmer for internalheatid 25609 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"0:47,21","heat":"3"}
<message_mapper> store lane 3: lane 3 0:47,21 3
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"0:47,21","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"0:47,21","heat":"3"}
mqtt_handler datamapping incoming lane 4 1:29,34 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:29,34
(place)lane: 4
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"4","time":"1:29,34","heat":"3"}
<message_mapper> store lane 4: lane 4 1:29,34 4
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"4","time":"1:29,34","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"4","time":"1:29,34","heat":"3"}
mqtt_handler datamapping incoming lane 5 0:37,82 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:37,82
(place)lane: 5
<swim_event> get swimmer for internalheatid 25609 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"0:37,82","heat":"3"}
<message_mapper> store lane 5: lane 5 0:37,82 5
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"0:37,82","heat":"3"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"0:37,82","heat":"3"}
mqtt_handler datamapping incoming lane 6 1:3,91 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:3,91
(place)lane: 6
<swim_event> get swimmer for internalheatid 25609 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"6","time":"1:3,91","heat":"3"}
<message_mapper> store lane 6: lane 6 1:3,91 6
websocket backend mainchannel {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"6","time":"1:3,91","heat":"3"}
lane
websocket backend send {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"6","time":"1:3,91","heat":"3"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584039804"}
websocket backend mainchannel {"type":"stop","time":"1584039804"}
stop
websocket backend send {"type":"stop","time":"1584039804"}
mqtt_handler datamapping incoming header 1 4
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 4
<swim_events> getInternalHeatId 1 4
<swim_event> number heats 25610
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"4","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"4","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"4","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584039810"}
websocket backend mainchannel {"type":"start","time":"1584039810"}
start
websocket backend send {"type":"start","time":"1584039810"}
mqtt_handler datamapping incoming lane 1 0:3,79 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:3,79
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:3,79","heat":"4"}
<message_mapper> store lane 1: lane 1 0:3,79 0
websocket backend mainchannel {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:3,79","heat":"4"}
lane
websocket backend send {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:3,79","heat":"4"}
mqtt_handler datamapping incoming lane 2 1:11,92 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:11,92
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,92","heat":"4"}
<message_mapper> store lane 2: lane 2 1:11,92 0
websocket backend mainchannel {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,92","heat":"4"}
lane
websocket backend send {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,92","heat":"4"}
mqtt_handler datamapping incoming lane 3 1:53,37 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:53,37
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:53,37","heat":"4"}
<message_mapper> store lane 3: lane 3 1:53,37 0
websocket backend mainchannel {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:53,37","heat":"4"}
lane
websocket backend send {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:53,37","heat":"4"}
mqtt_handler datamapping incoming lane 4 1:3,99 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:3,99
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"0","time":"1:3,99","heat":"4"}
<message_mapper> store lane 4: lane 4 1:3,99 0
websocket backend mainchannel {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"0","time":"1:3,99","heat":"4"}
lane
websocket backend send {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"0","time":"1:3,99","heat":"4"}
mqtt_handler datamapping incoming lane 5 0:15,92 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:15,92
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:15,92","heat":"4"}
<message_mapper> store lane 5: lane 5 0:15,92 0
websocket backend mainchannel {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:15,92","heat":"4"}
lane
websocket backend send {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:15,92","heat":"4"}
mqtt_handler datamapping incoming lane 6 1:29,49 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:29,49
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"1:29,49","heat":"4"}
<message_mapper> store lane 6: lane 6 1:29,49 0
websocket backend mainchannel {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"1:29,49","heat":"4"}
lane
websocket backend send {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"1:29,49","heat":"4"}
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1584039816"}
websocket backend mainchannel {"type":"startlist","time":"1584039816"}
startlist
websocket backend send {"type":"startlist","time":"1584039816"}
mqtt_handler datamapping incoming lane 1 0:35,50 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:35,50
(place)lane: 1
<swim_event> get swimmer for internalheatid 25610 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"0:35,50","heat":"4"}
<message_mapper> store lane 1: lane 1 0:35,50 1
websocket backend mainchannel {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"0:35,50","heat":"4"}
lane
websocket backend send {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"0:35,50","heat":"4"}
mqtt_handler datamapping incoming lane 2 0:37,1 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:37,1
(place)lane: 2
<swim_event> get swimmer for internalheatid 25610 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"2","time":"0:37,1","heat":"4"}
<message_mapper> store lane 2: lane 2 0:37,1 2
websocket backend mainchannel {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"2","time":"0:37,1","heat":"4"}
lane
websocket backend send {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"2","time":"0:37,1","heat":"4"}
mqtt_handler datamapping incoming lane 3 0:32,12 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:32,12
(place)lane: 3
<swim_event> get swimmer for internalheatid 25610 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"0:32,12","heat":"4"}
<message_mapper> store lane 3: lane 3 0:32,12 3
websocket backend mainchannel {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"0:32,12","heat":"4"}
lane
websocket backend send {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"0:32,12","heat":"4"}
mqtt_handler datamapping incoming lane 4 0:21,52 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:21,52
(place)lane: 4
<swim_event> get swimmer for internalheatid 25610 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"4","time":"0:21,52","heat":"4"}
<message_mapper> store lane 4: lane 4 0:21,52 4
websocket backend mainchannel {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"4","time":"0:21,52","heat":"4"}
lane
websocket backend send {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"4","time":"0:21,52","heat":"4"}
mqtt_handler datamapping incoming lane 5 1:1,27 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:1,27
(place)lane: 5
<swim_event> get swimmer for internalheatid 25610 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"1:1,27","heat":"4"}
<message_mapper> store lane 5: lane 5 1:1,27 5
websocket backend mainchannel {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"1:1,27","heat":"4"}
lane
websocket backend send {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"1:1,27","heat":"4"}
mqtt_handler datamapping incoming lane 6 0:8,1 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:8,1
(place)lane: 6
<swim_event> get swimmer for internalheatid 25610 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"6","time":"0:8,1","heat":"4"}
<message_mapper> store lane 6: lane 6 0:8,1 6
websocket backend mainchannel {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"6","time":"0:8,1","heat":"4"}
lane
websocket backend send {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"6","time":"0:8,1","heat":"4"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584039821"}
websocket backend mainchannel {"type":"stop","time":"1584039821"}
stop
websocket backend send {"type":"stop","time":"1584039821"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584039824"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584039824"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584039824"}
mqtt_handler datamapping incoming header 2 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -2-
HEAT: 1
<swim_events> getInternalHeatId 2 1
<swim_event> number heats 25612
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"2","heat":"1","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25612 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25612 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25612 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25612 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25612 no relay lane 5
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25612 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"1","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
----------------- reset clock
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"1","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"2","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"2","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"5","event":"2","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"5","event":"2","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"1"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584039832"}
websocket backend mainchannel {"type":"start","time":"1584039832"}
start
websocket backend send {"type":"start","time":"1584039832"}
mqtt_handler datamapping incoming lane 1 1:27,40 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:27,40
(place)lane: 0
<swim_event> get swimmer for internalheatid 25612 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"2","place":"0","time":"1:27,40","heat":"1"}
<message_mapper> store lane 1: lane 1 1:27,40 0
websocket backend mainchannel {"type":"lane","lane":"1","event":"2","place":"0","time":"1:27,40","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"2","place":"0","time":"1:27,40","heat":"1"}
mqtt_handler datamapping incoming lane 2 0:2,38 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:2,38
(place)lane: 0
<swim_event> get swimmer for internalheatid 25612 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"0:2,38","heat":"1"}
<message_mapper> store lane 2: lane 2 0:2,38 0
websocket backend mainchannel {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"0:2,38","heat":"1"}
lane
websocket backend send {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"0:2,38","heat":"1"}
mqtt_handler datamapping incoming lane 3 1:4,10 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:4,10
(place)lane: 0
<swim_event> get swimmer for internalheatid 25612 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"1:4,10","heat":"1"}
<message_mapper> store lane 3: lane 3 1:4,10 0
websocket backend mainchannel {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"1:4,10","heat":"1"}
lane
websocket backend send {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"1:4,10","heat":"1"}
mqtt_handler datamapping incoming lane 4 0:15,72 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:15,72
(place)lane: 0
<swim_event> get swimmer for internalheatid 25612 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"0","time":"0:15,72","heat":"1"}
<message_mapper> store lane 4: lane 4 0:15,72 0
websocket backend mainchannel {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"0","time":"0:15,72","heat":"1"}
lane
websocket backend send {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"0","time":"0:15,72","heat":"1"}
mqtt_handler datamapping incoming lane 5 1:35,74 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:35,74
(place)lane: 0
<swim_event> get swimmer for internalheatid 25612 no relay lane 5
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"5","event":"2","place":"0","time":"1:35,74","heat":"1"}
<message_mapper> store lane 5: lane 5 1:35,74 0
websocket backend mainchannel {"type":"lane","lane":"5","event":"2","place":"0","time":"1:35,74","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"5","event":"2","place":"0","time":"1:35,74","heat":"1"}
mqtt_handler datamapping incoming lane 6 1:23,91 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:23,91
(place)lane: 0
<swim_event> get swimmer for internalheatid 25612 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"2","place":"0","time":"1:23,91","heat":"1"}
<message_mapper> store lane 6: lane 6 1:23,91 0
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"0","time":"1:23,91","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"0","time":"1:23,91","heat":"1"}
mqtt_handler datamapping incoming lane 1 1:24,41 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:24,41
(place)lane: 1
<swim_event> get swimmer for internalheatid 25612 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"2","place":"1","time":"1:24,41","heat":"1"}
<message_mapper> store lane 1: lane 1 1:24,41 1
websocket backend mainchannel {"type":"lane","lane":"1","event":"2","place":"1","time":"1:24,41","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"2","place":"1","time":"1:24,41","heat":"1"}
mqtt_handler datamapping incoming lane 2 1:10,24 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:10,24
(place)lane: 2
<swim_event> get swimmer for internalheatid 25612 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"2","time":"1:10,24","heat":"1"}
<message_mapper> store lane 2: lane 2 1:10,24 2
websocket backend mainchannel {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"2","time":"1:10,24","heat":"1"}
lane
websocket backend send {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"2","time":"1:10,24","heat":"1"}
mqtt_handler datamapping incoming lane 3 1:53,56 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:53,56
(place)lane: 3
<swim_event> get swimmer for internalheatid 25612 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"3","time":"1:53,56","heat":"1"}
<message_mapper> store lane 3: lane 3 1:53,56 3
websocket backend mainchannel {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"3","time":"1:53,56","heat":"1"}
lane
websocket backend send {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"3","time":"1:53,56","heat":"1"}
mqtt_handler datamapping incoming lane 4 1:27,77 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:27,77
(place)lane: 4
<swim_event> get swimmer for internalheatid 25612 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"4","time":"1:27,77","heat":"1"}
<message_mapper> store lane 4: lane 4 1:27,77 4
websocket backend mainchannel {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"4","time":"1:27,77","heat":"1"}
lane
websocket backend send {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"4","time":"1:27,77","heat":"1"}
mqtt_handler datamapping incoming lane 5 1:22,64 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:22,64
(place)lane: 5
<swim_event> get swimmer for internalheatid 25612 no relay lane 5
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"5","event":"2","place":"5","time":"1:22,64","heat":"1"}
<message_mapper> store lane 5: lane 5 1:22,64 5
websocket backend mainchannel {"type":"lane","lane":"5","event":"2","place":"5","time":"1:22,64","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"5","event":"2","place":"5","time":"1:22,64","heat":"1"}
mqtt_handler datamapping incoming lane 6 0:52,11 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:52,11
(place)lane: 6
<swim_event> get swimmer for internalheatid 25612 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"2","place":"6","time":"0:52,11","heat":"1"}
<message_mapper> store lane 6: lane 6 0:52,11 6
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"6","time":"0:52,11","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"6","time":"0:52,11","heat":"1"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584039844"}
websocket backend mainchannel {"type":"stop","time":"1584039844"}
stop
websocket backend send {"type":"stop","time":"1584039844"}
mqtt_handler datamapping incoming header 2 2
<message_mapper> beginn parse
<incoming> Type: header
Event: -2-
HEAT: 2
<swim_events> getInternalHeatId 2 2
<swim_event> number heats 25613
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend Client disconnected

> websocket_backend@1.0.0 start /Users/matthiasfuchs/projects/schwimmen/webtiming/websocket_backend
> node app.js


> administration@0.1.0 start /Users/matthiasfuchs/projects/schwimmen/webtiming/react_frontend/administration
> react-scripts start


> express-api-mqtt-example@1.0.0 start /Users/matthiasfuchs/projects/schwimmen/webtiming/datamapping
> node app.js

<incoming> using /Users/matthiasfuchs/projects/schwimmen/webtiming/datamapping/incoming/../property.ini
<incoming> using file resources/kinder.lef
<swim_event> read resources/kinder.lef
<mqqt_message_sender>lenex success upload new lenex file
<swim_event> Event type ALL
<sender> no auth set for outgoing mqttfalse undefined undefined
<sender> DEST_MQTT_HOST: mqtt://localhost
<mapper> use 6 lanes
Something is already running on port 3000.

> websocket_backend@1.0.0 start /Users/matthiasfuchs/projects/schwimmen/webtiming/websocket_backend
> node app.js


> administration@0.1.0 start /Users/matthiasfuchs/projects/schwimmen/webtiming/react_frontend/administration
> react-scripts start


> express-api-mqtt-example@1.0.0 start /Users/matthiasfuchs/projects/schwimmen/webtiming/datamapping
> node app.js

<incoming> using /Users/matthiasfuchs/projects/schwimmen/webtiming/datamapping/incoming/../property.ini
<incoming> using file resources/kinder.lef
<swim_event> read resources/kinder.lef
<mqqt_message_sender>lenex success upload new lenex file
<swim_event> Event type ALL
<sender> no auth set for outgoing mqttfalse undefined undefined
<sender> DEST_MQTT_HOST: mqtt://localhost
<mapper> use 6 lanes
Something is already running on port 3000.
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/GET
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584104765"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584104765"}
video
websocket backend send {"type":"video","version":"3","time":"1584104765"}
/POST
Message: {"message":"message start"}
mqtt_handler datamapping incoming message start
<message_mapper> beginn parse
<incoming> Type: message
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"message","value":"start","time":"1584104773"}
websocket backend mainchannel {"type":"message","value":"start","time":"1584104773"}
message
websocket backend send {"type":"message","value":"start","time":"1584104773"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584113156"}
race 2
<incoming> Type: header
Event: -2-
HEAT: 2
<swim_events> getInternalHeatId 2 2
<swim_event> number heats 25613
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584113156"}
race
websocket backend send {"type":"race","time":"1584113156"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
/POST
Message: {"message":"clock"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584113157"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584113157"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584113157"}
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1584113158"}
websocket backend mainchannel {"type":"startlist","time":"1584113158"}
startlist
websocket backend send {"type":"startlist","time":"1584113158"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584113160"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584113160"}
video
websocket backend send {"type":"video","version":"1","time":"1584113160"}
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584113161"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584113161"}
video
websocket backend send {"type":"video","version":"3","time":"1584113161"}
/POST
Message: {"message":"video 4"}
mqtt_handler datamapping incoming video 4
<message_mapper> beginn parse
<incoming> Type: video
Event: -4-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"4","time":"1584113162"}
websocket backend mainchannel {"type":"video","version":"4","time":"1584113162"}
video
websocket backend send {"type":"video","version":"4","time":"1584113162"}
/POST
Message: {"message":"video 5"}
mqtt_handler datamapping incoming video 5
<message_mapper> beginn parse
<incoming> Type: video
Event: -5-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"5","time":"1584113162"}
websocket backend mainchannel {"type":"video","version":"5","time":"1584113162"}
video
websocket backend send {"type":"video","version":"5","time":"1584113162"}
/POST
Message: {"message":"video 4"}
mqtt_handler datamapping incoming video 4
<message_mapper> beginn parse
<incoming> Type: video
Event: -4-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"4","time":"1584113162"}
websocket backend mainchannel {"type":"video","version":"4","time":"1584113162"}
video
websocket backend send {"type":"video","version":"4","time":"1584113162"}
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584113163"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584113163"}
video
websocket backend send {"type":"video","version":"3","time":"1584113163"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584113163"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584113163"}
video
websocket backend send {"type":"video","version":"2","time":"1584113163"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584113164"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584113164"}
video
websocket backend send {"type":"video","version":"1","time":"1584113164"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584114527"}
race 2
<incoming> Type: header
Event: -2-
HEAT: 2
<swim_events> getInternalHeatId 2 2
<swim_event> number heats 25613
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584114527"}
race
websocket backend send {"type":"race","time":"1584114527"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584114528"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584114528"}
video
websocket backend send {"type":"video","version":"2","time":"1584114528"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584114555"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584114555"}
video
websocket backend send {"type":"video","version":"1","time":"1584114555"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584114672"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584114672"}
video
websocket backend send {"type":"video","version":"2","time":"1584114672"}
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584114673"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584114673"}
video
websocket backend send {"type":"video","version":"3","time":"1584114673"}
/POST
Message: {"message":"clock"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584114675"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584114675"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584114675"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584114676"}
race 2
<incoming> Type: header
Event: -2-
HEAT: 2
<swim_events> getInternalHeatId 2 2
<swim_event> number heats 25613
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584114676"}
race
websocket backend send {"type":"race","time":"1584114676"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584114677"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584114677"}
video
websocket backend send {"type":"video","version":"2","time":"1584114677"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584114690"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584114690"}
video
websocket backend send {"type":"video","version":"3","time":"1584114690"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584114693"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584114693"}
video
websocket backend send {"type":"video","version":"2","time":"1584114693"}
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584114694"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584114694"}
video
websocket backend send {"type":"video","version":"3","time":"1584114694"}
/POST
Message: {"message":"clock"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584114698"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584114698"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584114698"}
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584114699"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584114699"}
video
websocket backend send {"type":"video","version":"3","time":"1584114699"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584114701"}
race 2
<incoming> Type: header
Event: -2-
HEAT: 2
<swim_events> getInternalHeatId 2 2
<swim_event> number heats 25613
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584114701"}
race
websocket backend send {"type":"race","time":"1584114701"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584114702"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584114702"}
video
websocket backend send {"type":"video","version":"2","time":"1584114702"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584114714"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584114714"}
video
websocket backend send {"type":"video","version":"2","time":"1584114714"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584114908"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584114908"}
video
websocket backend send {"type":"video","version":"2","time":"1584114908"}
/POST
Message: {"message":"clock"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584114911"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584114911"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584114911"}
/POST
Message: {"message":"message start"}
mqtt_handler datamapping incoming message start
<message_mapper> beginn parse
<incoming> Type: message
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"message","value":"start","time":"1584114914"}
websocket backend mainchannel {"type":"message","value":"start","time":"1584114914"}
message
websocket backend send {"type":"message","value":"start","time":"1584114914"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584114916"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584114916"}
video
websocket backend send {"type":"video","version":"2","time":"1584114916"}
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584114916"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584114916"}
video
websocket backend send {"type":"video","version":"3","time":"1584114916"}
/POST
Message: {"message":"video 4"}
mqtt_handler datamapping incoming video 4
<message_mapper> beginn parse
<incoming> Type: video
Event: -4-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"4","time":"1584114917"}
websocket backend mainchannel {"type":"video","version":"4","time":"1584114917"}
video
websocket backend send {"type":"video","version":"4","time":"1584114917"}
/POST
Message: {"message":"video 4"}
mqtt_handler datamapping incoming video 4
<message_mapper> beginn parse
<incoming> Type: video
Event: -4-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"4","time":"1584114918"}
websocket backend mainchannel {"type":"video","version":"4","time":"1584114918"}
video
websocket backend send {"type":"video","version":"4","time":"1584114918"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584114919"}
race 2
<incoming> Type: header
Event: -2-
HEAT: 2
<swim_events> getInternalHeatId 2 2
<swim_event> number heats 25613
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584114919"}
race
websocket backend send {"type":"race","time":"1584114919"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584114920"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584114920"}
video
websocket backend send {"type":"video","version":"2","time":"1584114920"}
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584114921"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584114921"}
video
websocket backend send {"type":"video","version":"3","time":"1584114921"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584114922"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584114922"}
video
websocket backend send {"type":"video","version":"2","time":"1584114922"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584114922"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584114922"}
video
websocket backend send {"type":"video","version":"1","time":"1584114922"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584114923"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584114923"}
video
websocket backend send {"type":"video","version":"2","time":"1584114923"}
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584114923"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584114923"}
video
websocket backend send {"type":"video","version":"3","time":"1584114923"}
/POST
Message: {"message":"video 4"}
mqtt_handler datamapping incoming video 4
<message_mapper> beginn parse
<incoming> Type: video
Event: -4-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"4","time":"1584114923"}
websocket backend mainchannel {"type":"video","version":"4","time":"1584114923"}
video
websocket backend send {"type":"video","version":"4","time":"1584114923"}
/POST
Message: {"message":"video 4"}
mqtt_handler datamapping incoming video 4
<message_mapper> beginn parse
<incoming> Type: video
Event: -4-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"4","time":"1584114924"}
websocket backend mainchannel {"type":"video","version":"4","time":"1584114924"}
video
websocket backend send {"type":"video","version":"4","time":"1584114924"}
/POST
Message: {"message":"video 5"}
mqtt_handler datamapping incoming video 5
<message_mapper> beginn parse
<incoming> Type: video
Event: -5-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"5","time":"1584114924"}
websocket backend mainchannel {"type":"video","version":"5","time":"1584114924"}
video
websocket backend send {"type":"video","version":"5","time":"1584114924"}
/POST
Message: {"message":"video 4"}
mqtt_handler datamapping incoming video 4
<message_mapper> beginn parse
<incoming> Type: video
Event: -4-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"4","time":"1584114924"}
websocket backend mainchannel {"type":"video","version":"4","time":"1584114924"}
video
websocket backend send {"type":"video","version":"4","time":"1584114924"}
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584114925"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584114925"}
video
websocket backend send {"type":"video","version":"3","time":"1584114925"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584114925"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584114925"}
video
websocket backend send {"type":"video","version":"2","time":"1584114925"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584114925"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584114925"}
video
websocket backend send {"type":"video","version":"2","time":"1584114925"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584114926"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584114926"}
video
websocket backend send {"type":"video","version":"1","time":"1584114926"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584115725"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584115725"}
video
websocket backend send {"type":"video","version":"2","time":"1584115725"}
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584115730"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584115730"}
video
websocket backend send {"type":"video","version":"3","time":"1584115730"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584115732"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584115732"}
video
websocket backend send {"type":"video","version":"2","time":"1584115732"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584115733"}
race 2
<incoming> Type: header
Event: -2-
HEAT: 2
<swim_events> getInternalHeatId 2 2
<swim_event> number heats 25613
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584115733"}
race
websocket backend send {"type":"race","time":"1584115733"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584115734"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584115734"}
video
websocket backend send {"type":"video","version":"2","time":"1584115734"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584115844"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584115844"}
video
websocket backend send {"type":"video","version":"2","time":"1584115844"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584115874"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584115874"}
video
websocket backend send {"type":"video","version":"2","time":"1584115874"}
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584115877"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584115877"}
video
websocket backend send {"type":"video","version":"3","time":"1584115877"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584115878"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584115878"}
video
websocket backend send {"type":"video","version":"2","time":"1584115878"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584115879"}
race 2
<incoming> Type: header
Event: -2-
HEAT: 2
<swim_events> getInternalHeatId 2 2
<swim_event> number heats 25613
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584115879"}
race
websocket backend send {"type":"race","time":"1584115879"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584115880"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584115880"}
video
websocket backend send {"type":"video","version":"2","time":"1584115880"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584115884"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584115884"}
video
websocket backend send {"type":"video","version":"2","time":"1584115884"}
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584115886"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584115886"}
video
websocket backend send {"type":"video","version":"3","time":"1584115886"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584115941"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584115941"}
video
websocket backend send {"type":"video","version":"3","time":"1584115941"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584116064"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584116064"}
video
websocket backend send {"type":"video","version":"2","time":"1584116064"}
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584116066"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584116066"}
video
websocket backend send {"type":"video","version":"3","time":"1584116066"}
/POST
Message: {"message":"video 4"}
mqtt_handler datamapping incoming video 4
<message_mapper> beginn parse
<incoming> Type: video
Event: -4-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"4","time":"1584116067"}
websocket backend mainchannel {"type":"video","version":"4","time":"1584116067"}
video
websocket backend send {"type":"video","version":"4","time":"1584116067"}
/POST
Message: {"message":"video 4"}
mqtt_handler datamapping incoming video 4
<message_mapper> beginn parse
<incoming> Type: video
Event: -4-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"4","time":"1584116067"}
websocket backend mainchannel {"type":"video","version":"4","time":"1584116067"}
video
websocket backend send {"type":"video","version":"4","time":"1584116067"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584116068"}
race 2
<incoming> Type: header
Event: -2-
HEAT: 2
<swim_events> getInternalHeatId 2 2
<swim_event> number heats 25613
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584116068"}
race
websocket backend send {"type":"race","time":"1584116068"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584116069"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584116069"}
video
websocket backend send {"type":"video","version":"2","time":"1584116069"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584116269"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584116269"}
video
websocket backend send {"type":"video","version":"3","time":"1584116269"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584116306"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584116306"}
video
websocket backend send {"type":"video","version":"2","time":"1584116306"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584116353"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584116353"}
video
websocket backend send {"type":"video","version":"2","time":"1584116353"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584116624"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584116624"}
video
websocket backend send {"type":"video","version":"2","time":"1584116624"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584116769"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584116769"}
video
websocket backend send {"type":"video","version":"2","time":"1584116769"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584116833"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584116833"}
video
websocket backend send {"type":"video","version":"1","time":"1584116833"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584116837"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584116837"}
video
websocket backend send {"type":"video","version":"1","time":"1584116837"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584116843"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584116843"}
video
websocket backend send {"type":"video","version":"2","time":"1584116843"}
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584116845"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584116845"}
video
websocket backend send {"type":"video","version":"3","time":"1584116845"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584116863"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584116863"}
video
websocket backend send {"type":"video","version":"1","time":"1584116863"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584116883"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584116883"}
video
websocket backend send {"type":"video","version":"1","time":"1584116883"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584117001"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584117001"}
video
websocket backend send {"type":"video","version":"1","time":"1584117001"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584117053"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584117053"}
video
websocket backend send {"type":"video","version":"2","time":"1584117053"}
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584117054"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584117054"}
video
websocket backend send {"type":"video","version":"3","time":"1584117054"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584117054"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584117054"}
video
websocket backend send {"type":"video","version":"2","time":"1584117054"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584117055"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584117055"}
video
websocket backend send {"type":"video","version":"1","time":"1584117055"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584117089"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584117089"}
video
websocket backend send {"type":"video","version":"1","time":"1584117089"}
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584117097"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584117097"}
video
websocket backend send {"type":"video","version":"3","time":"1584117097"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584117149"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584117149"}
video
websocket backend send {"type":"video","version":"1","time":"1584117149"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584117152"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584117152"}
video
websocket backend send {"type":"video","version":"2","time":"1584117152"}
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584117154"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584117154"}
video
websocket backend send {"type":"video","version":"3","time":"1584117154"}
/POST
Message: {"message":"video 4"}
mqtt_handler datamapping incoming video 4
<message_mapper> beginn parse
<incoming> Type: video
Event: -4-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"4","time":"1584117156"}
websocket backend mainchannel {"type":"video","version":"4","time":"1584117156"}
video
websocket backend send {"type":"video","version":"4","time":"1584117156"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584117183"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584117183"}
video
websocket backend send {"type":"video","version":"1","time":"1584117183"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584117187"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584117187"}
video
websocket backend send {"type":"video","version":"2","time":"1584117187"}
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584117190"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584117190"}
video
websocket backend send {"type":"video","version":"3","time":"1584117190"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584117193"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584117193"}
video
websocket backend send {"type":"video","version":"1","time":"1584117193"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584117195"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584117195"}
video
websocket backend send {"type":"video","version":"2","time":"1584117195"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584117197"}
race 2
<incoming> Type: header
Event: -2-
HEAT: 2
<swim_events> getInternalHeatId 2 2
<swim_event> number heats 25613
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584117197"}
race
websocket backend send {"type":"race","time":"1584117197"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584117198"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584117198"}
video
websocket backend send {"type":"video","version":"1","time":"1584117198"}
/POST
Message: {"message":"message msg"}
mqtt_handler datamapping incoming message msg
<message_mapper> beginn parse
<incoming> Type: message
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"message","value":"msg","time":"1584117222"}
websocket backend mainchannel {"type":"message","value":"msg","time":"1584117222"}
message
websocket backend send {"type":"message","value":"msg","time":"1584117222"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584117321"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584117321"}
video
websocket backend send {"type":"video","version":"2","time":"1584117321"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584117323"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584117323"}
video
websocket backend send {"type":"video","version":"1","time":"1584117323"}
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584117325"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584117325"}
video
websocket backend send {"type":"video","version":"3","time":"1584117325"}
/POST
Message: {"message":"video 4"}
mqtt_handler datamapping incoming video 4
<message_mapper> beginn parse
<incoming> Type: video
Event: -4-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"4","time":"1584117326"}
websocket backend mainchannel {"type":"video","version":"4","time":"1584117326"}
video
websocket backend send {"type":"video","version":"4","time":"1584117326"}
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584117327"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584117327"}
video
websocket backend send {"type":"video","version":"3","time":"1584117327"}
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584117328"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584117328"}
video
websocket backend send {"type":"video","version":"3","time":"1584117328"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584117329"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584117329"}
video
websocket backend send {"type":"video","version":"2","time":"1584117329"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584117330"}
race 2
<incoming> Type: header
Event: -2-
HEAT: 2
<swim_events> getInternalHeatId 2 2
<swim_event> number heats 25613
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584117330"}
race
websocket backend send {"type":"race","time":"1584117330"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
/POST
Message: {"message":"message msg"}
mqtt_handler datamapping incoming message msg
<message_mapper> beginn parse
<incoming> Type: message
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"message","value":"msg","time":"1584117332"}
websocket backend mainchannel {"type":"message","value":"msg","time":"1584117332"}
message
websocket backend send {"type":"message","value":"msg","time":"1584117332"}
/POST
Message: {"message":"message msg"}
mqtt_handler datamapping incoming message msg
<message_mapper> beginn parse
<incoming> Type: message
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"message","value":"msg","time":"1584117334"}
websocket backend mainchannel {"type":"message","value":"msg","time":"1584117334"}
message
websocket backend send {"type":"message","value":"msg","time":"1584117334"}
/POST
Message: {"message":"message msg"}
mqtt_handler datamapping incoming message msg
<message_mapper> beginn parse
<incoming> Type: message
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"message","value":"msg","time":"1584117335"}
websocket backend mainchannel {"type":"message","value":"msg","time":"1584117335"}
message
websocket backend send {"type":"message","value":"msg","time":"1584117335"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584117516"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584117516"}
video
websocket backend send {"type":"video","version":"2","time":"1584117516"}
/POST
Message: {"message":"clock"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584117519"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584117519"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584117519"}
/POST
Message: {"message":"message msg"}
mqtt_handler datamapping incoming message msg
<message_mapper> beginn parse
<incoming> Type: message
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"message","value":"msg","time":"1584117523"}
websocket backend mainchannel {"type":"message","value":"msg","time":"1584117523"}
message
websocket backend send {"type":"message","value":"msg","time":"1584117523"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584117534"}
race 2
<incoming> Type: header
Event: -2-
HEAT: 2
<swim_events> getInternalHeatId 2 2
<swim_event> number heats 25613
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584117534"}
race
websocket backend send {"type":"race","time":"1584117534"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
/POST
Message: {"message":"message msg"}
mqtt_handler datamapping incoming message msg
<message_mapper> beginn parse
<incoming> Type: message
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"message","value":"msg","time":"1584117536"}
websocket backend mainchannel {"type":"message","value":"msg","time":"1584117536"}
message
websocket backend send {"type":"message","value":"msg","time":"1584117536"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584117538"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584117538"}
video
websocket backend send {"type":"video","version":"1","time":"1584117538"}
/POST
Message: {"message":"message msg"}
mqtt_handler datamapping incoming message msg
<message_mapper> beginn parse
<incoming> Type: message
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"message","value":"msg","time":"1584117540"}
websocket backend mainchannel {"type":"message","value":"msg","time":"1584117540"}
message
websocket backend send {"type":"message","value":"msg","time":"1584117540"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584117541"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584117541"}
video
websocket backend send {"type":"video","version":"2","time":"1584117541"}
/POST
Message: {"message":"message msg"}
mqtt_handler datamapping incoming message msg
<message_mapper> beginn parse
<incoming> Type: message
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"message","value":"msg","time":"1584117543"}
websocket backend mainchannel {"type":"message","value":"msg","time":"1584117543"}
message
websocket backend send {"type":"message","value":"msg","time":"1584117543"}
/POST
Message: {"message":"message msg"}
mqtt_handler datamapping incoming message msg
<message_mapper> beginn parse
<incoming> Type: message
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"message","value":"msg","time":"1584117545"}
websocket backend mainchannel {"type":"message","value":"msg","time":"1584117545"}
message
websocket backend send {"type":"message","value":"msg","time":"1584117545"}
/POST
Message: {"message":"message msguk"}
mqtt_handler datamapping incoming message msguk
<message_mapper> beginn parse
<incoming> Type: message
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"message","value":"msguk","time":"1584117549"}
websocket backend mainchannel {"type":"message","value":"msguk","time":"1584117549"}
message
websocket backend send {"type":"message","value":"msguk","time":"1584117549"}
/POST
Message: {"message":"message msguk"}
mqtt_handler datamapping incoming message msguk
<message_mapper> beginn parse
<incoming> Type: message
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"message","value":"msguk","time":"1584117550"}
websocket backend mainchannel {"type":"message","value":"msguk","time":"1584117550"}
message
websocket backend send {"type":"message","value":"msguk","time":"1584117550"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"message msgukssf"}
mqtt_handler datamapping incoming message msgukssf
<message_mapper> beginn parse
<incoming> Type: message
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"message","value":"msgukssf","time":"1584117581"}
websocket backend mainchannel {"type":"message","value":"msgukssf","time":"1584117581"}
message
websocket backend send {"type":"message","value":"msgukssf","time":"1584117581"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584117582"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584117582"}
video
websocket backend send {"type":"video","version":"1","time":"1584117582"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584117584"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584117584"}
video
websocket backend send {"type":"video","version":"2","time":"1584117584"}
/POST
Message: {"message":"message msgukssf"}
mqtt_handler datamapping incoming message msgukssf
<message_mapper> beginn parse
<incoming> Type: message
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"message","value":"msgukssf","time":"1584117587"}
websocket backend mainchannel {"type":"message","value":"msgukssf","time":"1584117587"}
message
websocket backend send {"type":"message","value":"msgukssf","time":"1584117587"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584117589"}
race 2
<incoming> Type: header
Event: -2-
HEAT: 2
<swim_events> getInternalHeatId 2 2
<swim_event> number heats 25613
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584117589"}
race
websocket backend send {"type":"race","time":"1584117589"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584117591"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584117591"}
video
websocket backend send {"type":"video","version":"1","time":"1584117591"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584117593"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584117593"}
video
websocket backend send {"type":"video","version":"2","time":"1584117593"}
/POST
Message: {"message":"message msgukssf"}
mqtt_handler datamapping incoming message msgukssf
<message_mapper> beginn parse
<incoming> Type: message
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"message","value":"msgukssf","time":"1584117595"}
websocket backend mainchannel {"type":"message","value":"msgukssf","time":"1584117595"}
message
websocket backend send {"type":"message","value":"msgukssf","time":"1584117595"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584117648"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584117648"}
video
websocket backend send {"type":"video","version":"2","time":"1584117648"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584117650"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584117650"}
video
websocket backend send {"type":"video","version":"1","time":"1584117650"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584117651"}
race 2
<incoming> Type: header
Event: -2-
HEAT: 2
<swim_events> getInternalHeatId 2 2
<swim_event> number heats 25613
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584117651"}
race
websocket backend send {"type":"race","time":"1584117651"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
/POST
Message: {"message":"clock"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584117653"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584117653"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584117653"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584117655"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584117655"}
video
websocket backend send {"type":"video","version":"2","time":"1584117655"}
/POST
Message: {"message":"clock"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584117658"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584117658"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584117658"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584117659"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584117659"}
video
websocket backend send {"type":"video","version":"2","time":"1584117659"}
/POST
Message: {"message":"clock"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584117661"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584117661"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584117661"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584117663"}
race 2
<incoming> Type: header
Event: -2-
HEAT: 2
<swim_events> getInternalHeatId 2 2
<swim_event> number heats 25613
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584117663"}
race
websocket backend send {"type":"race","time":"1584117663"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584117664"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584117664"}
video
websocket backend send {"type":"video","version":"1","time":"1584117664"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584117664"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584117664"}
video
websocket backend send {"type":"video","version":"2","time":"1584117664"}
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584117665"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584117665"}
video
websocket backend send {"type":"video","version":"3","time":"1584117665"}
/POST
Message: {"message":"video 4"}
mqtt_handler datamapping incoming video 4
<message_mapper> beginn parse
<incoming> Type: video
Event: -4-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"4","time":"1584117665"}
websocket backend mainchannel {"type":"video","version":"4","time":"1584117665"}
video
websocket backend send {"type":"video","version":"4","time":"1584117665"}
/POST
Message: {"message":"video 5"}
mqtt_handler datamapping incoming video 5
<message_mapper> beginn parse
<incoming> Type: video
Event: -5-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"5","time":"1584117666"}
websocket backend mainchannel {"type":"video","version":"5","time":"1584117666"}
video
websocket backend send {"type":"video","version":"5","time":"1584117666"}
/POST
Message: {"message":"video 4"}
mqtt_handler datamapping incoming video 4
<message_mapper> beginn parse
<incoming> Type: video
Event: -4-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"4","time":"1584117666"}
websocket backend mainchannel {"type":"video","version":"4","time":"1584117666"}
video
websocket backend send {"type":"video","version":"4","time":"1584117666"}
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584117667"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584117667"}
video
websocket backend send {"type":"video","version":"3","time":"1584117667"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584117667"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584117667"}
video
websocket backend send {"type":"video","version":"2","time":"1584117667"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584117668"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584117668"}
video
websocket backend send {"type":"video","version":"1","time":"1584117668"}
/POST
Message: {"message":"clock"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584117668"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584117668"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584117668"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584117718"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584117718"}
video
websocket backend send {"type":"video","version":"2","time":"1584117718"}
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584117720"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584117720"}
video
websocket backend send {"type":"video","version":"3","time":"1584117720"}
/POST
Message: {"message":"video 4"}
mqtt_handler datamapping incoming video 4
<message_mapper> beginn parse
<incoming> Type: video
Event: -4-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"4","time":"1584117721"}
websocket backend mainchannel {"type":"video","version":"4","time":"1584117721"}
video
websocket backend send {"type":"video","version":"4","time":"1584117721"}
/POST
Message: {"message":"video 5"}
mqtt_handler datamapping incoming video 5
<message_mapper> beginn parse
<incoming> Type: video
Event: -5-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"5","time":"1584117722"}
websocket backend mainchannel {"type":"video","version":"5","time":"1584117722"}
video
websocket backend send {"type":"video","version":"5","time":"1584117722"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584117760"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584117760"}
video
websocket backend send {"type":"video","version":"2","time":"1584117760"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584117763"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584117763"}
video
websocket backend send {"type":"video","version":"1","time":"1584117763"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584117766"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584117766"}
video
websocket backend send {"type":"video","version":"2","time":"1584117766"}
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584117771"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584117771"}
video
websocket backend send {"type":"video","version":"3","time":"1584117771"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584117773"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584117773"}
video
websocket backend send {"type":"video","version":"2","time":"1584117773"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584117781"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584117781"}
video
websocket backend send {"type":"video","version":"1","time":"1584117781"}
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584117938"}
race 2
<incoming> Type: header
Event: -2-
HEAT: 2
<swim_events> getInternalHeatId 2 2
<swim_event> number heats 25613
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584117938"}
race
websocket backend send {"type":"race","time":"1584117938"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584117940"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584117940"}
video
websocket backend send {"type":"video","version":"1","time":"1584117940"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584117947"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584117947"}
video
websocket backend send {"type":"video","version":"2","time":"1584117947"}
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584117951"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584117951"}
video
websocket backend send {"type":"video","version":"3","time":"1584117951"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584117953"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584117953"}
video
websocket backend send {"type":"video","version":"2","time":"1584117953"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584117954"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584117954"}
video
websocket backend send {"type":"video","version":"1","time":"1584117954"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584117956"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584117956"}
video
websocket backend send {"type":"video","version":"2","time":"1584117956"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584117957"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584117957"}
video
websocket backend send {"type":"video","version":"1","time":"1584117957"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584117960"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584117960"}
video
websocket backend send {"type":"video","version":"2","time":"1584117960"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584117962"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584117962"}
video
websocket backend send {"type":"video","version":"1","time":"1584117962"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584117962"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584117962"}
video
websocket backend send {"type":"video","version":"2","time":"1584117962"}
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584117963"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584117963"}
video
websocket backend send {"type":"video","version":"3","time":"1584117963"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584117966"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584117966"}
video
websocket backend send {"type":"video","version":"2","time":"1584117966"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584117968"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584117968"}
video
websocket backend send {"type":"video","version":"1","time":"1584117968"}
websocket backend Client disconnected
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584118351"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584118351"}
video
websocket backend send {"type":"video","version":"1","time":"1584118351"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584118413"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584118413"}
video
websocket backend send {"type":"video","version":"2","time":"1584118413"}
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584118416"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584118416"}
video
websocket backend send {"type":"video","version":"3","time":"1584118416"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584118418"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584118418"}
video
websocket backend send {"type":"video","version":"1","time":"1584118418"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584118438"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584118438"}
video
websocket backend send {"type":"video","version":"1","time":"1584118438"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584118455"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584118455"}
video
websocket backend send {"type":"video","version":"2","time":"1584118455"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584118469"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584118469"}
video
websocket backend send {"type":"video","version":"1","time":"1584118469"}
websocket backend Client disconnected
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584118525"}
race 2
<incoming> Type: header
Event: -2-
HEAT: 2
<swim_events> getInternalHeatId 2 2
<swim_event> number heats 25613
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584118525"}
race
websocket backend send {"type":"race","time":"1584118525"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584118528"}
websocket backend mainchannel {"type":"start","time":"1584118528"}
start
websocket backend send {"type":"start","time":"1584118528"}
/POST
Message: {"message":"stop"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584118532"}
websocket backend mainchannel {"type":"stop","time":"1584118532"}
stop
websocket backend send {"type":"stop","time":"1584118532"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584118534"}
websocket backend mainchannel {"type":"start","time":"1584118534"}
start
websocket backend send {"type":"start","time":"1584118534"}
/POST
Message: {"message":"stop"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584118550"}
websocket backend mainchannel {"type":"stop","time":"1584118550"}
stop
websocket backend send {"type":"stop","time":"1584118550"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584118551"}
websocket backend mainchannel {"type":"start","time":"1584118551"}
start
websocket backend send {"type":"start","time":"1584118551"}
/POST
Message: {"message":"stop"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584118553"}
websocket backend mainchannel {"type":"stop","time":"1584118553"}
stop
websocket backend send {"type":"stop","time":"1584118553"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584118553"}
websocket backend mainchannel {"type":"start","time":"1584118553"}
start
websocket backend send {"type":"start","time":"1584118553"}
/POST
Message: {"message":"clear"}
mqtt_handler datamapping incoming clear
<message_mapper> beginn parse
<incoming> Type: clear
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clear","time":"1584118554"}
<message_mapper> clear race
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"clear","time":"1584118554"}
clear
clear lanes
websocket backend send {"type":"clear","time":"1584118554"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"","time":"","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"","time":"","heat":"2"}
/POST
Message: {"message":"clear"}
mqtt_handler datamapping incoming clear
<message_mapper> beginn parse
<incoming> Type: clear
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clear","time":"1584118557"}
<message_mapper> clear race
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"clear","time":"1584118557"}
clear
clear lanes
websocket backend send {"type":"clear","time":"1584118557"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"","time":"","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"","time":"","heat":"2"}
/POST
Message: {"message":"stop"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584118558"}
websocket backend mainchannel {"type":"stop","time":"1584118558"}
stop
websocket backend send {"type":"stop","time":"1584118558"}
/POST
Message: {"message":"clear"}
mqtt_handler datamapping incoming clear
<message_mapper> beginn parse
<incoming> Type: clear
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clear","time":"1584118559"}
<message_mapper> clear race
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"clear","time":"1584118559"}
clear
clear lanes
websocket backend send {"type":"clear","time":"1584118559"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"","time":"","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"","time":"","heat":"2"}
/POST
Message: {"message":"clear"}
mqtt_handler datamapping incoming clear
<message_mapper> beginn parse
<incoming> Type: clear
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clear","time":"1584118560"}
<message_mapper> clear race
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"clear","time":"1584118560"}
clear
clear lanes
websocket backend send {"type":"clear","time":"1584118560"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"","time":"","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"","time":"","heat":"2"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584118561"}
websocket backend mainchannel {"type":"start","time":"1584118561"}
start
websocket backend send {"type":"start","time":"1584118561"}
/POST
Message: {"message":"clear"}
mqtt_handler datamapping incoming clear
<message_mapper> beginn parse
<incoming> Type: clear
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clear","time":"1584118563"}
<message_mapper> clear race
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"clear","time":"1584118563"}
clear
clear lanes
websocket backend send {"type":"clear","time":"1584118563"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"","time":"","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"","time":"","heat":"2"}
/POST
Message: {"message":"clear"}
mqtt_handler datamapping incoming clear
<message_mapper> beginn parse
<incoming> Type: clear
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clear","time":"1584118564"}
<message_mapper> clear race
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"clear","time":"1584118564"}
clear
clear lanes
websocket backend send {"type":"clear","time":"1584118564"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"","time":"","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"","time":"","heat":"2"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584118566"}
race 2
<incoming> Type: header
Event: -2-
HEAT: 2
<swim_events> getInternalHeatId 2 2
<swim_event> number heats 25613
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584118566"}
race
websocket backend send {"type":"race","time":"1584118566"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
/POST
Message: {"message":"clock"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584118568"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584118568"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584118568"}
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1584118569"}
websocket backend mainchannel {"type":"startlist","time":"1584118569"}
startlist
websocket backend send {"type":"startlist","time":"1584118569"}
/POST
Message: {"message":"clock"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584118571"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584118571"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584118571"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584118572"}
race 2
<incoming> Type: header
Event: -2-
HEAT: 2
<swim_events> getInternalHeatId 2 2
<swim_event> number heats 25613
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584118572"}
race
websocket backend send {"type":"race","time":"1584118572"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
/POST
Message: {"message":"message msgukssf"}
mqtt_handler datamapping incoming message msgukssf
<message_mapper> beginn parse
<incoming> Type: message
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"message","value":"msgukssf","time":"1584118573"}
websocket backend mainchannel {"type":"message","value":"msgukssf","time":"1584118573"}
message
websocket backend send {"type":"message","value":"msgukssf","time":"1584118573"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584118575"}
race 2
<incoming> Type: header
Event: -2-
HEAT: 2
<swim_events> getInternalHeatId 2 2
<swim_event> number heats 25613
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584118575"}
race
websocket backend send {"type":"race","time":"1584118575"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
/POST
Message: {"message":"clock"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584118576"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584118576"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584118576"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584118577"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584118577"}
video
websocket backend send {"type":"video","version":"1","time":"1584118577"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584118581"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584118581"}
video
websocket backend send {"type":"video","version":"2","time":"1584118581"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584118584"}
race 2
<incoming> Type: header
Event: -2-
HEAT: 2
<swim_events> getInternalHeatId 2 2
<swim_event> number heats 25613
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584118584"}
race
websocket backend send {"type":"race","time":"1584118584"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584118585"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584118585"}
video
websocket backend send {"type":"video","version":"1","time":"1584118585"}
/POST
Message: {"message":"stop"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584118587"}
websocket backend mainchannel {"type":"stop","time":"1584118587"}
stop
websocket backend send {"type":"stop","time":"1584118587"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584118588"}
websocket backend mainchannel {"type":"start","time":"1584118588"}
start
websocket backend send {"type":"start","time":"1584118588"}
/POST
Message: {"message":"lane 1 1:11,11 q"}
mqtt_handler datamapping incoming lane 1 1:11,11 q
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: q
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"q","time":"1:11,11","heat":"2"}
<message_mapper> store lane 1: lane 1 1:11,11 q
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"q","time":"1:11,11","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"q","time":"1:11,11","heat":"2"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584118624"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584118624"}
video
websocket backend send {"type":"video","version":"1","time":"1584118624"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584118625"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584118625"}
video
websocket backend send {"type":"video","version":"2","time":"1584118625"}
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584118627"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584118627"}
video
websocket backend send {"type":"video","version":"3","time":"1584118627"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584118628"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584118628"}
video
websocket backend send {"type":"video","version":"2","time":"1584118628"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584118630"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584118630"}
video
websocket backend send {"type":"video","version":"1","time":"1584118630"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/GET
/POST
Message: {"message":"clock"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584205239"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584205239"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584205239"}
/POST
Message: {"message":"clock"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584205242"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584205242"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584205242"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584205247"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584205247"}
video
websocket backend send {"type":"video","version":"2","time":"1584205247"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584205256"}
race 2
<incoming> Type: header
Event: -2-
HEAT: 2
<swim_events> getInternalHeatId 2 2
<swim_event> number heats 25613
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> race out lane 1 1:11,11 q
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: q
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584205256"}
race
websocket backend send {"type":"race","time":"1584205256"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"q","time":"1:11,11","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"q","time":"1:11,11","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
/POST
Message: {"message":"stop"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584205272"}
websocket backend mainchannel {"type":"stop","time":"1584205272"}
stop
websocket backend send {"type":"stop","time":"1584205272"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584205273"}
websocket backend mainchannel {"type":"start","time":"1584205273"}
start
websocket backend send {"type":"start","time":"1584205273"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"clock"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584205387"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584205387"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584205387"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584205390"}
race 2
<incoming> Type: header
Event: -2-
HEAT: 2
<swim_events> getInternalHeatId 2 2
<swim_event> number heats 25613
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> race out lane 1 1:11,11 q
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: q
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584205390"}
race
websocket backend send {"type":"race","time":"1584205390"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"q","time":"1:11,11","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"q","time":"1:11,11","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584205394"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584205394"}
video
websocket backend send {"type":"video","version":"2","time":"1584205394"}
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584205397"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584205397"}
video
websocket backend send {"type":"video","version":"3","time":"1584205397"}
/POST
Message: {"message":"message start"}
mqtt_handler datamapping incoming message start
<message_mapper> beginn parse
<incoming> Type: message
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"message","value":"start","time":"1584205402"}
websocket backend mainchannel {"type":"message","value":"start","time":"1584205402"}
message
websocket backend send {"type":"message","value":"start","time":"1584205402"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"clock"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584205566"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584205566"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584205566"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584205568"}
race 2
<incoming> Type: header
Event: -2-
HEAT: 2
<swim_events> getInternalHeatId 2 2
<swim_event> number heats 25613
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> race out lane 1 1:11,11 q
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: q
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584205568"}
race
websocket backend send {"type":"race","time":"1584205568"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"q","time":"1:11,11","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"q","time":"1:11,11","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1584205571"}
websocket backend mainchannel {"type":"startlist","time":"1584205571"}
startlist
websocket backend send {"type":"startlist","time":"1584205571"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584205574"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584205574"}
video
websocket backend send {"type":"video","version":"1","time":"1584205574"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584205671"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584205671"}
video
websocket backend send {"type":"video","version":"2","time":"1584205671"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584205682"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584205682"}
video
websocket backend send {"type":"video","version":"1","time":"1584205682"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584206231"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584206231"}
video
websocket backend send {"type":"video","version":"2","time":"1584206231"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584206284"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584206284"}
video
websocket backend send {"type":"video","version":"1","time":"1584206284"}
/POST
Message: {"message":"clock"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584206610"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584206610"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584206610"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584206613"}
race 2
<incoming> Type: header
Event: -2-
HEAT: 2
<swim_events> getInternalHeatId 2 2
<swim_event> number heats 25613
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> race out lane 1 1:11,11 q
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: q
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584206613"}
race
websocket backend send {"type":"race","time":"1584206613"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"q","time":"1:11,11","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"q","time":"1:11,11","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584206823"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584206823"}
video
websocket backend send {"type":"video","version":"2","time":"1584206823"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584206872"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584206872"}
video
websocket backend send {"type":"video","version":"3","time":"1584206872"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584206875"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584206875"}
video
websocket backend send {"type":"video","version":"2","time":"1584206875"}
/POST
Message: {"message":"clock"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584207120"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584207120"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584207120"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584207123"}
race 2
<incoming> Type: header
Event: -2-
HEAT: 2
<swim_events> getInternalHeatId 2 2
<swim_event> number heats 25613
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> race out lane 1 1:11,11 q
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: q
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584207123"}
race
websocket backend send {"type":"race","time":"1584207123"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"q","time":"1:11,11","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"q","time":"1:11,11","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584207128"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584207128"}
video
websocket backend send {"type":"video","version":"3","time":"1584207128"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584207132"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584207132"}
video
websocket backend send {"type":"video","version":"2","time":"1584207132"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584208632"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584208632"}
video
websocket backend send {"type":"video","version":"1","time":"1584208632"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584208930"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584208930"}
video
websocket backend send {"type":"video","version":"2","time":"1584208930"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584209070"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584209070"}
video
websocket backend send {"type":"video","version":"1","time":"1584209070"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584209145"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584209145"}
video
websocket backend send {"type":"video","version":"1","time":"1584209145"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584209161"}
race 2
<incoming> Type: header
Event: -2-
HEAT: 2
<swim_events> getInternalHeatId 2 2
<swim_event> number heats 25613
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> race out lane 1 1:11,11 q
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: q
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584209161"}
race
websocket backend send {"type":"race","time":"1584209161"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"q","time":"1:11,11","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"q","time":"1:11,11","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584209165"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584209165"}
video
websocket backend send {"type":"video","version":"1","time":"1584209165"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584209220"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584209220"}
video
websocket backend send {"type":"video","version":"1","time":"1584209220"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"clock"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584209263"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584209263"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584209263"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584209267"}
race 2
<incoming> Type: header
Event: -2-
HEAT: 2
<swim_events> getInternalHeatId 2 2
<swim_event> number heats 25613
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> race out lane 1 1:11,11 q
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: q
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584209267"}
race
websocket backend send {"type":"race","time":"1584209267"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"q","time":"1:11,11","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"q","time":"1:11,11","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1584209271"}
websocket backend mainchannel {"type":"startlist","time":"1584209271"}
startlist
websocket backend send {"type":"startlist","time":"1584209271"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584209465"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584209465"}
video
websocket backend send {"type":"video","version":"1","time":"1584209465"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584210125"}
websocket backend mainchannel {"type":"start","time":"1584210125"}
start
websocket backend send {"type":"start","time":"1584210125"}
/POST
Message: {"message":"stop"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584210130"}
websocket backend mainchannel {"type":"stop","time":"1584210130"}
stop
websocket backend send {"type":"stop","time":"1584210130"}
/POST
Message: {"message":"stop"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584210137"}
websocket backend mainchannel {"type":"stop","time":"1584210137"}
stop
websocket backend send {"type":"stop","time":"1584210137"}
/POST
Message: {"message":"clear"}
mqtt_handler datamapping incoming clear
<message_mapper> beginn parse
<incoming> Type: clear
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clear","time":"1584210142"}
<message_mapper> clear race
<message_mapper> race out lane 1 1:11,11 q
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: q
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"clear","time":"1584210142"}
clear
clear lanes
websocket backend send {"type":"clear","time":"1584210142"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"","time":"","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"","time":"","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"","time":"","heat":"2"}
/POST
Message: {"message":"header 1 2"}
mqtt_handler datamapping incoming header 1 2
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 2
<swim_events> getInternalHeatId 1 2
<swim_event> number heats 25608
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584210157"}
websocket backend mainchannel {"type":"start","time":"1584210157"}
start
websocket backend send {"type":"start","time":"1584210157"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584210262"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584210262"}
video
websocket backend send {"type":"video","version":"1","time":"1584210262"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584210444"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584210444"}
video
websocket backend send {"type":"video","version":"1","time":"1584210444"}
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584211230"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584211230"}
video
websocket backend send {"type":"video","version":"2","time":"1584211230"}
/GET
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
/POST
Message: {"message":"stop"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584211285"}
websocket backend mainchannel {"type":"stop","time":"1584211285"}
stop
websocket backend send {"type":"stop","time":"1584211285"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584211287"}
websocket backend mainchannel {"type":"start","time":"1584211287"}
start
websocket backend send {"type":"start","time":"1584211287"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584211290"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584211290"}
video
websocket backend send {"type":"video","version":"2","time":"1584211290"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584211347"}
race 1
<incoming> Type: header
Event: -1-
HEAT: 2
<swim_events> getInternalHeatId 1 2
<swim_event> number heats 25608
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"race","time":"1584211347"}
race
websocket backend send {"type":"race","time":"1584211347"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend Client disconnected
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584211659"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584211659"}
video
websocket backend send {"type":"video","version":"1","time":"1584211659"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584211752"}
race 1
<incoming> Type: header
Event: -1-
HEAT: 2
<swim_events> getInternalHeatId 1 2
<swim_event> number heats 25608
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"race","time":"1584211752"}
race
websocket backend send {"type":"race","time":"1584211752"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584211772"}
websocket backend mainchannel {"type":"start","time":"1584211772"}
start
websocket backend send {"type":"start","time":"1584211772"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584211971"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584211971"}
video
websocket backend send {"type":"video","version":"1","time":"1584211971"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584211993"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584211993"}
video
websocket backend send {"type":"video","version":"2","time":"1584211993"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584211997"}
race 1
<incoming> Type: header
Event: -1-
HEAT: 2
<swim_events> getInternalHeatId 1 2
<swim_event> number heats 25608
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"race","time":"1584211997"}
race
websocket backend send {"type":"race","time":"1584211997"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584212000"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584212000"}
video
websocket backend send {"type":"video","version":"2","time":"1584212000"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584212006"}
websocket backend mainchannel {"type":"start","time":"1584212006"}
start
websocket backend send {"type":"start","time":"1584212006"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584212011"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584212011"}
video
websocket backend send {"type":"video","version":"1","time":"1584212011"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584212028"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584212028"}
video
websocket backend send {"type":"video","version":"1","time":"1584212028"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584212060"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584212060"}
video
websocket backend send {"type":"video","version":"2","time":"1584212060"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584212086"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584212086"}
video
websocket backend send {"type":"video","version":"2","time":"1584212086"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584212089"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584212089"}
video
websocket backend send {"type":"video","version":"1","time":"1584212089"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584212093"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584212093"}
video
websocket backend send {"type":"video","version":"2","time":"1584212093"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584212102"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584212102"}
video
websocket backend send {"type":"video","version":"1","time":"1584212102"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584212413"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584212413"}
video
websocket backend send {"type":"video","version":"1","time":"1584212413"}
websocket backend Client disconnected
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584212524"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584212524"}
video
websocket backend send {"type":"video","version":"1","time":"1584212524"}
websocket backend Client disconnected
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584212668"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584212668"}
video
websocket backend send {"type":"video","version":"2","time":"1584212668"}
websocket backend Client disconnected
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584264614"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584264614"}
video
websocket backend send {"type":"video","version":"1","time":"1584264614"}
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584264637"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584264637"}
video
websocket backend send {"type":"video","version":"1","time":"1584264637"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584265141"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584265141"}
video
websocket backend send {"type":"video","version":"1","time":"1584265141"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584265180"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584265180"}
video
websocket backend send {"type":"video","version":"1","time":"1584265180"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584265368"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584265368"}
video
websocket backend send {"type":"video","version":"1","time":"1584265368"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584265445"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584265445"}
video
websocket backend send {"type":"video","version":"1","time":"1584265445"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584265656"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584265656"}
video
websocket backend send {"type":"video","version":"1","time":"1584265656"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584265726"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584265726"}
video
websocket backend send {"type":"video","version":"1","time":"1584265726"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584265739"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584265739"}
video
websocket backend send {"type":"video","version":"1","time":"1584265739"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584265761"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584265761"}
video
websocket backend send {"type":"video","version":"1","time":"1584265761"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584265779"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584265779"}
video
websocket backend send {"type":"video","version":"1","time":"1584265779"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584265799"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584265799"}
video
websocket backend send {"type":"video","version":"1","time":"1584265799"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584265836"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584265836"}
video
websocket backend send {"type":"video","version":"1","time":"1584265836"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584265866"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584265866"}
video
websocket backend send {"type":"video","version":"1","time":"1584265866"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584265960"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584265960"}
video
websocket backend send {"type":"video","version":"1","time":"1584265960"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584266009"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584266009"}
video
websocket backend send {"type":"video","version":"1","time":"1584266009"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584266101"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584266101"}
video
websocket backend send {"type":"video","version":"1","time":"1584266101"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584266135"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584266135"}
video
websocket backend send {"type":"video","version":"1","time":"1584266135"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584266145"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584266145"}
video
websocket backend send {"type":"video","version":"2","time":"1584266145"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584266194"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584266194"}
video
websocket backend send {"type":"video","version":"1","time":"1584266194"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584266265"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584266265"}
video
websocket backend send {"type":"video","version":"1","time":"1584266265"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584266306"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584266306"}
video
websocket backend send {"type":"video","version":"2","time":"1584266306"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584266356"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584266356"}
video
websocket backend send {"type":"video","version":"1","time":"1584266356"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584266388"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584266388"}
video
websocket backend send {"type":"video","version":"1","time":"1584266388"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584266391"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584266391"}
video
websocket backend send {"type":"video","version":"2","time":"1584266391"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584266395"}
websocket backend mainchannel {"type":"start","time":"1584266395"}
start
websocket backend send {"type":"start","time":"1584266395"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584266401"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584266401"}
video
websocket backend send {"type":"video","version":"1","time":"1584266401"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584266570"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584266570"}
video
websocket backend send {"type":"video","version":"1","time":"1584266570"}
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584266574"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584266574"}
video
websocket backend send {"type":"video","version":"3","time":"1584266574"}
/POST
Message: {"message":"video 4"}
mqtt_handler datamapping incoming video 4
<message_mapper> beginn parse
<incoming> Type: video
Event: -4-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"4","time":"1584266586"}
websocket backend mainchannel {"type":"video","version":"4","time":"1584266586"}
video
websocket backend send {"type":"video","version":"4","time":"1584266586"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 4"}
mqtt_handler datamapping incoming video 4
<message_mapper> beginn parse
<incoming> Type: video
Event: -4-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"4","time":"1584266662"}
websocket backend mainchannel {"type":"video","version":"4","time":"1584266662"}
video
websocket backend send {"type":"video","version":"4","time":"1584266662"}
/POST
Message: {"message":"video 5"}
mqtt_handler datamapping incoming video 5
<message_mapper> beginn parse
<incoming> Type: video
Event: -5-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"5","time":"1584266675"}
websocket backend mainchannel {"type":"video","version":"5","time":"1584266675"}
video
websocket backend send {"type":"video","version":"5","time":"1584266675"}
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584266683"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584266683"}
video
websocket backend send {"type":"video","version":"3","time":"1584266683"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584266736"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584266736"}
video
websocket backend send {"type":"video","version":"3","time":"1584266736"}
/POST
Message: {"message":"video 4"}
mqtt_handler datamapping incoming video 4
<message_mapper> beginn parse
<incoming> Type: video
Event: -4-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"4","time":"1584266785"}
websocket backend mainchannel {"type":"video","version":"4","time":"1584266785"}
video
websocket backend send {"type":"video","version":"4","time":"1584266785"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584266792"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584266792"}
video
websocket backend send {"type":"video","version":"1","time":"1584266792"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584267575"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584267575"}
video
websocket backend send {"type":"video","version":"2","time":"1584267575"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584267587"}
websocket backend mainchannel {"type":"start","time":"1584267587"}
start
websocket backend send {"type":"start","time":"1584267587"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"header 1 2"}
mqtt_handler datamapping incoming header 1 2
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 2
<swim_events> getInternalHeatId 1 2
<swim_event> number heats 25608
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
/POST
Message: {"message":"lane 1 1:11,11 1"}
mqtt_handler datamapping incoming lane 1 1:11,11 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 1
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"2"}
<message_mapper> store lane 1: lane 1 1:11,11 1
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"2"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"lane 1 1:11,11 1"}
mqtt_handler datamapping incoming lane 1 1:11,11 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 1
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"2"}
<message_mapper> store lane 1: lane 1 1:11,11 1
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"2"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584268005"}
websocket backend mainchannel {"type":"start","time":"1584268005"}
start
websocket backend send {"type":"start","time":"1584268005"}
/POST
Message: {"message":"lane 1 1:11,11 1"}
mqtt_handler datamapping incoming lane 1 1:11,11 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 1
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"2"}
<message_mapper> store lane 1: lane 1 1:11,11 1
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"2"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584268060"}
race 1
<incoming> Type: header
Event: -1-
HEAT: 2
<swim_events> getInternalHeatId 1 2
<swim_event> number heats 25608
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> race out lane 1 1:11,11 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 1
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"race","time":"1584268060"}
race
websocket backend send {"type":"race","time":"1584268060"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"2"}
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1584268121"}
websocket backend mainchannel {"type":"startlist","time":"1584268121"}
startlist
websocket backend send {"type":"startlist","time":"1584268121"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584268133"}
race 1
<incoming> Type: header
Event: -1-
HEAT: 2
<swim_events> getInternalHeatId 1 2
<swim_event> number heats 25608
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> race out lane 1 1:11,11 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 1
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"race","time":"1584268133"}
race
websocket backend send {"type":"race","time":"1584268133"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"2"}
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"clock"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584268189"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584268189"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584268189"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584268192"}
race 1
<incoming> Type: header
Event: -1-
HEAT: 2
<swim_events> getInternalHeatId 1 2
<swim_event> number heats 25608
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> race out lane 1 1:11,11 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 1
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"race","time":"1584268192"}
race
websocket backend send {"type":"race","time":"1584268192"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"2"}
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
/POST
Message: {"message":"header 1 3"}
mqtt_handler datamapping incoming header 1 3
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 3
<swim_events> getInternalHeatId 1 3
<swim_event> number heats 25609
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
/POST
Message: {"message":"lane 1 1:11,11 1"}
mqtt_handler datamapping incoming lane 1 1:11,11 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 1
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"3"}
<message_mapper> store lane 1: lane 1 1:11,11 1
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"3"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"lane 1 1:11,11 1"}
mqtt_handler datamapping incoming lane 1 1:11,11 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 1
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"3"}
<message_mapper> store lane 1: lane 1 1:11,11 1
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"3"}
/POST
Message: {"message":"lane 1 1:11,11 2"}
mqtt_handler datamapping incoming lane 1 1:11,11 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 2
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"2","time":"1:11,11","heat":"3"}
<message_mapper> store lane 1: lane 1 1:11,11 2
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"2","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"2","time":"1:11,11","heat":"3"}
/POST
Message: {"message":"lane 4 1:11,11 2"}
mqtt_handler datamapping incoming lane 4 1:11,11 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:11,11
(place)lane: 2
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"2","time":"1:11,11","heat":"3"}
<message_mapper> store lane 4: lane 4 1:11,11 2
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"2","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"2","time":"1:11,11","heat":"3"}
/POST
Message: {"message":"lane 4 1:11,11 0"}
mqtt_handler datamapping incoming lane 4 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"3"}
<message_mapper> store lane 4: lane 4 1:11,11 0
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"3"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584268635"}
race 1
<incoming> Type: header
Event: -1-
HEAT: 3
<swim_events> getInternalHeatId 1 3
<swim_event> number heats 25609
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> race out lane 1 1:11,11 2
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 2
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4 1:11,11 0
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"race","time":"1584268635"}
race
websocket backend send {"type":"race","time":"1584268635"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"2","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"2","time":"1:11,11","heat":"3"}
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"3"}
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584268874"}
race 1
<incoming> Type: header
Event: -1-
HEAT: 3
<swim_events> getInternalHeatId 1 3
<swim_event> number heats 25609
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> race out lane 1 1:11,11 2
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 2
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4 1:11,11 0
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"race","time":"1584268874"}
race
websocket backend send {"type":"race","time":"1584268874"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"2","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"2","time":"1:11,11","heat":"3"}
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"3"}
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1584268880"}
websocket backend mainchannel {"type":"startlist","time":"1584268880"}
startlist
websocket backend send {"type":"startlist","time":"1584268880"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"lane 4 1:11,11 1"}
mqtt_handler datamapping incoming lane 4 1:11,11 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:11,11
(place)lane: 1
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"3"}
<message_mapper> store lane 4: lane 4 1:11,11 1
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"3"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584270755"}
race 1
<incoming> Type: header
Event: -1-
HEAT: 3
<swim_events> getInternalHeatId 1 3
<swim_event> number heats 25609
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> race out lane 1 1:11,11 2
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 2
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4 1:11,11 1
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:11,11
(place)lane: 1
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"race","time":"1584270755"}
race
websocket backend send {"type":"race","time":"1584270755"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"2","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"2","time":"1:11,11","heat":"3"}
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"3"}
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584270774"}
websocket backend mainchannel {"type":"start","time":"1584270774"}
start
websocket backend send {"type":"start","time":"1584270774"}
/POST
Message: {"message":"lane 4 1:11,11 0"}
mqtt_handler datamapping incoming lane 4 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"3"}
<message_mapper> store lane 4: lane 4 1:11,11 0
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"3"}
/POST
Message: {"message":"clear"}
mqtt_handler datamapping incoming clear
<message_mapper> beginn parse
<incoming> Type: clear
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clear","time":"1584270793"}
<message_mapper> clear race
<message_mapper> race out lane 1 1:11,11 2
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 2
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4 1:11,11 0
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"clear","time":"1584270793"}
clear
clear lanes
websocket backend send {"type":"clear","time":"1584270793"}
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"3"}
/POST
Message: {"message":"lane 4 1:11,11 0"}
mqtt_handler datamapping incoming lane 4 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"3"}
<message_mapper> store lane 4: lane 4 1:11,11 0
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"3"}
/POST
Message: {"message":"lane 6 1:11,11 0"}
mqtt_handler datamapping incoming lane 6 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"3"}
<message_mapper> store lane 6: lane 6 1:11,11 0
websocket backend mainchannel {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"3"}
/POST
Message: {"message":"header 1 1"}
mqtt_handler datamapping incoming header 1 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584281403"}
websocket backend mainchannel {"type":"start","time":"1584281403"}
start
websocket backend send {"type":"start","time":"1584281403"}
/POST
Message: {"message":"header 1 1"}
mqtt_handler datamapping incoming header 1 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
/POST
Message: {"message":"lane 6 1:11,11 0"}
mqtt_handler datamapping incoming lane 6 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"1","place":"0","time":"1:11,11","heat":"1"}
<message_mapper> store lane 6: lane 6 1:11,11 0
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"0","time":"1:11,11","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"0","time":"1:11,11","heat":"1"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1584281864"}
websocket backend mainchannel {"type":"startlist","time":"1584281864"}
startlist
websocket backend send {"type":"startlist","time":"1584281864"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1584282010"}
websocket backend mainchannel {"type":"startlist","time":"1584282010"}
startlist
websocket backend send {"type":"startlist","time":"1584282010"}
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1584282035"}
websocket backend mainchannel {"type":"startlist","time":"1584282035"}
startlist
websocket backend send {"type":"startlist","time":"1584282035"}
websocket backend Client disconnected
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584282039"}
race 1
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6 1:11,11 0
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584282039"}
race
websocket backend send {"type":"race","time":"1584282039"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"0","time":"1:11,11","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"0","time":"1:11,11","heat":"1"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1584282413"}
websocket backend mainchannel {"type":"startlist","time":"1584282413"}
startlist
websocket backend send {"type":"startlist","time":"1584282413"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584282680"}
race 1
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6 1:11,11 0
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584282680"}
race
websocket backend send {"type":"race","time":"1584282680"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"0","time":"1:11,11","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"0","time":"1:11,11","heat":"1"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1584282756"}
websocket backend mainchannel {"type":"startlist","time":"1584282756"}
startlist
websocket backend send {"type":"startlist","time":"1584282756"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1584283233"}
websocket backend mainchannel {"type":"startlist","time":"1584283233"}
startlist
websocket backend send {"type":"startlist","time":"1584283233"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584283238"}
race 1
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6 1:11,11 0
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584283238"}
race
websocket backend send {"type":"race","time":"1584283238"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"0","time":"1:11,11","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"0","time":"1:11,11","heat":"1"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584283414"}
race 1
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6 1:11,11 0
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584283414"}
race
websocket backend send {"type":"race","time":"1584283414"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"0","time":"1:11,11","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"0","time":"1:11,11","heat":"1"}
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1584283419"}
websocket backend mainchannel {"type":"startlist","time":"1584283419"}
startlist
websocket backend send {"type":"startlist","time":"1584283419"}
/POST
Message: {"message":"lane 6 1:11,11 0"}
mqtt_handler datamapping incoming lane 6 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"1","place":"0","time":"1:11,11","heat":"1"}
<message_mapper> store lane 6: lane 6 1:11,11 0
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"0","time":"1:11,11","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"0","time":"1:11,11","heat":"1"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584283989"}
race 1
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6 1:11,11 0
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584283989"}
race
websocket backend send {"type":"race","time":"1584283989"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"0","time":"1:11,11","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"0","time":"1:11,11","heat":"1"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"lane 6 1:11,11 0"}
mqtt_handler datamapping incoming lane 6 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"1","place":"0","time":"1:11,11","heat":"1"}
<message_mapper> store lane 6: lane 6 1:11,11 0
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"0","time":"1:11,11","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"0","time":"1:11,11","heat":"1"}
/POST
Message: {"message":"lane 6 1:11,11 1"}
mqtt_handler datamapping incoming lane 6 1:11,11 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:11,11
(place)lane: 1
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"1","place":"1","time":"1:11,11","heat":"1"}
<message_mapper> store lane 6: lane 6 1:11,11 1
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"1","time":"1:11,11","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"1","time":"1:11,11","heat":"1"}
/POST
Message: {"message":"lane 6 1:11,11 1"}
mqtt_handler datamapping incoming lane 6 1:11,11 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:11,11
(place)lane: 1
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"1","place":"1","time":"1:11,11","heat":"1"}
<message_mapper> store lane 6: lane 6 1:11,11 1
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"1","time":"1:11,11","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"1","time":"1:11,11","heat":"1"}
/POST
Message: {"message":"lane 5 1:11,11 1"}
mqtt_handler datamapping incoming lane 5 1:11,11 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:11,11
(place)lane: 1
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"1"}
<message_mapper> store lane 5: lane 5 1:11,11 1
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"1"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"lane 5 1:11,11 0"}
mqtt_handler datamapping incoming lane 5 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"1"}
<message_mapper> store lane 5: lane 5 1:11,11 0
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"1"}
/POST
Message: {"message":"lane 6 1:11,11 0"}
mqtt_handler datamapping incoming lane 6 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"1","place":"0","time":"1:11,11","heat":"1"}
<message_mapper> store lane 6: lane 6 1:11,11 0
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"0","time":"1:11,11","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"0","time":"1:11,11","heat":"1"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"lane 6 1:11,11 1"}
mqtt_handler datamapping incoming lane 6 1:11,11 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:11,11
(place)lane: 1
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"1","place":"1","time":"1:11,11","heat":"1"}
<message_mapper> store lane 6: lane 6 1:11,11 1
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"1","time":"1:11,11","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"1","time":"1:11,11","heat":"1"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"lane 6 1:11,11 1"}
mqtt_handler datamapping incoming lane 6 1:11,11 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:11,11
(place)lane: 1
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"1","place":"1","time":"1:11,11","heat":"1"}
<message_mapper> store lane 6: lane 6 1:11,11 1
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"1","time":"1:11,11","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"1","time":"1:11,11","heat":"1"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1584284945"}
websocket backend mainchannel {"type":"startlist","time":"1584284945"}
startlist
websocket backend send {"type":"startlist","time":"1584284945"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584284949"}
race 1
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5 1:11,11 0
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6 1:11,11 1
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:11,11
(place)lane: 1
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584284949"}
race
websocket backend send {"type":"race","time":"1584284949"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"1","time":"1:11,11","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"1","time":"1:11,11","heat":"1"}
/POST
Message: {"message":"lane 6 1:11,11 0"}
mqtt_handler datamapping incoming lane 6 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"1","place":"0","time":"1:11,11","heat":"1"}
<message_mapper> store lane 6: lane 6 1:11,11 0
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"0","time":"1:11,11","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"0","time":"1:11,11","heat":"1"}
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1584284999"}
websocket backend mainchannel {"type":"startlist","time":"1584284999"}
startlist
websocket backend send {"type":"startlist","time":"1584284999"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584285077"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584285077"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584285077"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584285078"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584285078"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584285078"}
mqtt_handler datamapping incoming header 1 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
----------------- reset clock
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584285086"}
websocket backend mainchannel {"type":"start","time":"1584285086"}
start
websocket backend send {"type":"start","time":"1584285086"}
mqtt_handler datamapping incoming lane 1 0:8,2 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:8,2
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"1","place":"0","time":"0:8,2","heat":"1"}
<message_mapper> store lane 1: lane 1 0:8,2 0
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"0","time":"0:8,2","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"0","time":"0:8,2","heat":"1"}
mqtt_handler datamapping incoming lane 2 1:33,28 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:33,28
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"1:33,28","heat":"1"}
<message_mapper> store lane 2: lane 2 1:33,28 0
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"1:33,28","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"1:33,28","heat":"1"}
mqtt_handler datamapping incoming lane 3 1:41,48 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:41,48
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:41,48","heat":"1"}
<message_mapper> store lane 3: lane 3 1:41,48 0
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:41,48","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:41,48","heat":"1"}
mqtt_handler datamapping incoming lane 4 1:12,7 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:12,7
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"1:12,7","heat":"1"}
<message_mapper> store lane 4: lane 4 1:12,7 0
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"1:12,7","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"1:12,7","heat":"1"}
mqtt_handler datamapping incoming lane 5 0:8,21 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:8,21
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:8,21","heat":"1"}
<message_mapper> store lane 5: lane 5 0:8,21 0
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:8,21","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:8,21","heat":"1"}
mqtt_handler datamapping incoming lane 6 1:2,87 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:2,87
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"1","place":"0","time":"1:2,87","heat":"1"}
<message_mapper> store lane 6: lane 6 1:2,87 0
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"0","time":"1:2,87","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"0","time":"1:2,87","heat":"1"}
mqtt_handler datamapping incoming lane 1 1:43,92 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:43,92
(place)lane: 1
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"1","place":"1","time":"1:43,92","heat":"1"}
<message_mapper> store lane 1: lane 1 1:43,92 1
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"1","time":"1:43,92","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"1","time":"1:43,92","heat":"1"}
mqtt_handler datamapping incoming lane 2 0:38,56 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:38,56
(place)lane: 2
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"2","time":"0:38,56","heat":"1"}
<message_mapper> store lane 2: lane 2 0:38,56 2
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"2","time":"0:38,56","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"2","time":"0:38,56","heat":"1"}
mqtt_handler datamapping incoming lane 3 1:14,78 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:14,78
(place)lane: 3
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"1:14,78","heat":"1"}
<message_mapper> store lane 3: lane 3 1:14,78 3
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"1:14,78","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"1:14,78","heat":"1"}
mqtt_handler datamapping incoming lane 4 0:58,19 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:58,19
(place)lane: 4
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"4","time":"0:58,19","heat":"1"}
<message_mapper> store lane 4: lane 4 0:58,19 4
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"4","time":"0:58,19","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"4","time":"0:58,19","heat":"1"}
mqtt_handler datamapping incoming lane 5 1:40,39 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:40,39
(place)lane: 5
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"1:40,39","heat":"1"}
<message_mapper> store lane 5: lane 5 1:40,39 5
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"1:40,39","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"1:40,39","heat":"1"}
mqtt_handler datamapping incoming lane 6 0:55,79 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:55,79
(place)lane: 6
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"1","place":"6","time":"0:55,79","heat":"1"}
<message_mapper> store lane 6: lane 6 0:55,79 6
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"6","time":"0:55,79","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"6","time":"0:55,79","heat":"1"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584285097"}
websocket backend mainchannel {"type":"stop","time":"1584285097"}
stop
websocket backend send {"type":"stop","time":"1584285097"}
mqtt_handler datamapping incoming header 1 2
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 2
<swim_events> getInternalHeatId 1 2
<swim_event> number heats 25608
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584285103"}
websocket backend mainchannel {"type":"start","time":"1584285103"}
start
websocket backend send {"type":"start","time":"1584285103"}
mqtt_handler datamapping incoming lane 1 1:34,4 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:34,4
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:34,4","heat":"2"}
<message_mapper> store lane 1: lane 1 1:34,4 0
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:34,4","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:34,4","heat":"2"}
mqtt_handler datamapping incoming lane 2 0:8,43 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:8,43
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"0","time":"0:8,43","heat":"2"}
<message_mapper> store lane 2: lane 2 0:8,43 0
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"0","time":"0:8,43","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"0","time":"0:8,43","heat":"2"}
mqtt_handler datamapping incoming lane 3 1:37,52 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:37,52
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:37,52","heat":"2"}
<message_mapper> store lane 3: lane 3 1:37,52 0
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:37,52","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:37,52","heat":"2"}
mqtt_handler datamapping incoming lane 4 0:37,59 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:37,59
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:37,59","heat":"2"}
<message_mapper> store lane 4: lane 4 0:37,59 0
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:37,59","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:37,59","heat":"2"}
mqtt_handler datamapping incoming lane 5 0:41,66 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:41,66
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:41,66","heat":"2"}
<message_mapper> store lane 5: lane 5 0:41,66 0
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:41,66","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:41,66","heat":"2"}
mqtt_handler datamapping incoming lane 6 0:55,35 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:55,35
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"0","time":"0:55,35","heat":"2"}
<message_mapper> store lane 6: lane 6 0:55,35 0
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"0","time":"0:55,35","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"0","time":"0:55,35","heat":"2"}
mqtt_handler datamapping incoming lane 1 0:33,33 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:33,33
(place)lane: 1
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"0:33,33","heat":"2"}
<message_mapper> store lane 1: lane 1 0:33,33 1
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"0:33,33","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"0:33,33","heat":"2"}
mqtt_handler datamapping incoming lane 2 1:27,63 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:27,63
(place)lane: 2
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"2","time":"1:27,63","heat":"2"}
<message_mapper> store lane 2: lane 2 1:27,63 2
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"2","time":"1:27,63","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"2","time":"1:27,63","heat":"2"}
mqtt_handler datamapping incoming lane 3 0:57,15 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:57,15
(place)lane: 3
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"0:57,15","heat":"2"}
<message_mapper> store lane 3: lane 3 0:57,15 3
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"0:57,15","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"0:57,15","heat":"2"}
mqtt_handler datamapping incoming lane 4 1:28,66 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:28,66
(place)lane: 4
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"4","time":"1:28,66","heat":"2"}
<message_mapper> store lane 4: lane 4 1:28,66 4
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"4","time":"1:28,66","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"4","time":"1:28,66","heat":"2"}
mqtt_handler datamapping incoming lane 5 1:21,46 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:21,46
(place)lane: 5
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"1:21,46","heat":"2"}
<message_mapper> store lane 5: lane 5 1:21,46 5
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"1:21,46","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"1:21,46","heat":"2"}
mqtt_handler datamapping incoming lane 6 0:40,5 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:40,5
(place)lane: 6
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"6","time":"0:40,5","heat":"2"}
<message_mapper> store lane 6: lane 6 0:40,5 6
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"6","time":"0:40,5","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"6","time":"0:40,5","heat":"2"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584285115"}
websocket backend mainchannel {"type":"stop","time":"1584285115"}
stop
websocket backend send {"type":"stop","time":"1584285115"}
mqtt_handler datamapping incoming header 1 3
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 3
<swim_events> getInternalHeatId 1 3
<swim_event> number heats 25609
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584285121"}
websocket backend mainchannel {"type":"start","time":"1584285121"}
start
websocket backend send {"type":"start","time":"1584285121"}
mqtt_handler datamapping incoming lane 1 1:29,87 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:29,87
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:29,87","heat":"3"}
<message_mapper> store lane 1: lane 1 1:29,87 0
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:29,87","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:29,87","heat":"3"}
mqtt_handler datamapping incoming lane 2 0:49,46 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:49,46
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:49,46","heat":"3"}
<message_mapper> store lane 2: lane 2 0:49,46 0
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:49,46","heat":"3"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:49,46","heat":"3"}
mqtt_handler datamapping incoming lane 3 0:54,64 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:54,64
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:54,64","heat":"3"}
<message_mapper> store lane 3: lane 3 0:54,64 0
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:54,64","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:54,64","heat":"3"}
mqtt_handler datamapping incoming lane 4 0:29,56 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:29,56
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:29,56","heat":"3"}
<message_mapper> store lane 4: lane 4 0:29,56 0
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:29,56","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:29,56","heat":"3"}
mqtt_handler datamapping incoming lane 5 1:37,45 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:37,45
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:37,45","heat":"3"}
<message_mapper> store lane 5: lane 5 1:37,45 0
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:37,45","heat":"3"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:37,45","heat":"3"}
mqtt_handler datamapping incoming lane 6 0:51,72 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:51,72
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:51,72","heat":"3"}
<message_mapper> store lane 6: lane 6 0:51,72 0
websocket backend mainchannel {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:51,72","heat":"3"}
lane
websocket backend send {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:51,72","heat":"3"}
mqtt_handler datamapping incoming lane 1 0:44,65 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:44,65
(place)lane: 1
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"0:44,65","heat":"3"}
<message_mapper> store lane 1: lane 1 0:44,65 1
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"0:44,65","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"0:44,65","heat":"3"}
mqtt_handler datamapping incoming lane 2 0:18,46 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:18,46
(place)lane: 2
<swim_event> get swimmer for internalheatid 25609 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"2","time":"0:18,46","heat":"3"}
<message_mapper> store lane 2: lane 2 0:18,46 2
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"2","time":"0:18,46","heat":"3"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"2","time":"0:18,46","heat":"3"}
mqtt_handler datamapping incoming lane 3 1:31,29 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:31,29
(place)lane: 3
<swim_event> get swimmer for internalheatid 25609 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"1:31,29","heat":"3"}
<message_mapper> store lane 3: lane 3 1:31,29 3
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"1:31,29","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"1:31,29","heat":"3"}
mqtt_handler datamapping incoming lane 4 0:41,79 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:41,79
(place)lane: 4
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"4","time":"0:41,79","heat":"3"}
<message_mapper> store lane 4: lane 4 0:41,79 4
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"4","time":"0:41,79","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"4","time":"0:41,79","heat":"3"}
mqtt_handler datamapping incoming lane 5 1:24,1 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:24,1
(place)lane: 5
<swim_event> get swimmer for internalheatid 25609 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"1:24,1","heat":"3"}
<message_mapper> store lane 5: lane 5 1:24,1 5
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"1:24,1","heat":"3"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"1:24,1","heat":"3"}
mqtt_handler datamapping incoming lane 6 0:49,80 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:49,80
(place)lane: 6
<swim_event> get swimmer for internalheatid 25609 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"6","time":"0:49,80","heat":"3"}
<message_mapper> store lane 6: lane 6 0:49,80 6
websocket backend mainchannel {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"6","time":"0:49,80","heat":"3"}
lane
websocket backend send {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"6","time":"0:49,80","heat":"3"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584285132"}
websocket backend mainchannel {"type":"stop","time":"1584285132"}
stop
websocket backend send {"type":"stop","time":"1584285132"}
mqtt_handler datamapping incoming header 1 4
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 4
<swim_events> getInternalHeatId 1 4
<swim_event> number heats 25610
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"4","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"4","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"4","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584285138"}
websocket backend mainchannel {"type":"start","time":"1584285138"}
start
websocket backend send {"type":"start","time":"1584285138"}
mqtt_handler datamapping incoming lane 1 1:19,17 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:19,17
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:19,17","heat":"4"}
<message_mapper> store lane 1: lane 1 1:19,17 0
websocket backend mainchannel {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:19,17","heat":"4"}
lane
websocket backend send {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:19,17","heat":"4"}
mqtt_handler datamapping incoming lane 2 0:54,21 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:54,21
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:54,21","heat":"4"}
<message_mapper> store lane 2: lane 2 0:54,21 0
websocket backend mainchannel {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:54,21","heat":"4"}
lane
websocket backend send {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:54,21","heat":"4"}
mqtt_handler datamapping incoming lane 3 0:27,23 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:27,23
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:27,23","heat":"4"}
<message_mapper> store lane 3: lane 3 0:27,23 0
websocket backend mainchannel {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:27,23","heat":"4"}
lane
websocket backend send {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:27,23","heat":"4"}
mqtt_handler datamapping incoming lane 4 1:57,85 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:57,85
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"0","time":"1:57,85","heat":"4"}
<message_mapper> store lane 4: lane 4 1:57,85 0
websocket backend mainchannel {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"0","time":"1:57,85","heat":"4"}
lane
websocket backend send {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"0","time":"1:57,85","heat":"4"}
mqtt_handler datamapping incoming lane 5 1:19,80 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:19,80
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:19,80","heat":"4"}
<message_mapper> store lane 5: lane 5 1:19,80 0
websocket backend mainchannel {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:19,80","heat":"4"}
lane
websocket backend send {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:19,80","heat":"4"}
mqtt_handler datamapping incoming lane 6 1:40,77 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:40,77
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"1:40,77","heat":"4"}
<message_mapper> store lane 6: lane 6 1:40,77 0
websocket backend mainchannel {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"1:40,77","heat":"4"}
lane
websocket backend send {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"1:40,77","heat":"4"}
mqtt_handler datamapping incoming lane 1 1:41,75 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:41,75
(place)lane: 1
<swim_event> get swimmer for internalheatid 25610 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:41,75","heat":"4"}
<message_mapper> store lane 1: lane 1 1:41,75 1
websocket backend mainchannel {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:41,75","heat":"4"}
lane
websocket backend send {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:41,75","heat":"4"}
mqtt_handler datamapping incoming lane 2 1:7,73 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:7,73
(place)lane: 2
<swim_event> get swimmer for internalheatid 25610 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"2","time":"1:7,73","heat":"4"}
<message_mapper> store lane 2: lane 2 1:7,73 2
websocket backend mainchannel {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"2","time":"1:7,73","heat":"4"}
lane
websocket backend send {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"2","time":"1:7,73","heat":"4"}
mqtt_handler datamapping incoming lane 3 0:51,33 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:51,33
(place)lane: 3
<swim_event> get swimmer for internalheatid 25610 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"0:51,33","heat":"4"}
<message_mapper> store lane 3: lane 3 0:51,33 3
websocket backend mainchannel {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"0:51,33","heat":"4"}
lane
websocket backend send {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"0:51,33","heat":"4"}
mqtt_handler datamapping incoming lane 4 1:50,94 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:50,94
(place)lane: 4
<swim_event> get swimmer for internalheatid 25610 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"4","time":"1:50,94","heat":"4"}
<message_mapper> store lane 4: lane 4 1:50,94 4
websocket backend mainchannel {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"4","time":"1:50,94","heat":"4"}
lane
websocket backend send {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"4","time":"1:50,94","heat":"4"}
mqtt_handler datamapping incoming lane 5 1:57,84 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:57,84
(place)lane: 5
<swim_event> get swimmer for internalheatid 25610 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"1:57,84","heat":"4"}
<message_mapper> store lane 5: lane 5 1:57,84 5
websocket backend mainchannel {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"1:57,84","heat":"4"}
lane
websocket backend send {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"1:57,84","heat":"4"}
mqtt_handler datamapping incoming lane 6 0:38,54 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:38,54
(place)lane: 6
<swim_event> get swimmer for internalheatid 25610 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"6","time":"0:38,54","heat":"4"}
<message_mapper> store lane 6: lane 6 0:38,54 6
websocket backend mainchannel {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"6","time":"0:38,54","heat":"4"}
lane
websocket backend send {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"6","time":"0:38,54","heat":"4"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584285150"}
websocket backend mainchannel {"type":"stop","time":"1584285150"}
stop
websocket backend send {"type":"stop","time":"1584285150"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584285153"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584285153"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584285153"}
mqtt_handler datamapping incoming header 2 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -2-
HEAT: 1
<swim_events> getInternalHeatId 2 1
<swim_event> number heats 25612
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"2","heat":"1","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25612 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25612 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25612 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25612 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25612 no relay lane 5
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25612 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"1","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
----------------- reset clock
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"1","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"2","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"2","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"5","event":"2","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"5","event":"2","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"1"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584285161"}
websocket backend mainchannel {"type":"start","time":"1584285161"}
start
websocket backend send {"type":"start","time":"1584285161"}
mqtt_handler datamapping incoming lane 1 0:55,27 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:55,27
(place)lane: 0
<swim_event> get swimmer for internalheatid 25612 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"2","place":"0","time":"0:55,27","heat":"1"}
<message_mapper> store lane 1: lane 1 0:55,27 0
websocket backend mainchannel {"type":"lane","lane":"1","event":"2","place":"0","time":"0:55,27","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"2","place":"0","time":"0:55,27","heat":"1"}
mqtt_handler datamapping incoming lane 2 1:11,10 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:11,10
(place)lane: 0
<swim_event> get swimmer for internalheatid 25612 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"1:11,10","heat":"1"}
<message_mapper> store lane 2: lane 2 1:11,10 0
websocket backend mainchannel {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"1:11,10","heat":"1"}
lane
websocket backend send {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"1:11,10","heat":"1"}
mqtt_handler datamapping incoming lane 3 1:16,63 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:16,63
(place)lane: 0
<swim_event> get swimmer for internalheatid 25612 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"1:16,63","heat":"1"}
<message_mapper> store lane 3: lane 3 1:16,63 0
websocket backend mainchannel {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"1:16,63","heat":"1"}
lane
websocket backend send {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"1:16,63","heat":"1"}
mqtt_handler datamapping incoming lane 4 0:40,84 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:40,84
(place)lane: 0
<swim_event> get swimmer for internalheatid 25612 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"0","time":"0:40,84","heat":"1"}
<message_mapper> store lane 4: lane 4 0:40,84 0
websocket backend mainchannel {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"0","time":"0:40,84","heat":"1"}
lane
websocket backend send {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"0","time":"0:40,84","heat":"1"}
mqtt_handler datamapping incoming lane 5 0:14,49 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:14,49
(place)lane: 0
<swim_event> get swimmer for internalheatid 25612 no relay lane 5
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"5","event":"2","place":"0","time":"0:14,49","heat":"1"}
<message_mapper> store lane 5: lane 5 0:14,49 0
websocket backend mainchannel {"type":"lane","lane":"5","event":"2","place":"0","time":"0:14,49","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"5","event":"2","place":"0","time":"0:14,49","heat":"1"}
mqtt_handler datamapping incoming lane 6 0:9,65 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:9,65
(place)lane: 0
<swim_event> get swimmer for internalheatid 25612 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"2","place":"0","time":"0:9,65","heat":"1"}
<message_mapper> store lane 6: lane 6 0:9,65 0
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"0","time":"0:9,65","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"0","time":"0:9,65","heat":"1"}
mqtt_handler datamapping incoming lane 1 0:43,63 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:43,63
(place)lane: 1
<swim_event> get swimmer for internalheatid 25612 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"2","place":"1","time":"0:43,63","heat":"1"}
<message_mapper> store lane 1: lane 1 0:43,63 1
websocket backend mainchannel {"type":"lane","lane":"1","event":"2","place":"1","time":"0:43,63","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"2","place":"1","time":"0:43,63","heat":"1"}
mqtt_handler datamapping incoming lane 2 1:56,60 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:56,60
(place)lane: 2
<swim_event> get swimmer for internalheatid 25612 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"2","time":"1:56,60","heat":"1"}
<message_mapper> store lane 2: lane 2 1:56,60 2
websocket backend mainchannel {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"2","time":"1:56,60","heat":"1"}
lane
websocket backend send {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"2","time":"1:56,60","heat":"1"}
mqtt_handler datamapping incoming lane 3 0:46,72 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:46,72
(place)lane: 3
<swim_event> get swimmer for internalheatid 25612 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"3","time":"0:46,72","heat":"1"}
<message_mapper> store lane 3: lane 3 0:46,72 3
websocket backend mainchannel {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"3","time":"0:46,72","heat":"1"}
lane
websocket backend send {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"3","time":"0:46,72","heat":"1"}
mqtt_handler datamapping incoming lane 4 1:27,84 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:27,84
(place)lane: 4
<swim_event> get swimmer for internalheatid 25612 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"4","time":"1:27,84","heat":"1"}
<message_mapper> store lane 4: lane 4 1:27,84 4
websocket backend mainchannel {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"4","time":"1:27,84","heat":"1"}
lane
websocket backend send {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"4","time":"1:27,84","heat":"1"}
mqtt_handler datamapping incoming lane 5 0:16,87 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:16,87
(place)lane: 5
<swim_event> get swimmer for internalheatid 25612 no relay lane 5
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"5","event":"2","place":"5","time":"0:16,87","heat":"1"}
<message_mapper> store lane 5: lane 5 0:16,87 5
websocket backend mainchannel {"type":"lane","lane":"5","event":"2","place":"5","time":"0:16,87","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"5","event":"2","place":"5","time":"0:16,87","heat":"1"}
mqtt_handler datamapping incoming lane 6 0:51,66 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:51,66
(place)lane: 6
<swim_event> get swimmer for internalheatid 25612 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"2","place":"6","time":"0:51,66","heat":"1"}
<message_mapper> store lane 6: lane 6 0:51,66 6
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"6","time":"0:51,66","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"6","time":"0:51,66","heat":"1"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584285172"}
websocket backend mainchannel {"type":"stop","time":"1584285172"}
stop
websocket backend send {"type":"stop","time":"1584285172"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
mqtt_handler datamapping incoming header 2 2
<message_mapper> beginn parse
<incoming> Type: header
Event: -2-
HEAT: 2
<swim_events> getInternalHeatId 2 2
<swim_event> number heats 25613
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584285178"}
websocket backend mainchannel {"type":"start","time":"1584285178"}
start
websocket backend send {"type":"start","time":"1584285178"}
mqtt_handler datamapping incoming lane 1 1:53,38 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:53,38
(place)lane: 0
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"0","time":"1:53,38","heat":"2"}
<message_mapper> store lane 1: lane 1 1:53,38 0
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"0","time":"1:53,38","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"0","time":"1:53,38","heat":"2"}
mqtt_handler datamapping incoming lane 2 0:30,13 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:30,13
(place)lane: 0
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"0:30,13","heat":"2"}
<message_mapper> store lane 2: lane 2 0:30,13 0
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"0:30,13","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"0:30,13","heat":"2"}
mqtt_handler datamapping incoming lane 3 1:51,27 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:51,27
(place)lane: 0
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"1:51,27","heat":"2"}
<message_mapper> store lane 3: lane 3 1:51,27 0
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"1:51,27","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"1:51,27","heat":"2"}
mqtt_handler datamapping incoming lane 4 0:30,99 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:30,99
(place)lane: 0
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"0:30,99","heat":"2"}
<message_mapper> store lane 4: lane 4 0:30,99 0
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"0:30,99","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"0:30,99","heat":"2"}
mqtt_handler datamapping incoming lane 5 1:14,6 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:14,6
(place)lane: 0
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"1:14,6","heat":"2"}
<message_mapper> store lane 5: lane 5 1:14,6 0
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"1:14,6","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"1:14,6","heat":"2"}
mqtt_handler datamapping incoming lane 6 1:58,91 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:58,91
(place)lane: 0
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"2","place":"0","time":"1:58,91","heat":"2"}
<message_mapper> store lane 6: lane 6 1:58,91 0
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"0","time":"1:58,91","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"0","time":"1:58,91","heat":"2"}
mqtt_handler datamapping incoming lane 1 0:17,30 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:17,30
(place)lane: 1
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"1","time":"0:17,30","heat":"2"}
<message_mapper> store lane 1: lane 1 0:17,30 1
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"1","time":"0:17,30","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"1","time":"0:17,30","heat":"2"}
mqtt_handler datamapping incoming lane 2 0:17,54 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:17,54
(place)lane: 2
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"2","time":"0:17,54","heat":"2"}
<message_mapper> store lane 2: lane 2 0:17,54 2
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"2","time":"0:17,54","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"2","time":"0:17,54","heat":"2"}
mqtt_handler datamapping incoming lane 3 0:8,0 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:8,0
(place)lane: 3
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"3","time":"0:8,0","heat":"2"}
<message_mapper> store lane 3: lane 3 0:8,0 3
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"3","time":"0:8,0","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"3","time":"0:8,0","heat":"2"}
mqtt_handler datamapping incoming lane 4 0:33,35 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:33,35
(place)lane: 4
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"4","time":"0:33,35","heat":"2"}
<message_mapper> store lane 4: lane 4 0:33,35 4
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"4","time":"0:33,35","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"4","time":"0:33,35","heat":"2"}
mqtt_handler datamapping incoming lane 5 0:22,35 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:22,35
(place)lane: 5
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"5","time":"0:22,35","heat":"2"}
<message_mapper> store lane 5: lane 5 0:22,35 5
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"5","time":"0:22,35","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"5","time":"0:22,35","heat":"2"}
mqtt_handler datamapping incoming lane 6 0:0,19 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:0,19
(place)lane: 6
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"2","place":"6","time":"0:0,19","heat":"2"}
<message_mapper> store lane 6: lane 6 0:0,19 6
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"6","time":"0:0,19","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"6","time":"0:0,19","heat":"2"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584285190"}
websocket backend mainchannel {"type":"stop","time":"1584285190"}
stop
websocket backend send {"type":"stop","time":"1584285190"}
mqtt_handler datamapping incoming header 2 3
<message_mapper> beginn parse
<incoming> Type: header
Event: -2-
HEAT: 3
<swim_events> getInternalHeatId 2 3
<swim_event> number heats 25614
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"2","heat":"3","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25614 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25614 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25614 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25614 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25614 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25614 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"3","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"3","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24323","birthdate":"2013-01-01","firstname":"Alina","lastname":"Zeder","lane":"3","entrytime":"00:00:39.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24323","birthdate":"2013-01-01","firstname":"Alina","lastname":"Zeder","lane":"3","entrytime":"00:00:39.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"4","entrytime":"00:00:39.89","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"4","entrytime":"00:00:39.89","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24529","birthdate":"2013-01-01","firstname":"Louisa","lastname":"Heidenreich","lane":"5","entrytime":"00:00:42.76","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24529","birthdate":"2013-01-01","firstname":"Louisa","lastname":"Heidenreich","lane":"5","entrytime":"00:00:42.76","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"6","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"6","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"3"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584285196"}
websocket backend mainchannel {"type":"start","time":"1584285196"}
start
websocket backend send {"type":"start","time":"1584285196"}
mqtt_handler datamapping incoming lane 1 0:15,89 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:15,89
(place)lane: 0
<swim_event> get swimmer for internalheatid 25614 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"0:15,89","heat":"3"}
<message_mapper> store lane 1: lane 1 0:15,89 0
websocket backend mainchannel {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"0:15,89","heat":"3"}
lane
websocket backend send {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"0:15,89","heat":"3"}
mqtt_handler datamapping incoming lane 2 0:37,53 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:37,53
(place)lane: 0
<swim_event> get swimmer for internalheatid 25614 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"0","time":"0:37,53","heat":"3"}
<message_mapper> store lane 2: lane 2 0:37,53 0
websocket backend mainchannel {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"0","time":"0:37,53","heat":"3"}
lane
websocket backend send {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"0","time":"0:37,53","heat":"3"}
mqtt_handler datamapping incoming lane 3 0:46,23 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:46,23
(place)lane: 0
<swim_event> get swimmer for internalheatid 25614 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24323","birthdate":"2013-01-01","firstname":"Alina","lastname":"Zeder","lane":"3","entrytime":"00:00:39.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"0","time":"0:46,23","heat":"3"}
<message_mapper> store lane 3: lane 3 0:46,23 0
websocket backend mainchannel {"athleteid":"24323","birthdate":"2013-01-01","firstname":"Alina","lastname":"Zeder","lane":"3","entrytime":"00:00:39.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"0","time":"0:46,23","heat":"3"}
lane
websocket backend send {"athleteid":"24323","birthdate":"2013-01-01","firstname":"Alina","lastname":"Zeder","lane":"3","entrytime":"00:00:39.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"0","time":"0:46,23","heat":"3"}
mqtt_handler datamapping incoming lane 4 1:34,61 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:34,61
(place)lane: 0
<swim_event> get swimmer for internalheatid 25614 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"4","entrytime":"00:00:39.89","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"1:34,61","heat":"3"}
<message_mapper> store lane 4: lane 4 1:34,61 0
websocket backend mainchannel {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"4","entrytime":"00:00:39.89","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"1:34,61","heat":"3"}
lane
websocket backend send {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"4","entrytime":"00:00:39.89","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"1:34,61","heat":"3"}
mqtt_handler datamapping incoming lane 5 0:20,67 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:20,67
(place)lane: 0
<swim_event> get swimmer for internalheatid 25614 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24529","birthdate":"2013-01-01","firstname":"Louisa","lastname":"Heidenreich","lane":"5","entrytime":"00:00:42.76","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"0:20,67","heat":"3"}
<message_mapper> store lane 5: lane 5 0:20,67 0
websocket backend mainchannel {"athleteid":"24529","birthdate":"2013-01-01","firstname":"Louisa","lastname":"Heidenreich","lane":"5","entrytime":"00:00:42.76","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"0:20,67","heat":"3"}
lane
websocket backend send {"athleteid":"24529","birthdate":"2013-01-01","firstname":"Louisa","lastname":"Heidenreich","lane":"5","entrytime":"00:00:42.76","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"0:20,67","heat":"3"}
mqtt_handler datamapping incoming lane 6 1:36,40 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:36,40
(place)lane: 0
<swim_event> get swimmer for internalheatid 25614 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"6","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"1:36,40","heat":"3"}
<message_mapper> store lane 6: lane 6 1:36,40 0
websocket backend mainchannel {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"6","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"1:36,40","heat":"3"}
lane
websocket backend send {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"6","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"1:36,40","heat":"3"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
mqtt_handler datamapping incoming lane 1 0:10,56 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:10,56
(place)lane: 1
<swim_event> get swimmer for internalheatid 25614 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"1","time":"0:10,56","heat":"3"}
<message_mapper> store lane 1: lane 1 0:10,56 1
websocket backend mainchannel {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"1","time":"0:10,56","heat":"3"}
lane
websocket backend send {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"1","time":"0:10,56","heat":"3"}
mqtt_handler datamapping incoming lane 2 1:14,67 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:14,67
(place)lane: 2
<swim_event> get swimmer for internalheatid 25614 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"2","time":"1:14,67","heat":"3"}
<message_mapper> store lane 2: lane 2 1:14,67 2
websocket backend mainchannel {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"2","time":"1:14,67","heat":"3"}
lane
websocket backend send {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"2","time":"1:14,67","heat":"3"}
mqtt_handler datamapping incoming lane 3 0:50,82 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:50,82
(place)lane: 3
<swim_event> get swimmer for internalheatid 25614 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24323","birthdate":"2013-01-01","firstname":"Alina","lastname":"Zeder","lane":"3","entrytime":"00:00:39.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"3","time":"0:50,82","heat":"3"}
<message_mapper> store lane 3: lane 3 0:50,82 3
websocket backend mainchannel {"athleteid":"24323","birthdate":"2013-01-01","firstname":"Alina","lastname":"Zeder","lane":"3","entrytime":"00:00:39.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"3","time":"0:50,82","heat":"3"}
lane
websocket backend send {"athleteid":"24323","birthdate":"2013-01-01","firstname":"Alina","lastname":"Zeder","lane":"3","entrytime":"00:00:39.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"3","time":"0:50,82","heat":"3"}
mqtt_handler datamapping incoming lane 4 1:20,84 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:20,84
(place)lane: 4
<swim_event> get swimmer for internalheatid 25614 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"4","entrytime":"00:00:39.89","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"4","time":"1:20,84","heat":"3"}
<message_mapper> store lane 4: lane 4 1:20,84 4
websocket backend mainchannel {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"4","entrytime":"00:00:39.89","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"4","time":"1:20,84","heat":"3"}
lane
websocket backend send {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"4","entrytime":"00:00:39.89","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"4","time":"1:20,84","heat":"3"}
mqtt_handler datamapping incoming lane 5 0:24,66 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:24,66
(place)lane: 5
<swim_event> get swimmer for internalheatid 25614 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24529","birthdate":"2013-01-01","firstname":"Louisa","lastname":"Heidenreich","lane":"5","entrytime":"00:00:42.76","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"5","time":"0:24,66","heat":"3"}
<message_mapper> store lane 5: lane 5 0:24,66 5
websocket backend mainchannel {"athleteid":"24529","birthdate":"2013-01-01","firstname":"Louisa","lastname":"Heidenreich","lane":"5","entrytime":"00:00:42.76","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"5","time":"0:24,66","heat":"3"}
lane
websocket backend send {"athleteid":"24529","birthdate":"2013-01-01","firstname":"Louisa","lastname":"Heidenreich","lane":"5","entrytime":"00:00:42.76","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"5","time":"0:24,66","heat":"3"}
mqtt_handler datamapping incoming lane 6 0:2,65 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:2,65
(place)lane: 6
<swim_event> get swimmer for internalheatid 25614 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"6","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"6","time":"0:2,65","heat":"3"}
<message_mapper> store lane 6: lane 6 0:2,65 6
websocket backend mainchannel {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"6","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"6","time":"0:2,65","heat":"3"}
lane
websocket backend send {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"6","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"6","time":"0:2,65","heat":"3"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584285207"}
websocket backend mainchannel {"type":"stop","time":"1584285207"}
stop
websocket backend send {"type":"stop","time":"1584285207"}
mqtt_handler datamapping incoming header 2 4
<message_mapper> beginn parse
<incoming> Type: header
Event: -2-
HEAT: 4
<swim_events> getInternalHeatId 2 4
<swim_event> number heats 25615
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"2","heat":"4","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25615 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25615 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25615 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25615 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25615 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25615 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"4","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"4","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"1","entrytime":"00:00:36.41","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"1","entrytime":"00:00:36.41","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"25538","birthdate":"2012-01-01","firstname":"Leila","lastname":"Schomleu","lane":"2","entrytime":"00:00:36.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"25538","birthdate":"2012-01-01","firstname":"Leila","lastname":"Schomleu","lane":"2","entrytime":"00:00:36.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"25453","birthdate":"2012-01-01","firstname":"Anna","lastname":"SchrÃ¶ter","lane":"3","entrytime":"00:00:35.00","name":"SC Uttenreuth","code":"4383","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"25453","birthdate":"2012-01-01","firstname":"Anna","lastname":"SchrÃ¶ter","lane":"3","entrytime":"00:00:35.00","name":"SC Uttenreuth","code":"4383","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24716","birthdate":"2013-01-01","firstname":"Julia","lastname":"Ehnis","lane":"4","entrytime":"00:00:35.36","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24716","birthdate":"2013-01-01","firstname":"Julia","lastname":"Ehnis","lane":"4","entrytime":"00:00:35.36","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24721","birthdate":"2012-01-01","firstname":"Lia Sophie","lastname":"Fuchs","lane":"5","entrytime":"00:00:36.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24721","birthdate":"2012-01-01","firstname":"Lia Sophie","lastname":"Fuchs","lane":"5","entrytime":"00:00:36.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"25543","birthdate":"2013-01-01","firstname":"Tamina","lastname":"Schomleu","lane":"6","entrytime":"00:00:38.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"25543","birthdate":"2013-01-01","firstname":"Tamina","lastname":"Schomleu","lane":"6","entrytime":"00:00:38.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"4"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584285213"}
websocket backend mainchannel {"type":"start","time":"1584285213"}
start
websocket backend send {"type":"start","time":"1584285213"}
mqtt_handler datamapping incoming lane 1 0:30,23 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:30,23
(place)lane: 0
<swim_event> get swimmer for internalheatid 25615 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"1","entrytime":"00:00:36.41","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"2","place":"0","time":"0:30,23","heat":"4"}
<message_mapper> store lane 1: lane 1 0:30,23 0
websocket backend mainchannel {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"1","entrytime":"00:00:36.41","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"2","place":"0","time":"0:30,23","heat":"4"}
lane
websocket backend send {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"1","entrytime":"00:00:36.41","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"2","place":"0","time":"0:30,23","heat":"4"}
mqtt_handler datamapping incoming lane 2 1:12,65 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:12,65
(place)lane: 0
<swim_event> get swimmer for internalheatid 25615 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25538","birthdate":"2012-01-01","firstname":"Leila","lastname":"Schomleu","lane":"2","entrytime":"00:00:36.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"2","place":"0","time":"1:12,65","heat":"4"}
<message_mapper> store lane 2: lane 2 1:12,65 0
websocket backend mainchannel {"athleteid":"25538","birthdate":"2012-01-01","firstname":"Leila","lastname":"Schomleu","lane":"2","entrytime":"00:00:36.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"2","place":"0","time":"1:12,65","heat":"4"}
lane
websocket backend send {"athleteid":"25538","birthdate":"2012-01-01","firstname":"Leila","lastname":"Schomleu","lane":"2","entrytime":"00:00:36.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"2","place":"0","time":"1:12,65","heat":"4"}
mqtt_handler datamapping incoming lane 3 1:56,1 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:56,1
(place)lane: 0
<swim_event> get swimmer for internalheatid 25615 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25453","birthdate":"2012-01-01","firstname":"Anna","lastname":"SchrÃ¶ter","lane":"3","entrytime":"00:00:35.00","name":"SC Uttenreuth","code":"4383","type":"lane","event":"2","place":"0","time":"1:56,1","heat":"4"}
<message_mapper> store lane 3: lane 3 1:56,1 0
websocket backend mainchannel {"athleteid":"25453","birthdate":"2012-01-01","firstname":"Anna","lastname":"SchrÃ¶ter","lane":"3","entrytime":"00:00:35.00","name":"SC Uttenreuth","code":"4383","type":"lane","event":"2","place":"0","time":"1:56,1","heat":"4"}
lane
websocket backend send {"athleteid":"25453","birthdate":"2012-01-01","firstname":"Anna","lastname":"SchrÃ¶ter","lane":"3","entrytime":"00:00:35.00","name":"SC Uttenreuth","code":"4383","type":"lane","event":"2","place":"0","time":"1:56,1","heat":"4"}
mqtt_handler datamapping incoming lane 4 1:30,28 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:30,28
(place)lane: 0
<swim_event> get swimmer for internalheatid 25615 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24716","birthdate":"2013-01-01","firstname":"Julia","lastname":"Ehnis","lane":"4","entrytime":"00:00:35.36","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"1:30,28","heat":"4"}
<message_mapper> store lane 4: lane 4 1:30,28 0
websocket backend mainchannel {"athleteid":"24716","birthdate":"2013-01-01","firstname":"Julia","lastname":"Ehnis","lane":"4","entrytime":"00:00:35.36","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"1:30,28","heat":"4"}
lane
websocket backend send {"athleteid":"24716","birthdate":"2013-01-01","firstname":"Julia","lastname":"Ehnis","lane":"4","entrytime":"00:00:35.36","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"1:30,28","heat":"4"}
mqtt_handler datamapping incoming lane 5 0:54,93 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:54,93
(place)lane: 0
<swim_event> get swimmer for internalheatid 25615 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24721","birthdate":"2012-01-01","firstname":"Lia Sophie","lastname":"Fuchs","lane":"5","entrytime":"00:00:36.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"0:54,93","heat":"4"}
<message_mapper> store lane 5: lane 5 0:54,93 0
websocket backend mainchannel {"athleteid":"24721","birthdate":"2012-01-01","firstname":"Lia Sophie","lastname":"Fuchs","lane":"5","entrytime":"00:00:36.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"0:54,93","heat":"4"}
lane
websocket backend send {"athleteid":"24721","birthdate":"2012-01-01","firstname":"Lia Sophie","lastname":"Fuchs","lane":"5","entrytime":"00:00:36.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"0:54,93","heat":"4"}
mqtt_handler datamapping incoming lane 6 1:1,84 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:1,84
(place)lane: 0
<swim_event> get swimmer for internalheatid 25615 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25543","birthdate":"2013-01-01","firstname":"Tamina","lastname":"Schomleu","lane":"6","entrytime":"00:00:38.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"2","place":"0","time":"1:1,84","heat":"4"}
<message_mapper> store lane 6: lane 6 1:1,84 0
websocket backend mainchannel {"athleteid":"25543","birthdate":"2013-01-01","firstname":"Tamina","lastname":"Schomleu","lane":"6","entrytime":"00:00:38.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"2","place":"0","time":"1:1,84","heat":"4"}
lane
websocket backend send {"athleteid":"25543","birthdate":"2013-01-01","firstname":"Tamina","lastname":"Schomleu","lane":"6","entrytime":"00:00:38.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"2","place":"0","time":"1:1,84","heat":"4"}
mqtt_handler datamapping incoming lane 1 0:9,81 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:9,81
(place)lane: 1
<swim_event> get swimmer for internalheatid 25615 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"1","entrytime":"00:00:36.41","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"2","place":"1","time":"0:9,81","heat":"4"}
<message_mapper> store lane 1: lane 1 0:9,81 1
websocket backend mainchannel {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"1","entrytime":"00:00:36.41","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"2","place":"1","time":"0:9,81","heat":"4"}
lane
websocket backend send {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"1","entrytime":"00:00:36.41","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"2","place":"1","time":"0:9,81","heat":"4"}
mqtt_handler datamapping incoming lane 2 1:32,51 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:32,51
(place)lane: 2
<swim_event> get swimmer for internalheatid 25615 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25538","birthdate":"2012-01-01","firstname":"Leila","lastname":"Schomleu","lane":"2","entrytime":"00:00:36.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"2","place":"2","time":"1:32,51","heat":"4"}
<message_mapper> store lane 2: lane 2 1:32,51 2
websocket backend mainchannel {"athleteid":"25538","birthdate":"2012-01-01","firstname":"Leila","lastname":"Schomleu","lane":"2","entrytime":"00:00:36.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"2","place":"2","time":"1:32,51","heat":"4"}
lane
websocket backend send {"athleteid":"25538","birthdate":"2012-01-01","firstname":"Leila","lastname":"Schomleu","lane":"2","entrytime":"00:00:36.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"2","place":"2","time":"1:32,51","heat":"4"}
mqtt_handler datamapping incoming lane 3 1:1,52 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:1,52
(place)lane: 3
<swim_event> get swimmer for internalheatid 25615 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25453","birthdate":"2012-01-01","firstname":"Anna","lastname":"SchrÃ¶ter","lane":"3","entrytime":"00:00:35.00","name":"SC Uttenreuth","code":"4383","type":"lane","event":"2","place":"3","time":"1:1,52","heat":"4"}
<message_mapper> store lane 3: lane 3 1:1,52 3
websocket backend mainchannel {"athleteid":"25453","birthdate":"2012-01-01","firstname":"Anna","lastname":"SchrÃ¶ter","lane":"3","entrytime":"00:00:35.00","name":"SC Uttenreuth","code":"4383","type":"lane","event":"2","place":"3","time":"1:1,52","heat":"4"}
lane
websocket backend send {"athleteid":"25453","birthdate":"2012-01-01","firstname":"Anna","lastname":"SchrÃ¶ter","lane":"3","entrytime":"00:00:35.00","name":"SC Uttenreuth","code":"4383","type":"lane","event":"2","place":"3","time":"1:1,52","heat":"4"}
mqtt_handler datamapping incoming lane 4 0:58,9 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:58,9
(place)lane: 4
<swim_event> get swimmer for internalheatid 25615 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24716","birthdate":"2013-01-01","firstname":"Julia","lastname":"Ehnis","lane":"4","entrytime":"00:00:35.36","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"4","time":"0:58,9","heat":"4"}
<message_mapper> store lane 4: lane 4 0:58,9 4
websocket backend mainchannel {"athleteid":"24716","birthdate":"2013-01-01","firstname":"Julia","lastname":"Ehnis","lane":"4","entrytime":"00:00:35.36","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"4","time":"0:58,9","heat":"4"}
lane
websocket backend send {"athleteid":"24716","birthdate":"2013-01-01","firstname":"Julia","lastname":"Ehnis","lane":"4","entrytime":"00:00:35.36","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"4","time":"0:58,9","heat":"4"}
mqtt_handler datamapping incoming lane 5 1:3,34 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:3,34
(place)lane: 5
<swim_event> get swimmer for internalheatid 25615 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24721","birthdate":"2012-01-01","firstname":"Lia Sophie","lastname":"Fuchs","lane":"5","entrytime":"00:00:36.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"5","time":"1:3,34","heat":"4"}
<message_mapper> store lane 5: lane 5 1:3,34 5
websocket backend mainchannel {"athleteid":"24721","birthdate":"2012-01-01","firstname":"Lia Sophie","lastname":"Fuchs","lane":"5","entrytime":"00:00:36.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"5","time":"1:3,34","heat":"4"}
lane
websocket backend send {"athleteid":"24721","birthdate":"2012-01-01","firstname":"Lia Sophie","lastname":"Fuchs","lane":"5","entrytime":"00:00:36.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"5","time":"1:3,34","heat":"4"}
mqtt_handler datamapping incoming lane 6 1:44,88 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:44,88
(place)lane: 6
<swim_event> get swimmer for internalheatid 25615 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25543","birthdate":"2013-01-01","firstname":"Tamina","lastname":"Schomleu","lane":"6","entrytime":"00:00:38.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"2","place":"6","time":"1:44,88","heat":"4"}
<message_mapper> store lane 6: lane 6 1:44,88 6
websocket backend mainchannel {"athleteid":"25543","birthdate":"2013-01-01","firstname":"Tamina","lastname":"Schomleu","lane":"6","entrytime":"00:00:38.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"2","place":"6","time":"1:44,88","heat":"4"}
lane
websocket backend send {"athleteid":"25543","birthdate":"2013-01-01","firstname":"Tamina","lastname":"Schomleu","lane":"6","entrytime":"00:00:38.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"2","place":"6","time":"1:44,88","heat":"4"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584285224"}
websocket backend mainchannel {"type":"stop","time":"1584285224"}
stop
websocket backend send {"type":"stop","time":"1584285224"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584285227"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584285227"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584285227"}
mqtt_handler datamapping incoming header 3 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -3-
HEAT: 1
<swim_events> getInternalHeatId 3 1
<swim_event> number heats 25618
Event: -3-
<swim_event> search for number 3
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"3","heat":"1","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25618 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25618 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25618 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25618 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25618 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25618 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"3","heat":"1","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
header
----------------- reset clock
websocket backend send {"type":"header","relaycount":"1","event":"3","heat":"1","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25392","birthdate":"2012-01-01","firstname":"Justus","lastname":"Rakow","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25392","birthdate":"2012-01-01","firstname":"Justus","lastname":"Rakow","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25373","birthdate":"2013-01-01","firstname":"Alexander","lastname":"Hutchinson Riquelme","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25373","birthdate":"2013-01-01","firstname":"Alexander","lastname":"Hutchinson Riquelme","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"3","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"3","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25395","birthdate":"2013-01-01","firstname":"Emilian","lastname":"Rauch","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25395","birthdate":"2013-01-01","firstname":"Emilian","lastname":"Rauch","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"5","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"5","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"3","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"3","place":"undefined","time":"undefined","heat":"1"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584285236"}
websocket backend mainchannel {"type":"start","time":"1584285236"}
start
websocket backend send {"type":"start","time":"1584285236"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
mqtt_handler datamapping incoming lane 1 0:38,45 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:38,45
(place)lane: 0
<swim_event> get swimmer for internalheatid 25618 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25392","birthdate":"2012-01-01","firstname":"Justus","lastname":"Rakow","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"0:38,45","heat":"1"}
<message_mapper> store lane 1: lane 1 0:38,45 0
websocket backend mainchannel {"athleteid":"25392","birthdate":"2012-01-01","firstname":"Justus","lastname":"Rakow","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"0:38,45","heat":"1"}
lane
websocket backend send {"athleteid":"25392","birthdate":"2012-01-01","firstname":"Justus","lastname":"Rakow","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"0:38,45","heat":"1"}
mqtt_handler datamapping incoming lane 2 1:1,94 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:1,94
(place)lane: 0
<swim_event> get swimmer for internalheatid 25618 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25373","birthdate":"2013-01-01","firstname":"Alexander","lastname":"Hutchinson Riquelme","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"1:1,94","heat":"1"}
<message_mapper> store lane 2: lane 2 1:1,94 0
websocket backend mainchannel {"athleteid":"25373","birthdate":"2013-01-01","firstname":"Alexander","lastname":"Hutchinson Riquelme","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"1:1,94","heat":"1"}
lane
websocket backend send {"athleteid":"25373","birthdate":"2013-01-01","firstname":"Alexander","lastname":"Hutchinson Riquelme","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"1:1,94","heat":"1"}
mqtt_handler datamapping incoming lane 3 0:26,88 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:26,88
(place)lane: 0
<swim_event> get swimmer for internalheatid 25618 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"3","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"0:26,88","heat":"1"}
<message_mapper> store lane 3: lane 3 0:26,88 0
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"3","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"0:26,88","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"3","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"0:26,88","heat":"1"}
mqtt_handler datamapping incoming lane 4 0:18,32 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:18,32
(place)lane: 0
<swim_event> get swimmer for internalheatid 25618 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25395","birthdate":"2013-01-01","firstname":"Emilian","lastname":"Rauch","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"0:18,32","heat":"1"}
<message_mapper> store lane 4: lane 4 0:18,32 0
websocket backend mainchannel {"athleteid":"25395","birthdate":"2013-01-01","firstname":"Emilian","lastname":"Rauch","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"0:18,32","heat":"1"}
lane
websocket backend send {"athleteid":"25395","birthdate":"2013-01-01","firstname":"Emilian","lastname":"Rauch","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"0:18,32","heat":"1"}
mqtt_handler datamapping incoming lane 5 1:59,63 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:59,63
(place)lane: 0
<swim_event> get swimmer for internalheatid 25618 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"5","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"1:59,63","heat":"1"}
<message_mapper> store lane 5: lane 5 1:59,63 0
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"5","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"1:59,63","heat":"1"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"5","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"1:59,63","heat":"1"}
mqtt_handler datamapping incoming lane 6 1:50,99 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:50,99
(place)lane: 0
<swim_event> get swimmer for internalheatid 25618 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"3","place":"0","time":"1:50,99","heat":"1"}
<message_mapper> store lane 6: lane 6 1:50,99 0
websocket backend mainchannel {"type":"lane","lane":"6","event":"3","place":"0","time":"1:50,99","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"3","place":"0","time":"1:50,99","heat":"1"}
mqtt_handler datamapping incoming lane 1 0:27,6 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:27,6
(place)lane: 1
<swim_event> get swimmer for internalheatid 25618 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25392","birthdate":"2012-01-01","firstname":"Justus","lastname":"Rakow","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"1","time":"0:27,6","heat":"1"}
<message_mapper> store lane 1: lane 1 0:27,6 1
websocket backend mainchannel {"athleteid":"25392","birthdate":"2012-01-01","firstname":"Justus","lastname":"Rakow","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"1","time":"0:27,6","heat":"1"}
lane
websocket backend send {"athleteid":"25392","birthdate":"2012-01-01","firstname":"Justus","lastname":"Rakow","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"1","time":"0:27,6","heat":"1"}
mqtt_handler datamapping incoming lane 2 1:1,71 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:1,71
(place)lane: 2
<swim_event> get swimmer for internalheatid 25618 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25373","birthdate":"2013-01-01","firstname":"Alexander","lastname":"Hutchinson Riquelme","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"2","time":"1:1,71","heat":"1"}
<message_mapper> store lane 2: lane 2 1:1,71 2
websocket backend mainchannel {"athleteid":"25373","birthdate":"2013-01-01","firstname":"Alexander","lastname":"Hutchinson Riquelme","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"2","time":"1:1,71","heat":"1"}
lane
websocket backend send {"athleteid":"25373","birthdate":"2013-01-01","firstname":"Alexander","lastname":"Hutchinson Riquelme","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"2","time":"1:1,71","heat":"1"}
mqtt_handler datamapping incoming lane 3 0:6,75 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:6,75
(place)lane: 3
<swim_event> get swimmer for internalheatid 25618 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"3","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"3","time":"0:6,75","heat":"1"}
<message_mapper> store lane 3: lane 3 0:6,75 3
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"3","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"3","time":"0:6,75","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"3","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"3","time":"0:6,75","heat":"1"}
mqtt_handler datamapping incoming lane 4 0:50,42 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:50,42
(place)lane: 4
<swim_event> get swimmer for internalheatid 25618 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25395","birthdate":"2013-01-01","firstname":"Emilian","lastname":"Rauch","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"4","time":"0:50,42","heat":"1"}
<message_mapper> store lane 4: lane 4 0:50,42 4
websocket backend mainchannel {"athleteid":"25395","birthdate":"2013-01-01","firstname":"Emilian","lastname":"Rauch","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"4","time":"0:50,42","heat":"1"}
lane
websocket backend send {"athleteid":"25395","birthdate":"2013-01-01","firstname":"Emilian","lastname":"Rauch","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"4","time":"0:50,42","heat":"1"}
mqtt_handler datamapping incoming lane 5 1:42,25 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:42,25
(place)lane: 5
<swim_event> get swimmer for internalheatid 25618 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"5","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"5","time":"1:42,25","heat":"1"}
<message_mapper> store lane 5: lane 5 1:42,25 5
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"5","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"5","time":"1:42,25","heat":"1"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"5","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"5","time":"1:42,25","heat":"1"}
mqtt_handler datamapping incoming lane 6 1:55,8 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:55,8
(place)lane: 6
<swim_event> get swimmer for internalheatid 25618 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"3","place":"6","time":"1:55,8","heat":"1"}
<message_mapper> store lane 6: lane 6 1:55,8 6
websocket backend mainchannel {"type":"lane","lane":"6","event":"3","place":"6","time":"1:55,8","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"3","place":"6","time":"1:55,8","heat":"1"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584285247"}
websocket backend mainchannel {"type":"stop","time":"1584285247"}
stop
websocket backend send {"type":"stop","time":"1584285247"}
mqtt_handler datamapping incoming header 3 2
<message_mapper> beginn parse
<incoming> Type: header
Event: -3-
HEAT: 2
<swim_events> getInternalHeatId 3 2
<swim_event> number heats 25619
Event: -3-
<swim_event> search for number 3
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"3","heat":"2","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25619 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25619 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25619 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25619 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25619 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25619 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"3","heat":"2","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"3","heat":"2","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"1","entrytime":"00:00:41.98","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"1","entrytime":"00:00:41.98","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25398","birthdate":"2012-01-01","firstname":"Leon","lastname":"Rauscher","lane":"2","entrytime":"00:00:37.15","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25398","birthdate":"2012-01-01","firstname":"Leon","lastname":"Rauscher","lane":"2","entrytime":"00:00:37.15","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25152","birthdate":"2012-01-01","firstname":"Eymen","lastname":"Hayirli","lane":"3","entrytime":"00:00:30.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25152","birthdate":"2012-01-01","firstname":"Eymen","lastname":"Hayirli","lane":"3","entrytime":"00:00:30.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25102","birthdate":"2012-01-01","firstname":"Stefan","lastname":"David","lane":"4","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25102","birthdate":"2012-01-01","firstname":"Stefan","lastname":"David","lane":"4","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25412","birthdate":"2012-01-01","firstname":"Antoni","lastname":"Swietlik","lane":"5","entrytime":"00:00:41.27","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25412","birthdate":"2012-01-01","firstname":"Antoni","lastname":"Swietlik","lane":"5","entrytime":"00:00:41.27","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"6","entrytime":"00:00:46.84","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"6","entrytime":"00:00:46.84","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"undefined","time":"undefined","heat":"2"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584285253"}
websocket backend mainchannel {"type":"start","time":"1584285253"}
start
websocket backend send {"type":"start","time":"1584285253"}
mqtt_handler datamapping incoming lane 1 1:44,82 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:44,82
(place)lane: 0
<swim_event> get swimmer for internalheatid 25619 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"1","entrytime":"00:00:41.98","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"1:44,82","heat":"2"}
<message_mapper> store lane 1: lane 1 1:44,82 0
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"1","entrytime":"00:00:41.98","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"1:44,82","heat":"2"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"1","entrytime":"00:00:41.98","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"1:44,82","heat":"2"}
mqtt_handler datamapping incoming lane 2 1:0,89 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:0,89
(place)lane: 0
<swim_event> get swimmer for internalheatid 25619 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25398","birthdate":"2012-01-01","firstname":"Leon","lastname":"Rauscher","lane":"2","entrytime":"00:00:37.15","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"1:0,89","heat":"2"}
<message_mapper> store lane 2: lane 2 1:0,89 0
websocket backend mainchannel {"athleteid":"25398","birthdate":"2012-01-01","firstname":"Leon","lastname":"Rauscher","lane":"2","entrytime":"00:00:37.15","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"1:0,89","heat":"2"}
lane
websocket backend send {"athleteid":"25398","birthdate":"2012-01-01","firstname":"Leon","lastname":"Rauscher","lane":"2","entrytime":"00:00:37.15","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"1:0,89","heat":"2"}
mqtt_handler datamapping incoming lane 3 1:31,63 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:31,63
(place)lane: 0
<swim_event> get swimmer for internalheatid 25619 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25152","birthdate":"2012-01-01","firstname":"Eymen","lastname":"Hayirli","lane":"3","entrytime":"00:00:30.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"3","place":"0","time":"1:31,63","heat":"2"}
<message_mapper> store lane 3: lane 3 1:31,63 0
websocket backend mainchannel {"athleteid":"25152","birthdate":"2012-01-01","firstname":"Eymen","lastname":"Hayirli","lane":"3","entrytime":"00:00:30.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"3","place":"0","time":"1:31,63","heat":"2"}
lane
websocket backend send {"athleteid":"25152","birthdate":"2012-01-01","firstname":"Eymen","lastname":"Hayirli","lane":"3","entrytime":"00:00:30.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"3","place":"0","time":"1:31,63","heat":"2"}
mqtt_handler datamapping incoming lane 4 1:46,85 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:46,85
(place)lane: 0
<swim_event> get swimmer for internalheatid 25619 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25102","birthdate":"2012-01-01","firstname":"Stefan","lastname":"David","lane":"4","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"3","place":"0","time":"1:46,85","heat":"2"}
<message_mapper> store lane 4: lane 4 1:46,85 0
websocket backend mainchannel {"athleteid":"25102","birthdate":"2012-01-01","firstname":"Stefan","lastname":"David","lane":"4","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"3","place":"0","time":"1:46,85","heat":"2"}
lane
websocket backend send {"athleteid":"25102","birthdate":"2012-01-01","firstname":"Stefan","lastname":"David","lane":"4","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"3","place":"0","time":"1:46,85","heat":"2"}
mqtt_handler datamapping incoming lane 5 1:1,43 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:1,43
(place)lane: 0
<swim_event> get swimmer for internalheatid 25619 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25412","birthdate":"2012-01-01","firstname":"Antoni","lastname":"Swietlik","lane":"5","entrytime":"00:00:41.27","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"1:1,43","heat":"2"}
<message_mapper> store lane 5: lane 5 1:1,43 0
websocket backend mainchannel {"athleteid":"25412","birthdate":"2012-01-01","firstname":"Antoni","lastname":"Swietlik","lane":"5","entrytime":"00:00:41.27","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"1:1,43","heat":"2"}
lane
websocket backend send {"athleteid":"25412","birthdate":"2012-01-01","firstname":"Antoni","lastname":"Swietlik","lane":"5","entrytime":"00:00:41.27","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"1:1,43","heat":"2"}
mqtt_handler datamapping incoming lane 6 1:19,43 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:19,43
(place)lane: 0
<swim_event> get swimmer for internalheatid 25619 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"6","entrytime":"00:00:46.84","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"1:19,43","heat":"2"}
<message_mapper> store lane 6: lane 6 1:19,43 0
websocket backend mainchannel {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"6","entrytime":"00:00:46.84","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"1:19,43","heat":"2"}
lane
websocket backend send {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"6","entrytime":"00:00:46.84","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"0","time":"1:19,43","heat":"2"}
mqtt_handler datamapping incoming lane 1 0:57,1 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:57,1
(place)lane: 1
<swim_event> get swimmer for internalheatid 25619 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"1","entrytime":"00:00:41.98","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"1","time":"0:57,1","heat":"2"}
<message_mapper> store lane 1: lane 1 0:57,1 1
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"1","entrytime":"00:00:41.98","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"1","time":"0:57,1","heat":"2"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"1","entrytime":"00:00:41.98","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"1","time":"0:57,1","heat":"2"}
mqtt_handler datamapping incoming lane 2 1:8,90 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:8,90
(place)lane: 2
<swim_event> get swimmer for internalheatid 25619 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25398","birthdate":"2012-01-01","firstname":"Leon","lastname":"Rauscher","lane":"2","entrytime":"00:00:37.15","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"2","time":"1:8,90","heat":"2"}
<message_mapper> store lane 2: lane 2 1:8,90 2
websocket backend mainchannel {"athleteid":"25398","birthdate":"2012-01-01","firstname":"Leon","lastname":"Rauscher","lane":"2","entrytime":"00:00:37.15","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"2","time":"1:8,90","heat":"2"}
lane
websocket backend send {"athleteid":"25398","birthdate":"2012-01-01","firstname":"Leon","lastname":"Rauscher","lane":"2","entrytime":"00:00:37.15","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"2","time":"1:8,90","heat":"2"}
mqtt_handler datamapping incoming lane 3 0:55,20 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:55,20
(place)lane: 3
<swim_event> get swimmer for internalheatid 25619 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25152","birthdate":"2012-01-01","firstname":"Eymen","lastname":"Hayirli","lane":"3","entrytime":"00:00:30.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"3","place":"3","time":"0:55,20","heat":"2"}
<message_mapper> store lane 3: lane 3 0:55,20 3
websocket backend mainchannel {"athleteid":"25152","birthdate":"2012-01-01","firstname":"Eymen","lastname":"Hayirli","lane":"3","entrytime":"00:00:30.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"3","place":"3","time":"0:55,20","heat":"2"}
lane
websocket backend send {"athleteid":"25152","birthdate":"2012-01-01","firstname":"Eymen","lastname":"Hayirli","lane":"3","entrytime":"00:00:30.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"3","place":"3","time":"0:55,20","heat":"2"}
mqtt_handler datamapping incoming lane 4 1:30,42 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:30,42
(place)lane: 4
<swim_event> get swimmer for internalheatid 25619 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25102","birthdate":"2012-01-01","firstname":"Stefan","lastname":"David","lane":"4","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"3","place":"4","time":"1:30,42","heat":"2"}
<message_mapper> store lane 4: lane 4 1:30,42 4
websocket backend mainchannel {"athleteid":"25102","birthdate":"2012-01-01","firstname":"Stefan","lastname":"David","lane":"4","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"3","place":"4","time":"1:30,42","heat":"2"}
lane
websocket backend send {"athleteid":"25102","birthdate":"2012-01-01","firstname":"Stefan","lastname":"David","lane":"4","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"3","place":"4","time":"1:30,42","heat":"2"}
mqtt_handler datamapping incoming lane 5 0:56,74 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:56,74
(place)lane: 5
<swim_event> get swimmer for internalheatid 25619 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25412","birthdate":"2012-01-01","firstname":"Antoni","lastname":"Swietlik","lane":"5","entrytime":"00:00:41.27","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"5","time":"0:56,74","heat":"2"}
<message_mapper> store lane 5: lane 5 0:56,74 5
websocket backend mainchannel {"athleteid":"25412","birthdate":"2012-01-01","firstname":"Antoni","lastname":"Swietlik","lane":"5","entrytime":"00:00:41.27","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"5","time":"0:56,74","heat":"2"}
lane
websocket backend send {"athleteid":"25412","birthdate":"2012-01-01","firstname":"Antoni","lastname":"Swietlik","lane":"5","entrytime":"00:00:41.27","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"5","time":"0:56,74","heat":"2"}
mqtt_handler datamapping incoming lane 6 1:36,97 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:36,97
(place)lane: 6
<swim_event> get swimmer for internalheatid 25619 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"6","entrytime":"00:00:46.84","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"6","time":"1:36,97","heat":"2"}
<message_mapper> store lane 6: lane 6 1:36,97 6
websocket backend mainchannel {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"6","entrytime":"00:00:46.84","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"6","time":"1:36,97","heat":"2"}
lane
websocket backend send {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"6","entrytime":"00:00:46.84","name":"SC Regensburg","code":"6524","type":"lane","event":"3","place":"6","time":"1:36,97","heat":"2"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584285264"}
websocket backend mainchannel {"type":"stop","time":"1584285264"}
stop
websocket backend send {"type":"stop","time":"1584285264"}
mqtt_handler datamapping incoming header 3 3
<message_mapper> beginn parse
<incoming> Type: header
Event: -3-
HEAT: 3
<swim_events> getInternalHeatId 3 3
<swim_event> number heats 
Event: -3-
<swim_event> search for number 3
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"3","heat":"3","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 2
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 3
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 4
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 5
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"3","heat":"3","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"3","heat":"3","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"3","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"1","event":"3","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"type":"lane","lane":"2","event":"3","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"2","event":"3","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"type":"lane","lane":"3","event":"3","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"3","event":"3","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"type":"lane","lane":"4","event":"3","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"4","event":"3","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"type":"lane","lane":"5","event":"3","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"5","event":"3","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"3","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"6","event":"3","place":"undefined","time":"undefined","heat":"3"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584285270"}
websocket backend mainchannel {"type":"start","time":"1584285270"}
start
websocket backend send {"type":"start","time":"1584285270"}
mqtt_handler datamapping incoming lane 1 1:10,30 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:10,30
(place)lane: 0
<swim_event> get swimmer for internalheatid  no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"3","place":"0","time":"1:10,30","heat":"3"}
<message_mapper> store lane 1: lane 1 1:10,30 0
websocket backend mainchannel {"type":"lane","lane":"1","event":"3","place":"0","time":"1:10,30","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"1","event":"3","place":"0","time":"1:10,30","heat":"3"}
mqtt_handler datamapping incoming lane 2 1:11,6 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:11,6
(place)lane: 0
<swim_event> get swimmer for internalheatid  no relay lane 2
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"2","event":"3","place":"0","time":"1:11,6","heat":"3"}
<message_mapper> store lane 2: lane 2 1:11,6 0
websocket backend mainchannel {"type":"lane","lane":"2","event":"3","place":"0","time":"1:11,6","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"2","event":"3","place":"0","time":"1:11,6","heat":"3"}
mqtt_handler datamapping incoming lane 3 0:34,85 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:34,85
(place)lane: 0
<swim_event> get swimmer for internalheatid  no relay lane 3
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"3","event":"3","place":"0","time":"0:34,85","heat":"3"}
<message_mapper> store lane 3: lane 3 0:34,85 0
websocket backend mainchannel {"type":"lane","lane":"3","event":"3","place":"0","time":"0:34,85","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"3","event":"3","place":"0","time":"0:34,85","heat":"3"}
mqtt_handler datamapping incoming lane 4 1:56,1 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:56,1
(place)lane: 0
<swim_event> get swimmer for internalheatid  no relay lane 4
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"4","event":"3","place":"0","time":"1:56,1","heat":"3"}
<message_mapper> store lane 4: lane 4 1:56,1 0
websocket backend mainchannel {"type":"lane","lane":"4","event":"3","place":"0","time":"1:56,1","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"4","event":"3","place":"0","time":"1:56,1","heat":"3"}
mqtt_handler datamapping incoming lane 5 0:20,35 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:20,35
(place)lane: 0
<swim_event> get swimmer for internalheatid  no relay lane 5
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"5","event":"3","place":"0","time":"0:20,35","heat":"3"}
<message_mapper> store lane 5: lane 5 0:20,35 0
websocket backend mainchannel {"type":"lane","lane":"5","event":"3","place":"0","time":"0:20,35","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"5","event":"3","place":"0","time":"0:20,35","heat":"3"}
mqtt_handler datamapping incoming lane 6 1:51,97 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:51,97
(place)lane: 0
<swim_event> get swimmer for internalheatid  no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"3","place":"0","time":"1:51,97","heat":"3"}
<message_mapper> store lane 6: lane 6 1:51,97 0
websocket backend mainchannel {"type":"lane","lane":"6","event":"3","place":"0","time":"1:51,97","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"6","event":"3","place":"0","time":"1:51,97","heat":"3"}
mqtt_handler datamapping incoming lane 1 1:51,36 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:51,36
(place)lane: 1
<swim_event> get swimmer for internalheatid  no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"3","place":"1","time":"1:51,36","heat":"3"}
<message_mapper> store lane 1: lane 1 1:51,36 1
websocket backend mainchannel {"type":"lane","lane":"1","event":"3","place":"1","time":"1:51,36","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"1","event":"3","place":"1","time":"1:51,36","heat":"3"}
mqtt_handler datamapping incoming lane 2 1:39,52 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:39,52
(place)lane: 2
<swim_event> get swimmer for internalheatid  no relay lane 2
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"2","event":"3","place":"2","time":"1:39,52","heat":"3"}
<message_mapper> store lane 2: lane 2 1:39,52 2
websocket backend mainchannel {"type":"lane","lane":"2","event":"3","place":"2","time":"1:39,52","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"2","event":"3","place":"2","time":"1:39,52","heat":"3"}
mqtt_handler datamapping incoming lane 3 1:27,90 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:27,90
(place)lane: 3
<swim_event> get swimmer for internalheatid  no relay lane 3
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"3","event":"3","place":"3","time":"1:27,90","heat":"3"}
<message_mapper> store lane 3: lane 3 1:27,90 3
websocket backend mainchannel {"type":"lane","lane":"3","event":"3","place":"3","time":"1:27,90","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"3","event":"3","place":"3","time":"1:27,90","heat":"3"}
mqtt_handler datamapping incoming lane 4 1:30,54 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:30,54
(place)lane: 4
<swim_event> get swimmer for internalheatid  no relay lane 4
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"4","event":"3","place":"4","time":"1:30,54","heat":"3"}
<message_mapper> store lane 4: lane 4 1:30,54 4
websocket backend mainchannel {"type":"lane","lane":"4","event":"3","place":"4","time":"1:30,54","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"4","event":"3","place":"4","time":"1:30,54","heat":"3"}
mqtt_handler datamapping incoming lane 5 0:17,14 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:17,14
(place)lane: 5
<swim_event> get swimmer for internalheatid  no relay lane 5
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"5","event":"3","place":"5","time":"0:17,14","heat":"3"}
<message_mapper> store lane 5: lane 5 0:17,14 5
websocket backend mainchannel {"type":"lane","lane":"5","event":"3","place":"5","time":"0:17,14","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"5","event":"3","place":"5","time":"0:17,14","heat":"3"}
mqtt_handler datamapping incoming lane 6 1:59,75 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:59,75
(place)lane: 6
<swim_event> get swimmer for internalheatid  no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"3","place":"6","time":"1:59,75","heat":"3"}
<message_mapper> store lane 6: lane 6 1:59,75 6
websocket backend mainchannel {"type":"lane","lane":"6","event":"3","place":"6","time":"1:59,75","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"6","event":"3","place":"6","time":"1:59,75","heat":"3"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584285282"}
websocket backend mainchannel {"type":"stop","time":"1584285282"}
stop
websocket backend send {"type":"stop","time":"1584285282"}
mqtt_handler datamapping incoming header 3 4
<message_mapper> beginn parse
<incoming> Type: header
Event: -3-
HEAT: 4
<swim_events> getInternalHeatId 3 4
<swim_event> number heats 
Event: -3-
<swim_event> search for number 3
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"3","heat":"4","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 2
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 3
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 4
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 5
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"3","heat":"4","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"3","heat":"4","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"3","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"1","event":"3","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"type":"lane","lane":"2","event":"3","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"2","event":"3","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"type":"lane","lane":"3","event":"3","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"3","event":"3","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"type":"lane","lane":"4","event":"3","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"4","event":"3","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"type":"lane","lane":"5","event":"3","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"5","event":"3","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"3","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"6","event":"3","place":"undefined","time":"undefined","heat":"4"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584285288"}
websocket backend mainchannel {"type":"start","time":"1584285288"}
start
websocket backend send {"type":"start","time":"1584285288"}
mqtt_handler datamapping incoming lane 1 1:52,44 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:52,44
(place)lane: 0
<swim_event> get swimmer for internalheatid  no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"3","place":"0","time":"1:52,44","heat":"4"}
<message_mapper> store lane 1: lane 1 1:52,44 0
websocket backend mainchannel {"type":"lane","lane":"1","event":"3","place":"0","time":"1:52,44","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"1","event":"3","place":"0","time":"1:52,44","heat":"4"}
mqtt_handler datamapping incoming lane 2 0:38,63 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:38,63
(place)lane: 0
<swim_event> get swimmer for internalheatid  no relay lane 2
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"2","event":"3","place":"0","time":"0:38,63","heat":"4"}
<message_mapper> store lane 2: lane 2 0:38,63 0
websocket backend mainchannel {"type":"lane","lane":"2","event":"3","place":"0","time":"0:38,63","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"2","event":"3","place":"0","time":"0:38,63","heat":"4"}
mqtt_handler datamapping incoming lane 3 1:43,78 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:43,78
(place)lane: 0
<swim_event> get swimmer for internalheatid  no relay lane 3
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"3","event":"3","place":"0","time":"1:43,78","heat":"4"}
<message_mapper> store lane 3: lane 3 1:43,78 0
websocket backend mainchannel {"type":"lane","lane":"3","event":"3","place":"0","time":"1:43,78","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"3","event":"3","place":"0","time":"1:43,78","heat":"4"}
mqtt_handler datamapping incoming lane 4 1:27,64 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:27,64
(place)lane: 0
<swim_event> get swimmer for internalheatid  no relay lane 4
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"4","event":"3","place":"0","time":"1:27,64","heat":"4"}
<message_mapper> store lane 4: lane 4 1:27,64 0
websocket backend mainchannel {"type":"lane","lane":"4","event":"3","place":"0","time":"1:27,64","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"4","event":"3","place":"0","time":"1:27,64","heat":"4"}
mqtt_handler datamapping incoming lane 5 0:27,69 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:27,69
(place)lane: 0
<swim_event> get swimmer for internalheatid  no relay lane 5
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"5","event":"3","place":"0","time":"0:27,69","heat":"4"}
<message_mapper> store lane 5: lane 5 0:27,69 0
websocket backend mainchannel {"type":"lane","lane":"5","event":"3","place":"0","time":"0:27,69","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"5","event":"3","place":"0","time":"0:27,69","heat":"4"}
mqtt_handler datamapping incoming lane 6 1:38,38 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:38,38
(place)lane: 0
<swim_event> get swimmer for internalheatid  no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"3","place":"0","time":"1:38,38","heat":"4"}
<message_mapper> store lane 6: lane 6 1:38,38 0
websocket backend mainchannel {"type":"lane","lane":"6","event":"3","place":"0","time":"1:38,38","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"6","event":"3","place":"0","time":"1:38,38","heat":"4"}
mqtt_handler datamapping incoming lane 1 1:22,50 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:22,50
(place)lane: 1
<swim_event> get swimmer for internalheatid  no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"3","place":"1","time":"1:22,50","heat":"4"}
<message_mapper> store lane 1: lane 1 1:22,50 1
websocket backend mainchannel {"type":"lane","lane":"1","event":"3","place":"1","time":"1:22,50","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"1","event":"3","place":"1","time":"1:22,50","heat":"4"}
mqtt_handler datamapping incoming lane 2 1:27,69 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:27,69
(place)lane: 2
<swim_event> get swimmer for internalheatid  no relay lane 2
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"2","event":"3","place":"2","time":"1:27,69","heat":"4"}
<message_mapper> store lane 2: lane 2 1:27,69 2
websocket backend mainchannel {"type":"lane","lane":"2","event":"3","place":"2","time":"1:27,69","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"2","event":"3","place":"2","time":"1:27,69","heat":"4"}
mqtt_handler datamapping incoming lane 3 1:9,99 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:9,99
(place)lane: 3
<swim_event> get swimmer for internalheatid  no relay lane 3
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"3","event":"3","place":"3","time":"1:9,99","heat":"4"}
<message_mapper> store lane 3: lane 3 1:9,99 3
websocket backend mainchannel {"type":"lane","lane":"3","event":"3","place":"3","time":"1:9,99","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"3","event":"3","place":"3","time":"1:9,99","heat":"4"}
mqtt_handler datamapping incoming lane 4 0:48,37 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:48,37
(place)lane: 4
<swim_event> get swimmer for internalheatid  no relay lane 4
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"4","event":"3","place":"4","time":"0:48,37","heat":"4"}
<message_mapper> store lane 4: lane 4 0:48,37 4
websocket backend mainchannel {"type":"lane","lane":"4","event":"3","place":"4","time":"0:48,37","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"4","event":"3","place":"4","time":"0:48,37","heat":"4"}
mqtt_handler datamapping incoming lane 5 0:9,42 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:9,42
(place)lane: 5
<swim_event> get swimmer for internalheatid  no relay lane 5
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"5","event":"3","place":"5","time":"0:9,42","heat":"4"}
<message_mapper> store lane 5: lane 5 0:9,42 5
websocket backend mainchannel {"type":"lane","lane":"5","event":"3","place":"5","time":"0:9,42","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"5","event":"3","place":"5","time":"0:9,42","heat":"4"}
mqtt_handler datamapping incoming lane 6 0:28,69 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:28,69
(place)lane: 6
<swim_event> get swimmer for internalheatid  no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"3","place":"6","time":"0:28,69","heat":"4"}
<message_mapper> store lane 6: lane 6 0:28,69 6
websocket backend mainchannel {"type":"lane","lane":"6","event":"3","place":"6","time":"0:28,69","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"6","event":"3","place":"6","time":"0:28,69","heat":"4"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584285299"}
websocket backend mainchannel {"type":"stop","time":"1584285299"}
stop
websocket backend send {"type":"stop","time":"1584285299"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584285302"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584285302"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584285302"}
mqtt_handler datamapping incoming header 4 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -4-
HEAT: 1
<swim_events> getInternalHeatId 4 1
<swim_event> number heats 25620
Event: -4-
<swim_event> search for number 4
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"4","heat":"1","gender":"F","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25620 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25620 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25620 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25620 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25620 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25620 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"4","heat":"1","gender":"F","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
header
----------------- reset clock
websocket backend send {"type":"header","relaycount":"1","event":"4","heat":"1","gender":"F","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25427","birthdate":"2013-01-01","firstname":"Amilia","lastname":"Winkler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25427","birthdate":"2013-01-01","firstname":"Amilia","lastname":"Winkler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"3","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"3","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24095","birthdate":"2012-01-01","firstname":"Lena","lastname":"Knerer","lane":"4","entrytime":"NT","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24095","birthdate":"2012-01-01","firstname":"Lena","lastname":"Knerer","lane":"4","entrytime":"NT","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"5","entrytime":"NT","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"5","entrytime":"NT","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"4","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"4","place":"undefined","time":"undefined","heat":"1"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584285310"}
websocket backend mainchannel {"type":"start","time":"1584285310"}
start
websocket backend send {"type":"start","time":"1584285310"}
mqtt_handler datamapping incoming lane 1 1:30,87 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:30,87
(place)lane: 0
<swim_event> get swimmer for internalheatid 25620 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25427","birthdate":"2013-01-01","firstname":"Amilia","lastname":"Winkler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"0","time":"1:30,87","heat":"1"}
<message_mapper> store lane 1: lane 1 1:30,87 0
websocket backend mainchannel {"athleteid":"25427","birthdate":"2013-01-01","firstname":"Amilia","lastname":"Winkler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"0","time":"1:30,87","heat":"1"}
lane
websocket backend send {"athleteid":"25427","birthdate":"2013-01-01","firstname":"Amilia","lastname":"Winkler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"0","time":"1:30,87","heat":"1"}
mqtt_handler datamapping incoming lane 2 1:32,97 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:32,97
(place)lane: 0
<swim_event> get swimmer for internalheatid 25620 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"0","time":"1:32,97","heat":"1"}
<message_mapper> store lane 2: lane 2 1:32,97 0
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"0","time":"1:32,97","heat":"1"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"0","time":"1:32,97","heat":"1"}
mqtt_handler datamapping incoming lane 3 1:24,53 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:24,53
(place)lane: 0
<swim_event> get swimmer for internalheatid 25620 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"3","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"0","time":"1:24,53","heat":"1"}
<message_mapper> store lane 3: lane 3 1:24,53 0
websocket backend mainchannel {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"3","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"0","time":"1:24,53","heat":"1"}
lane
websocket backend send {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"3","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"0","time":"1:24,53","heat":"1"}
mqtt_handler datamapping incoming lane 4 1:46,0 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:46,0
(place)lane: 0
<swim_event> get swimmer for internalheatid 25620 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24095","birthdate":"2012-01-01","firstname":"Lena","lastname":"Knerer","lane":"4","entrytime":"NT","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"4","place":"0","time":"1:46,0","heat":"1"}
<message_mapper> store lane 4: lane 4 1:46,0 0
websocket backend mainchannel {"athleteid":"24095","birthdate":"2012-01-01","firstname":"Lena","lastname":"Knerer","lane":"4","entrytime":"NT","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"4","place":"0","time":"1:46,0","heat":"1"}
lane
websocket backend send {"athleteid":"24095","birthdate":"2012-01-01","firstname":"Lena","lastname":"Knerer","lane":"4","entrytime":"NT","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"4","place":"0","time":"1:46,0","heat":"1"}
mqtt_handler datamapping incoming lane 5 1:54,0 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:54,0
(place)lane: 0
<swim_event> get swimmer for internalheatid 25620 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"5","entrytime":"NT","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"4","place":"0","time":"1:54,0","heat":"1"}
<message_mapper> store lane 5: lane 5 1:54,0 0
websocket backend mainchannel {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"5","entrytime":"NT","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"4","place":"0","time":"1:54,0","heat":"1"}
lane
websocket backend send {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"5","entrytime":"NT","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"4","place":"0","time":"1:54,0","heat":"1"}
mqtt_handler datamapping incoming lane 6 1:2,87 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:2,87
(place)lane: 0
<swim_event> get swimmer for internalheatid 25620 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"4","place":"0","time":"1:2,87","heat":"1"}
<message_mapper> store lane 6: lane 6 1:2,87 0
websocket backend mainchannel {"type":"lane","lane":"6","event":"4","place":"0","time":"1:2,87","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"4","place":"0","time":"1:2,87","heat":"1"}
mqtt_handler datamapping incoming lane 1 0:22,28 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:22,28
(place)lane: 1
<swim_event> get swimmer for internalheatid 25620 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25427","birthdate":"2013-01-01","firstname":"Amilia","lastname":"Winkler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"1","time":"0:22,28","heat":"1"}
<message_mapper> store lane 1: lane 1 0:22,28 1
websocket backend mainchannel {"athleteid":"25427","birthdate":"2013-01-01","firstname":"Amilia","lastname":"Winkler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"1","time":"0:22,28","heat":"1"}
lane
websocket backend send {"athleteid":"25427","birthdate":"2013-01-01","firstname":"Amilia","lastname":"Winkler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"1","time":"0:22,28","heat":"1"}
mqtt_handler datamapping incoming lane 2 1:20,24 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:20,24
(place)lane: 2
<swim_event> get swimmer for internalheatid 25620 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"2","time":"1:20,24","heat":"1"}
<message_mapper> store lane 2: lane 2 1:20,24 2
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"2","time":"1:20,24","heat":"1"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"2","time":"1:20,24","heat":"1"}
mqtt_handler datamapping incoming lane 3 1:36,31 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:36,31
(place)lane: 3
<swim_event> get swimmer for internalheatid 25620 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"3","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"3","time":"1:36,31","heat":"1"}
<message_mapper> store lane 3: lane 3 1:36,31 3
websocket backend mainchannel {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"3","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"3","time":"1:36,31","heat":"1"}
lane
websocket backend send {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"3","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"3","time":"1:36,31","heat":"1"}
mqtt_handler datamapping incoming lane 4 1:40,77 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:40,77
(place)lane: 4
<swim_event> get swimmer for internalheatid 25620 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24095","birthdate":"2012-01-01","firstname":"Lena","lastname":"Knerer","lane":"4","entrytime":"NT","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"4","place":"4","time":"1:40,77","heat":"1"}
<message_mapper> store lane 4: lane 4 1:40,77 4
websocket backend mainchannel {"athleteid":"24095","birthdate":"2012-01-01","firstname":"Lena","lastname":"Knerer","lane":"4","entrytime":"NT","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"4","place":"4","time":"1:40,77","heat":"1"}
lane
websocket backend send {"athleteid":"24095","birthdate":"2012-01-01","firstname":"Lena","lastname":"Knerer","lane":"4","entrytime":"NT","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"4","place":"4","time":"1:40,77","heat":"1"}
mqtt_handler datamapping incoming lane 5 0:59,29 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:59,29
(place)lane: 5
<swim_event> get swimmer for internalheatid 25620 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"5","entrytime":"NT","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"4","place":"5","time":"0:59,29","heat":"1"}
<message_mapper> store lane 5: lane 5 0:59,29 5
websocket backend mainchannel {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"5","entrytime":"NT","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"4","place":"5","time":"0:59,29","heat":"1"}
lane
websocket backend send {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"5","entrytime":"NT","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"4","place":"5","time":"0:59,29","heat":"1"}
mqtt_handler datamapping incoming lane 6 0:25,35 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:25,35
(place)lane: 6
<swim_event> get swimmer for internalheatid 25620 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"4","place":"6","time":"0:25,35","heat":"1"}
<message_mapper> store lane 6: lane 6 0:25,35 6
websocket backend mainchannel {"type":"lane","lane":"6","event":"4","place":"6","time":"0:25,35","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"4","place":"6","time":"0:25,35","heat":"1"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584285322"}
websocket backend mainchannel {"type":"stop","time":"1584285322"}
stop
websocket backend send {"type":"stop","time":"1584285322"}
mqtt_handler datamapping incoming header 4 2
<message_mapper> beginn parse
<incoming> Type: header
Event: -4-
HEAT: 2
<swim_events> getInternalHeatId 4 2
<swim_event> number heats 25621
Event: -4-
<swim_event> search for number 4
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"4","heat":"2","gender":"F","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25621 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25621 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25621 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25621 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25621 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25621 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"4","heat":"2","gender":"F","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"4","heat":"2","gender":"F","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25382","birthdate":"2012-01-01","firstname":"Sophia","lastname":"LÃ¶w","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25382","birthdate":"2012-01-01","firstname":"Sophia","lastname":"LÃ¶w","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25408","birthdate":"2013-01-01","firstname":"Johanna","lastname":"Spitzner","lane":"2","entrytime":"00:00:45.29","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25408","birthdate":"2013-01-01","firstname":"Johanna","lastname":"Spitzner","lane":"2","entrytime":"00:00:45.29","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24432","birthdate":"2012-01-01","firstname":"Linda","lastname":"Schellenberger","lane":"3","entrytime":"00:00:32.00","name":"SG Bamberg","code":"5085","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24432","birthdate":"2012-01-01","firstname":"Linda","lastname":"Schellenberger","lane":"3","entrytime":"00:00:32.00","name":"SG Bamberg","code":"5085","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"4","entrytime":"00:00:44.00","name":"SG Bamberg","code":"5085","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"4","entrytime":"00:00:44.00","name":"SG Bamberg","code":"5085","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24721","birthdate":"2012-01-01","firstname":"Lia Sophie","lastname":"Fuchs","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24721","birthdate":"2012-01-01","firstname":"Lia Sophie","lastname":"Fuchs","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25368","birthdate":"2012-01-01","firstname":"Emilie","lastname":"Gierl","lane":"6","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25368","birthdate":"2012-01-01","firstname":"Emilie","lastname":"Gierl","lane":"6","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"undefined","time":"undefined","heat":"2"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584285328"}
websocket backend mainchannel {"type":"start","time":"1584285328"}
start
websocket backend send {"type":"start","time":"1584285328"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
mqtt_handler datamapping incoming lane 1 0:40,47 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:40,47
(place)lane: 0
<swim_event> get swimmer for internalheatid 25621 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25382","birthdate":"2012-01-01","firstname":"Sophia","lastname":"LÃ¶w","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"0","time":"0:40,47","heat":"2"}
<message_mapper> store lane 1: lane 1 0:40,47 0
websocket backend mainchannel {"athleteid":"25382","birthdate":"2012-01-01","firstname":"Sophia","lastname":"LÃ¶w","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"0","time":"0:40,47","heat":"2"}
lane
websocket backend send {"athleteid":"25382","birthdate":"2012-01-01","firstname":"Sophia","lastname":"LÃ¶w","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"0","time":"0:40,47","heat":"2"}
mqtt_handler datamapping incoming lane 2 0:8,59 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:8,59
(place)lane: 0
<swim_event> get swimmer for internalheatid 25621 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25408","birthdate":"2013-01-01","firstname":"Johanna","lastname":"Spitzner","lane":"2","entrytime":"00:00:45.29","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"0","time":"0:8,59","heat":"2"}
<message_mapper> store lane 2: lane 2 0:8,59 0
websocket backend mainchannel {"athleteid":"25408","birthdate":"2013-01-01","firstname":"Johanna","lastname":"Spitzner","lane":"2","entrytime":"00:00:45.29","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"0","time":"0:8,59","heat":"2"}
lane
websocket backend send {"athleteid":"25408","birthdate":"2013-01-01","firstname":"Johanna","lastname":"Spitzner","lane":"2","entrytime":"00:00:45.29","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"0","time":"0:8,59","heat":"2"}
mqtt_handler datamapping incoming lane 3 1:16,53 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:16,53
(place)lane: 0
<swim_event> get swimmer for internalheatid 25621 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24432","birthdate":"2012-01-01","firstname":"Linda","lastname":"Schellenberger","lane":"3","entrytime":"00:00:32.00","name":"SG Bamberg","code":"5085","type":"lane","event":"4","place":"0","time":"1:16,53","heat":"2"}
<message_mapper> store lane 3: lane 3 1:16,53 0
websocket backend mainchannel {"athleteid":"24432","birthdate":"2012-01-01","firstname":"Linda","lastname":"Schellenberger","lane":"3","entrytime":"00:00:32.00","name":"SG Bamberg","code":"5085","type":"lane","event":"4","place":"0","time":"1:16,53","heat":"2"}
lane
websocket backend send {"athleteid":"24432","birthdate":"2012-01-01","firstname":"Linda","lastname":"Schellenberger","lane":"3","entrytime":"00:00:32.00","name":"SG Bamberg","code":"5085","type":"lane","event":"4","place":"0","time":"1:16,53","heat":"2"}
mqtt_handler datamapping incoming lane 4 0:44,43 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:44,43
(place)lane: 0
<swim_event> get swimmer for internalheatid 25621 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"4","entrytime":"00:00:44.00","name":"SG Bamberg","code":"5085","type":"lane","event":"4","place":"0","time":"0:44,43","heat":"2"}
<message_mapper> store lane 4: lane 4 0:44,43 0
websocket backend mainchannel {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"4","entrytime":"00:00:44.00","name":"SG Bamberg","code":"5085","type":"lane","event":"4","place":"0","time":"0:44,43","heat":"2"}
lane
websocket backend send {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"4","entrytime":"00:00:44.00","name":"SG Bamberg","code":"5085","type":"lane","event":"4","place":"0","time":"0:44,43","heat":"2"}
mqtt_handler datamapping incoming lane 5 1:57,86 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:57,86
(place)lane: 0
<swim_event> get swimmer for internalheatid 25621 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24721","birthdate":"2012-01-01","firstname":"Lia Sophie","lastname":"Fuchs","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"4","place":"0","time":"1:57,86","heat":"2"}
<message_mapper> store lane 5: lane 5 1:57,86 0
websocket backend mainchannel {"athleteid":"24721","birthdate":"2012-01-01","firstname":"Lia Sophie","lastname":"Fuchs","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"4","place":"0","time":"1:57,86","heat":"2"}
lane
websocket backend send {"athleteid":"24721","birthdate":"2012-01-01","firstname":"Lia Sophie","lastname":"Fuchs","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"4","place":"0","time":"1:57,86","heat":"2"}
mqtt_handler datamapping incoming lane 6 0:17,1 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:17,1
(place)lane: 0
<swim_event> get swimmer for internalheatid 25621 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25368","birthdate":"2012-01-01","firstname":"Emilie","lastname":"Gierl","lane":"6","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"0","time":"0:17,1","heat":"2"}
<message_mapper> store lane 6: lane 6 0:17,1 0
websocket backend mainchannel {"athleteid":"25368","birthdate":"2012-01-01","firstname":"Emilie","lastname":"Gierl","lane":"6","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"0","time":"0:17,1","heat":"2"}
lane
websocket backend send {"athleteid":"25368","birthdate":"2012-01-01","firstname":"Emilie","lastname":"Gierl","lane":"6","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"0","time":"0:17,1","heat":"2"}
mqtt_handler datamapping incoming lane 1 0:34,37 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:34,37
(place)lane: 1
<swim_event> get swimmer for internalheatid 25621 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25382","birthdate":"2012-01-01","firstname":"Sophia","lastname":"LÃ¶w","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"1","time":"0:34,37","heat":"2"}
<message_mapper> store lane 1: lane 1 0:34,37 1
websocket backend mainchannel {"athleteid":"25382","birthdate":"2012-01-01","firstname":"Sophia","lastname":"LÃ¶w","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"1","time":"0:34,37","heat":"2"}
lane
websocket backend send {"athleteid":"25382","birthdate":"2012-01-01","firstname":"Sophia","lastname":"LÃ¶w","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"1","time":"0:34,37","heat":"2"}
mqtt_handler datamapping incoming lane 2 0:4,70 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:4,70
(place)lane: 2
<swim_event> get swimmer for internalheatid 25621 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25408","birthdate":"2013-01-01","firstname":"Johanna","lastname":"Spitzner","lane":"2","entrytime":"00:00:45.29","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"2","time":"0:4,70","heat":"2"}
<message_mapper> store lane 2: lane 2 0:4,70 2
websocket backend mainchannel {"athleteid":"25408","birthdate":"2013-01-01","firstname":"Johanna","lastname":"Spitzner","lane":"2","entrytime":"00:00:45.29","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"2","time":"0:4,70","heat":"2"}
lane
websocket backend send {"athleteid":"25408","birthdate":"2013-01-01","firstname":"Johanna","lastname":"Spitzner","lane":"2","entrytime":"00:00:45.29","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"2","time":"0:4,70","heat":"2"}
mqtt_handler datamapping incoming lane 3 1:59,29 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:59,29
(place)lane: 3
<swim_event> get swimmer for internalheatid 25621 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24432","birthdate":"2012-01-01","firstname":"Linda","lastname":"Schellenberger","lane":"3","entrytime":"00:00:32.00","name":"SG Bamberg","code":"5085","type":"lane","event":"4","place":"3","time":"1:59,29","heat":"2"}
<message_mapper> store lane 3: lane 3 1:59,29 3
websocket backend mainchannel {"athleteid":"24432","birthdate":"2012-01-01","firstname":"Linda","lastname":"Schellenberger","lane":"3","entrytime":"00:00:32.00","name":"SG Bamberg","code":"5085","type":"lane","event":"4","place":"3","time":"1:59,29","heat":"2"}
lane
websocket backend send {"athleteid":"24432","birthdate":"2012-01-01","firstname":"Linda","lastname":"Schellenberger","lane":"3","entrytime":"00:00:32.00","name":"SG Bamberg","code":"5085","type":"lane","event":"4","place":"3","time":"1:59,29","heat":"2"}
mqtt_handler datamapping incoming lane 4 0:57,64 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:57,64
(place)lane: 4
<swim_event> get swimmer for internalheatid 25621 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"4","entrytime":"00:00:44.00","name":"SG Bamberg","code":"5085","type":"lane","event":"4","place":"4","time":"0:57,64","heat":"2"}
<message_mapper> store lane 4: lane 4 0:57,64 4
websocket backend mainchannel {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"4","entrytime":"00:00:44.00","name":"SG Bamberg","code":"5085","type":"lane","event":"4","place":"4","time":"0:57,64","heat":"2"}
lane
websocket backend send {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"4","entrytime":"00:00:44.00","name":"SG Bamberg","code":"5085","type":"lane","event":"4","place":"4","time":"0:57,64","heat":"2"}
mqtt_handler datamapping incoming lane 5 0:1,36 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:1,36
(place)lane: 5
<swim_event> get swimmer for internalheatid 25621 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24721","birthdate":"2012-01-01","firstname":"Lia Sophie","lastname":"Fuchs","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"4","place":"5","time":"0:1,36","heat":"2"}
<message_mapper> store lane 5: lane 5 0:1,36 5
websocket backend mainchannel {"athleteid":"24721","birthdate":"2012-01-01","firstname":"Lia Sophie","lastname":"Fuchs","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"4","place":"5","time":"0:1,36","heat":"2"}
lane
websocket backend send {"athleteid":"24721","birthdate":"2012-01-01","firstname":"Lia Sophie","lastname":"Fuchs","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"4","place":"5","time":"0:1,36","heat":"2"}
mqtt_handler datamapping incoming lane 6 0:50,62 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:50,62
(place)lane: 6
<swim_event> get swimmer for internalheatid 25621 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25368","birthdate":"2012-01-01","firstname":"Emilie","lastname":"Gierl","lane":"6","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"6","time":"0:50,62","heat":"2"}
<message_mapper> store lane 6: lane 6 0:50,62 6
websocket backend mainchannel {"athleteid":"25368","birthdate":"2012-01-01","firstname":"Emilie","lastname":"Gierl","lane":"6","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"6","time":"0:50,62","heat":"2"}
lane
websocket backend send {"athleteid":"25368","birthdate":"2012-01-01","firstname":"Emilie","lastname":"Gierl","lane":"6","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"4","place":"6","time":"0:50,62","heat":"2"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584285339"}
websocket backend mainchannel {"type":"stop","time":"1584285339"}
stop
websocket backend send {"type":"stop","time":"1584285339"}
mqtt_handler datamapping incoming header 4 3
<message_mapper> beginn parse
<incoming> Type: header
Event: -4-
HEAT: 3
<swim_events> getInternalHeatId 4 3
<swim_event> number heats 
Event: -4-
<swim_event> search for number 4
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"4","heat":"3","gender":"F","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 2
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 3
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 4
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 5
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"4","heat":"3","gender":"F","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"4","heat":"3","gender":"F","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"4","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"1","event":"4","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"type":"lane","lane":"2","event":"4","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"2","event":"4","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"type":"lane","lane":"3","event":"4","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"3","event":"4","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"type":"lane","lane":"4","event":"4","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"4","event":"4","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"type":"lane","lane":"5","event":"4","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"5","event":"4","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"4","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"6","event":"4","place":"undefined","time":"undefined","heat":"3"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584285345"}
websocket backend mainchannel {"type":"start","time":"1584285345"}
start
websocket backend send {"type":"start","time":"1584285345"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
mqtt_handler datamapping incoming lane 1 1:28,31 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:28,31
(place)lane: 0
<swim_event> get swimmer for internalheatid  no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"4","place":"0","time":"1:28,31","heat":"3"}
<message_mapper> store lane 1: lane 1 1:28,31 0
websocket backend mainchannel {"type":"lane","lane":"1","event":"4","place":"0","time":"1:28,31","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"1","event":"4","place":"0","time":"1:28,31","heat":"3"}
mqtt_handler datamapping incoming lane 2 1:34,4 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:34,4
(place)lane: 0
<swim_event> get swimmer for internalheatid  no relay lane 2
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"2","event":"4","place":"0","time":"1:34,4","heat":"3"}
<message_mapper> store lane 2: lane 2 1:34,4 0
websocket backend mainchannel {"type":"lane","lane":"2","event":"4","place":"0","time":"1:34,4","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"2","event":"4","place":"0","time":"1:34,4","heat":"3"}
mqtt_handler datamapping incoming lane 3 1:17,50 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:17,50
(place)lane: 0
<swim_event> get swimmer for internalheatid  no relay lane 3
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"3","event":"4","place":"0","time":"1:17,50","heat":"3"}
<message_mapper> store lane 3: lane 3 1:17,50 0
websocket backend mainchannel {"type":"lane","lane":"3","event":"4","place":"0","time":"1:17,50","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"3","event":"4","place":"0","time":"1:17,50","heat":"3"}
mqtt_handler datamapping incoming lane 4 1:8,24 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:8,24
(place)lane: 0
<swim_event> get swimmer for internalheatid  no relay lane 4
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"4","event":"4","place":"0","time":"1:8,24","heat":"3"}
<message_mapper> store lane 4: lane 4 1:8,24 0
websocket backend mainchannel {"type":"lane","lane":"4","event":"4","place":"0","time":"1:8,24","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"4","event":"4","place":"0","time":"1:8,24","heat":"3"}
mqtt_handler datamapping incoming lane 5 0:50,21 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:50,21
(place)lane: 0
<swim_event> get swimmer for internalheatid  no relay lane 5
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"5","event":"4","place":"0","time":"0:50,21","heat":"3"}
<message_mapper> store lane 5: lane 5 0:50,21 0
websocket backend mainchannel {"type":"lane","lane":"5","event":"4","place":"0","time":"0:50,21","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"5","event":"4","place":"0","time":"0:50,21","heat":"3"}
mqtt_handler datamapping incoming lane 6 0:49,60 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:49,60
(place)lane: 0
<swim_event> get swimmer for internalheatid  no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"4","place":"0","time":"0:49,60","heat":"3"}
<message_mapper> store lane 6: lane 6 0:49,60 0
websocket backend mainchannel {"type":"lane","lane":"6","event":"4","place":"0","time":"0:49,60","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"6","event":"4","place":"0","time":"0:49,60","heat":"3"}
mqtt_handler datamapping incoming lane 1 1:10,96 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:10,96
(place)lane: 1
<swim_event> get swimmer for internalheatid  no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"4","place":"1","time":"1:10,96","heat":"3"}
<message_mapper> store lane 1: lane 1 1:10,96 1
websocket backend mainchannel {"type":"lane","lane":"1","event":"4","place":"1","time":"1:10,96","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"1","event":"4","place":"1","time":"1:10,96","heat":"3"}
mqtt_handler datamapping incoming lane 2 0:2,57 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:2,57
(place)lane: 2
<swim_event> get swimmer for internalheatid  no relay lane 2
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"2","event":"4","place":"2","time":"0:2,57","heat":"3"}
<message_mapper> store lane 2: lane 2 0:2,57 2
websocket backend mainchannel {"type":"lane","lane":"2","event":"4","place":"2","time":"0:2,57","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"2","event":"4","place":"2","time":"0:2,57","heat":"3"}
mqtt_handler datamapping incoming lane 3 1:31,20 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:31,20
(place)lane: 3
<swim_event> get swimmer for internalheatid  no relay lane 3
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"3","event":"4","place":"3","time":"1:31,20","heat":"3"}
<message_mapper> store lane 3: lane 3 1:31,20 3
websocket backend mainchannel {"type":"lane","lane":"3","event":"4","place":"3","time":"1:31,20","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"3","event":"4","place":"3","time":"1:31,20","heat":"3"}
mqtt_handler datamapping incoming lane 4 0:26,0 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:26,0
(place)lane: 4
<swim_event> get swimmer for internalheatid  no relay lane 4
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"4","event":"4","place":"4","time":"0:26,0","heat":"3"}
<message_mapper> store lane 4: lane 4 0:26,0 4
websocket backend mainchannel {"type":"lane","lane":"4","event":"4","place":"4","time":"0:26,0","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"4","event":"4","place":"4","time":"0:26,0","heat":"3"}
mqtt_handler datamapping incoming lane 5 0:36,93 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:36,93
(place)lane: 5
<swim_event> get swimmer for internalheatid  no relay lane 5
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"5","event":"4","place":"5","time":"0:36,93","heat":"3"}
<message_mapper> store lane 5: lane 5 0:36,93 5
websocket backend mainchannel {"type":"lane","lane":"5","event":"4","place":"5","time":"0:36,93","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"5","event":"4","place":"5","time":"0:36,93","heat":"3"}
mqtt_handler datamapping incoming lane 6 0:36,62 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:36,62
(place)lane: 6
<swim_event> get swimmer for internalheatid  no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"4","place":"6","time":"0:36,62","heat":"3"}
<message_mapper> store lane 6: lane 6 0:36,62 6
websocket backend mainchannel {"type":"lane","lane":"6","event":"4","place":"6","time":"0:36,62","heat":"3"}
lane
websocket backend send {"type":"lane","lane":"6","event":"4","place":"6","time":"0:36,62","heat":"3"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584285356"}
websocket backend mainchannel {"type":"stop","time":"1584285356"}
stop
websocket backend send {"type":"stop","time":"1584285356"}
mqtt_handler datamapping incoming header 4 4
<message_mapper> beginn parse
<incoming> Type: header
Event: -4-
HEAT: 4
<swim_events> getInternalHeatId 4 4
<swim_event> number heats 
Event: -4-
<swim_event> search for number 4
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"4","heat":"4","gender":"F","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 2
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 3
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 4
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 5
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"4","heat":"4","gender":"F","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"4","heat":"4","gender":"F","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m RÃ¼ckenbeine ohne Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"4","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"1","event":"4","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"type":"lane","lane":"2","event":"4","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"2","event":"4","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"type":"lane","lane":"3","event":"4","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"3","event":"4","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"type":"lane","lane":"4","event":"4","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"4","event":"4","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"type":"lane","lane":"5","event":"4","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"5","event":"4","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"4","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"6","event":"4","place":"undefined","time":"undefined","heat":"4"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584285363"}
websocket backend mainchannel {"type":"start","time":"1584285363"}
start
websocket backend send {"type":"start","time":"1584285363"}
mqtt_handler datamapping incoming lane 1 1:35,76 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:35,76
(place)lane: 0
<swim_event> get swimmer for internalheatid  no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"4","place":"0","time":"1:35,76","heat":"4"}
<message_mapper> store lane 1: lane 1 1:35,76 0
websocket backend mainchannel {"type":"lane","lane":"1","event":"4","place":"0","time":"1:35,76","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"1","event":"4","place":"0","time":"1:35,76","heat":"4"}
mqtt_handler datamapping incoming lane 2 0:5,50 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:5,50
(place)lane: 0
<swim_event> get swimmer for internalheatid  no relay lane 2
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"2","event":"4","place":"0","time":"0:5,50","heat":"4"}
<message_mapper> store lane 2: lane 2 0:5,50 0
websocket backend mainchannel {"type":"lane","lane":"2","event":"4","place":"0","time":"0:5,50","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"2","event":"4","place":"0","time":"0:5,50","heat":"4"}
mqtt_handler datamapping incoming lane 3 1:10,15 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:10,15
(place)lane: 0
<swim_event> get swimmer for internalheatid  no relay lane 3
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"3","event":"4","place":"0","time":"1:10,15","heat":"4"}
<message_mapper> store lane 3: lane 3 1:10,15 0
websocket backend mainchannel {"type":"lane","lane":"3","event":"4","place":"0","time":"1:10,15","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"3","event":"4","place":"0","time":"1:10,15","heat":"4"}
mqtt_handler datamapping incoming lane 4 1:25,80 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:25,80
(place)lane: 0
<swim_event> get swimmer for internalheatid  no relay lane 4
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"4","event":"4","place":"0","time":"1:25,80","heat":"4"}
<message_mapper> store lane 4: lane 4 1:25,80 0
websocket backend mainchannel {"type":"lane","lane":"4","event":"4","place":"0","time":"1:25,80","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"4","event":"4","place":"0","time":"1:25,80","heat":"4"}
mqtt_handler datamapping incoming lane 5 1:17,4 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:17,4
(place)lane: 0
<swim_event> get swimmer for internalheatid  no relay lane 5
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"5","event":"4","place":"0","time":"1:17,4","heat":"4"}
<message_mapper> store lane 5: lane 5 1:17,4 0
websocket backend mainchannel {"type":"lane","lane":"5","event":"4","place":"0","time":"1:17,4","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"5","event":"4","place":"0","time":"1:17,4","heat":"4"}
mqtt_handler datamapping incoming lane 6 0:41,95 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:41,95
(place)lane: 0
<swim_event> get swimmer for internalheatid  no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"4","place":"0","time":"0:41,95","heat":"4"}
<message_mapper> store lane 6: lane 6 0:41,95 0
websocket backend mainchannel {"type":"lane","lane":"6","event":"4","place":"0","time":"0:41,95","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"6","event":"4","place":"0","time":"0:41,95","heat":"4"}
mqtt_handler datamapping incoming lane 1 1:15,90 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:15,90
(place)lane: 1
<swim_event> get swimmer for internalheatid  no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"4","place":"1","time":"1:15,90","heat":"4"}
<message_mapper> store lane 1: lane 1 1:15,90 1
websocket backend mainchannel {"type":"lane","lane":"1","event":"4","place":"1","time":"1:15,90","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"1","event":"4","place":"1","time":"1:15,90","heat":"4"}
mqtt_handler datamapping incoming lane 2 0:37,66 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:37,66
(place)lane: 2
<swim_event> get swimmer for internalheatid  no relay lane 2
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"2","event":"4","place":"2","time":"0:37,66","heat":"4"}
<message_mapper> store lane 2: lane 2 0:37,66 2
websocket backend mainchannel {"type":"lane","lane":"2","event":"4","place":"2","time":"0:37,66","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"2","event":"4","place":"2","time":"0:37,66","heat":"4"}
mqtt_handler datamapping incoming lane 3 1:0,64 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:0,64
(place)lane: 3
<swim_event> get swimmer for internalheatid  no relay lane 3
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"3","event":"4","place":"3","time":"1:0,64","heat":"4"}
<message_mapper> store lane 3: lane 3 1:0,64 3
websocket backend mainchannel {"type":"lane","lane":"3","event":"4","place":"3","time":"1:0,64","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"3","event":"4","place":"3","time":"1:0,64","heat":"4"}
mqtt_handler datamapping incoming lane 4 0:34,0 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:34,0
(place)lane: 4
<swim_event> get swimmer for internalheatid  no relay lane 4
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"4","event":"4","place":"4","time":"0:34,0","heat":"4"}
<message_mapper> store lane 4: lane 4 0:34,0 4
websocket backend mainchannel {"type":"lane","lane":"4","event":"4","place":"4","time":"0:34,0","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"4","event":"4","place":"4","time":"0:34,0","heat":"4"}
mqtt_handler datamapping incoming lane 5 0:17,43 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:17,43
(place)lane: 5
<swim_event> get swimmer for internalheatid  no relay lane 5
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"5","event":"4","place":"5","time":"0:17,43","heat":"4"}
<message_mapper> store lane 5: lane 5 0:17,43 5
websocket backend mainchannel {"type":"lane","lane":"5","event":"4","place":"5","time":"0:17,43","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"5","event":"4","place":"5","time":"0:17,43","heat":"4"}
mqtt_handler datamapping incoming lane 6 0:4,18 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:4,18
(place)lane: 6
<swim_event> get swimmer for internalheatid  no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"4","place":"6","time":"0:4,18","heat":"4"}
<message_mapper> store lane 6: lane 6 0:4,18 6
websocket backend mainchannel {"type":"lane","lane":"6","event":"4","place":"6","time":"0:4,18","heat":"4"}
lane
websocket backend send {"type":"lane","lane":"6","event":"4","place":"6","time":"0:4,18","heat":"4"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584285374"}
websocket backend mainchannel {"type":"stop","time":"1584285374"}
stop
websocket backend send {"type":"stop","time":"1584285374"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584285377"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584285377"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584285377"}
mqtt_handler datamapping incoming header 5 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -5-
HEAT: 1
<swim_events> getInternalHeatId 5 1
<swim_event> number heats 25622
Event: -5-
<swim_event> search for number 5
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"5","heat":"1","gender":"M","round":"TIM","swimstyle":"FREE","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25622 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25622 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25622 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25622 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25622 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25622 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"5","heat":"1","gender":"M","round":"TIM","swimstyle":"FREE","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
----------------- reset clock
websocket backend send {"type":"header","relaycount":"1","event":"5","heat":"1","gender":"M","round":"TIM","swimstyle":"FREE","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"5","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"5","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"3","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"3","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25398","birthdate":"2012-01-01","firstname":"Leon","lastname":"Rauscher","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25398","birthdate":"2012-01-01","firstname":"Leon","lastname":"Rauscher","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"5","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"5","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"5","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"5","place":"undefined","time":"undefined","heat":"1"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584285385"}
websocket backend mainchannel {"type":"start","time":"1584285385"}
start
websocket backend send {"type":"start","time":"1584285385"}
mqtt_handler datamapping incoming lane 1 0:40,67 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:40,67
(place)lane: 0
<swim_event> get swimmer for internalheatid 25622 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"5","place":"0","time":"0:40,67","heat":"1"}
<message_mapper> store lane 1: lane 1 0:40,67 0
websocket backend mainchannel {"type":"lane","lane":"1","event":"5","place":"0","time":"0:40,67","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"5","place":"0","time":"0:40,67","heat":"1"}
mqtt_handler datamapping incoming lane 2 1:17,73 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:17,73
(place)lane: 0
<swim_event> get swimmer for internalheatid 25622 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"0","time":"1:17,73","heat":"1"}
<message_mapper> store lane 2: lane 2 1:17,73 0
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"0","time":"1:17,73","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"0","time":"1:17,73","heat":"1"}
mqtt_handler datamapping incoming lane 3 0:56,73 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:56,73
(place)lane: 0
<swim_event> get swimmer for internalheatid 25622 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"3","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"0","time":"0:56,73","heat":"1"}
<message_mapper> store lane 3: lane 3 0:56,73 0
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"3","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"0","time":"0:56,73","heat":"1"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"3","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"0","time":"0:56,73","heat":"1"}
mqtt_handler datamapping incoming lane 4 1:18,66 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:18,66
(place)lane: 0
<swim_event> get swimmer for internalheatid 25622 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25398","birthdate":"2012-01-01","firstname":"Leon","lastname":"Rauscher","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"5","place":"0","time":"1:18,66","heat":"1"}
<message_mapper> store lane 4: lane 4 1:18,66 0
websocket backend mainchannel {"athleteid":"25398","birthdate":"2012-01-01","firstname":"Leon","lastname":"Rauscher","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"5","place":"0","time":"1:18,66","heat":"1"}
lane
websocket backend send {"athleteid":"25398","birthdate":"2012-01-01","firstname":"Leon","lastname":"Rauscher","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"5","place":"0","time":"1:18,66","heat":"1"}
mqtt_handler datamapping incoming lane 5 1:0,17 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:0,17
(place)lane: 0
<swim_event> get swimmer for internalheatid 25622 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"5","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"5","place":"0","time":"1:0,17","heat":"1"}
<message_mapper> store lane 5: lane 5 1:0,17 0
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"5","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"5","place":"0","time":"1:0,17","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"5","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"5","place":"0","time":"1:0,17","heat":"1"}
mqtt_handler datamapping incoming lane 6 0:3,54 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:3,54
(place)lane: 0
<swim_event> get swimmer for internalheatid 25622 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"5","place":"0","time":"0:3,54","heat":"1"}
<message_mapper> store lane 6: lane 6 0:3,54 0
websocket backend mainchannel {"type":"lane","lane":"6","event":"5","place":"0","time":"0:3,54","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"5","place":"0","time":"0:3,54","heat":"1"}
mqtt_handler datamapping incoming lane 1 0:58,3 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:58,3
(place)lane: 1
<swim_event> get swimmer for internalheatid 25622 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"5","place":"1","time":"0:58,3","heat":"1"}
<message_mapper> store lane 1: lane 1 0:58,3 1
websocket backend mainchannel {"type":"lane","lane":"1","event":"5","place":"1","time":"0:58,3","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"5","place":"1","time":"0:58,3","heat":"1"}
mqtt_handler datamapping incoming lane 2 1:7,74 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:7,74
(place)lane: 2
<swim_event> get swimmer for internalheatid 25622 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"2","time":"1:7,74","heat":"1"}
<message_mapper> store lane 2: lane 2 1:7,74 2
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"2","time":"1:7,74","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"2","time":"1:7,74","heat":"1"}
mqtt_handler datamapping incoming lane 3 1:39,22 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:39,22
(place)lane: 3
<swim_event> get swimmer for internalheatid 25622 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"3","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"3","time":"1:39,22","heat":"1"}
<message_mapper> store lane 3: lane 3 1:39,22 3
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"3","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"3","time":"1:39,22","heat":"1"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"3","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"3","time":"1:39,22","heat":"1"}
mqtt_handler datamapping incoming lane 4 1:58,35 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:58,35
(place)lane: 4
<swim_event> get swimmer for internalheatid 25622 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25398","birthdate":"2012-01-01","firstname":"Leon","lastname":"Rauscher","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"5","place":"4","time":"1:58,35","heat":"1"}
<message_mapper> store lane 4: lane 4 1:58,35 4
websocket backend mainchannel {"athleteid":"25398","birthdate":"2012-01-01","firstname":"Leon","lastname":"Rauscher","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"5","place":"4","time":"1:58,35","heat":"1"}
lane
websocket backend send {"athleteid":"25398","birthdate":"2012-01-01","firstname":"Leon","lastname":"Rauscher","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"5","place":"4","time":"1:58,35","heat":"1"}
mqtt_handler datamapping incoming lane 5 0:4,68 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:4,68
(place)lane: 5
<swim_event> get swimmer for internalheatid 25622 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"5","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"5","place":"5","time":"0:4,68","heat":"1"}
<message_mapper> store lane 5: lane 5 0:4,68 5
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"5","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"5","place":"5","time":"0:4,68","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"5","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"5","place":"5","time":"0:4,68","heat":"1"}
mqtt_handler datamapping incoming lane 6 0:44,82 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:44,82
(place)lane: 6
<swim_event> get swimmer for internalheatid 25622 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"5","place":"6","time":"0:44,82","heat":"1"}
<message_mapper> store lane 6: lane 6 0:44,82 6
websocket backend mainchannel {"type":"lane","lane":"6","event":"5","place":"6","time":"0:44,82","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"5","place":"6","time":"0:44,82","heat":"1"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584285396"}
websocket backend mainchannel {"type":"stop","time":"1584285396"}
stop
websocket backend send {"type":"stop","time":"1584285396"}
mqtt_handler datamapping incoming header 5 2
<message_mapper> beginn parse
<incoming> Type: header
Event: -5-
HEAT: 2
<swim_events> getInternalHeatId 5 2
<swim_event> number heats 25623
Event: -5-
<swim_event> search for number 5
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"5","heat":"2","gender":"M","round":"TIM","swimstyle":"FREE","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25623 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25623 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25623 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25623 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25623 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25623 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"5","heat":"2","gender":"M","round":"TIM","swimstyle":"FREE","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"5","heat":"2","gender":"M","round":"TIM","swimstyle":"FREE","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"24395","birthdate":"2014-01-01","firstname":"Sebastian","lastname":"JakubaÃŸ","lane":"1","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24395","birthdate":"2014-01-01","firstname":"Sebastian","lastname":"JakubaÃŸ","lane":"1","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"2","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"2","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"3","entrytime":"00:00:35.43","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"3","entrytime":"00:00:35.43","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24918","birthdate":"2012-01-01","firstname":"Mikhael","lastname":"Varazhbitau","lane":"4","entrytime":"00:00:38.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24918","birthdate":"2012-01-01","firstname":"Mikhael","lastname":"Varazhbitau","lane":"4","entrytime":"00:00:38.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"5","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"5","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24399","birthdate":"2012-01-01","firstname":"Antonio","lastname":"La Corte","lane":"6","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24399","birthdate":"2012-01-01","firstname":"Antonio","lastname":"La Corte","lane":"6","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"2"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584285402"}
websocket backend mainchannel {"type":"start","time":"1584285402"}
start
websocket backend send {"type":"start","time":"1584285402"}
mqtt_handler datamapping incoming lane 1 1:39,60 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:39,60
(place)lane: 0
<swim_event> get swimmer for internalheatid 25623 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24395","birthdate":"2014-01-01","firstname":"Sebastian","lastname":"JakubaÃŸ","lane":"1","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"5","place":"0","time":"1:39,60","heat":"2"}
<message_mapper> store lane 1: lane 1 1:39,60 0
websocket backend mainchannel {"athleteid":"24395","birthdate":"2014-01-01","firstname":"Sebastian","lastname":"JakubaÃŸ","lane":"1","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"5","place":"0","time":"1:39,60","heat":"2"}
lane
websocket backend send {"athleteid":"24395","birthdate":"2014-01-01","firstname":"Sebastian","lastname":"JakubaÃŸ","lane":"1","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"5","place":"0","time":"1:39,60","heat":"2"}
mqtt_handler datamapping incoming lane 2 0:6,53 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:6,53
(place)lane: 0
<swim_event> get swimmer for internalheatid 25623 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"2","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"5","place":"0","time":"0:6,53","heat":"2"}
<message_mapper> store lane 2: lane 2 0:6,53 0
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"2","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"5","place":"0","time":"0:6,53","heat":"2"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"2","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"5","place":"0","time":"0:6,53","heat":"2"}
mqtt_handler datamapping incoming lane 3 0:29,6 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:29,6
(place)lane: 0
<swim_event> get swimmer for internalheatid 25623 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"3","entrytime":"00:00:35.43","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"0","time":"0:29,6","heat":"2"}
<message_mapper> store lane 3: lane 3 0:29,6 0
websocket backend mainchannel {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"3","entrytime":"00:00:35.43","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"0","time":"0:29,6","heat":"2"}
lane
websocket backend send {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"3","entrytime":"00:00:35.43","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"0","time":"0:29,6","heat":"2"}
mqtt_handler datamapping incoming lane 4 0:3,97 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:3,97
(place)lane: 0
<swim_event> get swimmer for internalheatid 25623 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24918","birthdate":"2012-01-01","firstname":"Mikhael","lastname":"Varazhbitau","lane":"4","entrytime":"00:00:38.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"5","place":"0","time":"0:3,97","heat":"2"}
<message_mapper> store lane 4: lane 4 0:3,97 0
websocket backend mainchannel {"athleteid":"24918","birthdate":"2012-01-01","firstname":"Mikhael","lastname":"Varazhbitau","lane":"4","entrytime":"00:00:38.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"5","place":"0","time":"0:3,97","heat":"2"}
lane
websocket backend send {"athleteid":"24918","birthdate":"2012-01-01","firstname":"Mikhael","lastname":"Varazhbitau","lane":"4","entrytime":"00:00:38.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"5","place":"0","time":"0:3,97","heat":"2"}
mqtt_handler datamapping incoming lane 5 0:2,44 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:2,44
(place)lane: 0
<swim_event> get swimmer for internalheatid 25623 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"5","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"5","place":"0","time":"0:2,44","heat":"2"}
<message_mapper> store lane 5: lane 5 0:2,44 0
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"5","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"5","place":"0","time":"0:2,44","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"5","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"5","place":"0","time":"0:2,44","heat":"2"}
mqtt_handler datamapping incoming lane 6 0:42,34 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:42,34
(place)lane: 0
<swim_event> get swimmer for internalheatid 25623 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24399","birthdate":"2012-01-01","firstname":"Antonio","lastname":"La Corte","lane":"6","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"5","place":"0","time":"0:42,34","heat":"2"}
<message_mapper> store lane 6: lane 6 0:42,34 0
websocket backend mainchannel {"athleteid":"24399","birthdate":"2012-01-01","firstname":"Antonio","lastname":"La Corte","lane":"6","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"5","place":"0","time":"0:42,34","heat":"2"}
lane
websocket backend send {"athleteid":"24399","birthdate":"2012-01-01","firstname":"Antonio","lastname":"La Corte","lane":"6","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"5","place":"0","time":"0:42,34","heat":"2"}
mqtt_handler datamapping incoming lane 1 1:54,86 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:54,86
(place)lane: 1
<swim_event> get swimmer for internalheatid 25623 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24395","birthdate":"2014-01-01","firstname":"Sebastian","lastname":"JakubaÃŸ","lane":"1","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"5","place":"1","time":"1:54,86","heat":"2"}
<message_mapper> store lane 1: lane 1 1:54,86 1
websocket backend mainchannel {"athleteid":"24395","birthdate":"2014-01-01","firstname":"Sebastian","lastname":"JakubaÃŸ","lane":"1","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"5","place":"1","time":"1:54,86","heat":"2"}
lane
websocket backend send {"athleteid":"24395","birthdate":"2014-01-01","firstname":"Sebastian","lastname":"JakubaÃŸ","lane":"1","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"5","place":"1","time":"1:54,86","heat":"2"}
mqtt_handler datamapping incoming lane 2 0:11,69 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:11,69
(place)lane: 2
<swim_event> get swimmer for internalheatid 25623 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"2","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"5","place":"2","time":"0:11,69","heat":"2"}
<message_mapper> store lane 2: lane 2 0:11,69 2
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"2","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"5","place":"2","time":"0:11,69","heat":"2"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"2","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"5","place":"2","time":"0:11,69","heat":"2"}
mqtt_handler datamapping incoming lane 3 0:34,66 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:34,66
(place)lane: 3
<swim_event> get swimmer for internalheatid 25623 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"3","entrytime":"00:00:35.43","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"3","time":"0:34,66","heat":"2"}
<message_mapper> store lane 3: lane 3 0:34,66 3
websocket backend mainchannel {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"3","entrytime":"00:00:35.43","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"3","time":"0:34,66","heat":"2"}
lane
websocket backend send {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"3","entrytime":"00:00:35.43","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"3","time":"0:34,66","heat":"2"}
mqtt_handler datamapping incoming lane 4 0:55,90 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:55,90
(place)lane: 4
<swim_event> get swimmer for internalheatid 25623 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24918","birthdate":"2012-01-01","firstname":"Mikhael","lastname":"Varazhbitau","lane":"4","entrytime":"00:00:38.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"5","place":"4","time":"0:55,90","heat":"2"}
<message_mapper> store lane 4: lane 4 0:55,90 4
websocket backend mainchannel {"athleteid":"24918","birthdate":"2012-01-01","firstname":"Mikhael","lastname":"Varazhbitau","lane":"4","entrytime":"00:00:38.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"5","place":"4","time":"0:55,90","heat":"2"}
lane
websocket backend send {"athleteid":"24918","birthdate":"2012-01-01","firstname":"Mikhael","lastname":"Varazhbitau","lane":"4","entrytime":"00:00:38.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"5","place":"4","time":"0:55,90","heat":"2"}
mqtt_handler datamapping incoming lane 5 1:9,29 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:9,29
(place)lane: 5
<swim_event> get swimmer for internalheatid 25623 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"5","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"5","place":"5","time":"1:9,29","heat":"2"}
<message_mapper> store lane 5: lane 5 1:9,29 5
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"5","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"5","place":"5","time":"1:9,29","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"5","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"5","place":"5","time":"1:9,29","heat":"2"}
mqtt_handler datamapping incoming lane 6 1:15,78 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:15,78
(place)lane: 6
<swim_event> get swimmer for internalheatid 25623 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24399","birthdate":"2012-01-01","firstname":"Antonio","lastname":"La Corte","lane":"6","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"5","place":"6","time":"1:15,78","heat":"2"}
<message_mapper> store lane 6: lane 6 1:15,78 6
websocket backend mainchannel {"athleteid":"24399","birthdate":"2012-01-01","firstname":"Antonio","lastname":"La Corte","lane":"6","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"5","place":"6","time":"1:15,78","heat":"2"}
lane
websocket backend send {"athleteid":"24399","birthdate":"2012-01-01","firstname":"Antonio","lastname":"La Corte","lane":"6","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"5","place":"6","time":"1:15,78","heat":"2"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584285414"}
websocket backend mainchannel {"type":"stop","time":"1584285414"}
stop
websocket backend send {"type":"stop","time":"1584285414"}
mqtt_handler datamapping incoming header 5 3
<message_mapper> beginn parse
<incoming> Type: header
Event: -5-
HEAT: 3
<swim_events> getInternalHeatId 5 3
<swim_event> number heats 25624
Event: -5-
<swim_event> search for number 5
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"5","heat":"3","gender":"M","round":"TIM","swimstyle":"FREE","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25624 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25624 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25624 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25624 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25624 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25624 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"5","heat":"3","gender":"M","round":"TIM","swimstyle":"FREE","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"5","heat":"3","gender":"M","round":"TIM","swimstyle":"FREE","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"1","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"1","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"2","entrytime":"00:00:33.54","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"2","entrytime":"00:00:33.54","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"3","entrytime":"00:00:29.52","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"3","entrytime":"00:00:29.52","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"4","entrytime":"00:00:31.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"4","entrytime":"00:00:31.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.82","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.82","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"6","entrytime":"00:00:35.41","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"6","entrytime":"00:00:35.41","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"3"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584285420"}
websocket backend mainchannel {"type":"start","time":"1584285420"}
start
websocket backend send {"type":"start","time":"1584285420"}
mqtt_handler datamapping incoming lane 1 0:57,25 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:57,25
(place)lane: 0
<swim_event> get swimmer for internalheatid 25624 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"1","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"5","place":"0","time":"0:57,25","heat":"3"}
<message_mapper> store lane 1: lane 1 0:57,25 0
websocket backend mainchannel {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"1","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"5","place":"0","time":"0:57,25","heat":"3"}
lane
websocket backend send {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"1","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"5","place":"0","time":"0:57,25","heat":"3"}
mqtt_handler datamapping incoming lane 2 1:14,90 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:14,90
(place)lane: 0
<swim_event> get swimmer for internalheatid 25624 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"2","entrytime":"00:00:33.54","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"0","time":"1:14,90","heat":"3"}
<message_mapper> store lane 2: lane 2 1:14,90 0
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"2","entrytime":"00:00:33.54","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"0","time":"1:14,90","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"2","entrytime":"00:00:33.54","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"0","time":"1:14,90","heat":"3"}
mqtt_handler datamapping incoming lane 3 1:34,75 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:34,75
(place)lane: 0
<swim_event> get swimmer for internalheatid 25624 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"3","entrytime":"00:00:29.52","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"0","time":"1:34,75","heat":"3"}
<message_mapper> store lane 3: lane 3 1:34,75 0
websocket backend mainchannel {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"3","entrytime":"00:00:29.52","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"0","time":"1:34,75","heat":"3"}
lane
websocket backend send {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"3","entrytime":"00:00:29.52","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"0","time":"1:34,75","heat":"3"}
mqtt_handler datamapping incoming lane 4 1:14,97 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:14,97
(place)lane: 0
<swim_event> get swimmer for internalheatid 25624 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"4","entrytime":"00:00:31.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"5","place":"0","time":"1:14,97","heat":"3"}
<message_mapper> store lane 4: lane 4 1:14,97 0
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"4","entrytime":"00:00:31.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"5","place":"0","time":"1:14,97","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"4","entrytime":"00:00:31.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"5","place":"0","time":"1:14,97","heat":"3"}
mqtt_handler datamapping incoming lane 5 1:3,43 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:3,43
(place)lane: 0
<swim_event> get swimmer for internalheatid 25624 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.82","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"0","time":"1:3,43","heat":"3"}
<message_mapper> store lane 5: lane 5 1:3,43 0
websocket backend mainchannel {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.82","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"0","time":"1:3,43","heat":"3"}
lane
websocket backend send {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.82","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"0","time":"1:3,43","heat":"3"}
mqtt_handler datamapping incoming lane 6 0:25,76 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:25,76
(place)lane: 0
<swim_event> get swimmer for internalheatid 25624 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"6","entrytime":"00:00:35.41","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"0","time":"0:25,76","heat":"3"}
<message_mapper> store lane 6: lane 6 0:25,76 0
websocket backend mainchannel {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"6","entrytime":"00:00:35.41","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"0","time":"0:25,76","heat":"3"}
lane
websocket backend send {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"6","entrytime":"00:00:35.41","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"0","time":"0:25,76","heat":"3"}
mqtt_handler datamapping incoming lane 1 0:55,4 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:55,4
(place)lane: 1
<swim_event> get swimmer for internalheatid 25624 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"1","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"5","place":"1","time":"0:55,4","heat":"3"}
<message_mapper> store lane 1: lane 1 0:55,4 1
websocket backend mainchannel {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"1","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"5","place":"1","time":"0:55,4","heat":"3"}
lane
websocket backend send {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"1","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"5","place":"1","time":"0:55,4","heat":"3"}
mqtt_handler datamapping incoming lane 2 0:40,48 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:40,48
(place)lane: 2
<swim_event> get swimmer for internalheatid 25624 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"2","entrytime":"00:00:33.54","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"2","time":"0:40,48","heat":"3"}
<message_mapper> store lane 2: lane 2 0:40,48 2
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"2","entrytime":"00:00:33.54","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"2","time":"0:40,48","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"2","entrytime":"00:00:33.54","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"2","time":"0:40,48","heat":"3"}
mqtt_handler datamapping incoming lane 3 1:48,3 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:48,3
(place)lane: 3
<swim_event> get swimmer for internalheatid 25624 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"3","entrytime":"00:00:29.52","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"3","time":"1:48,3","heat":"3"}
<message_mapper> store lane 3: lane 3 1:48,3 3
websocket backend mainchannel {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"3","entrytime":"00:00:29.52","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"3","time":"1:48,3","heat":"3"}
lane
websocket backend send {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"3","entrytime":"00:00:29.52","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"3","time":"1:48,3","heat":"3"}
mqtt_handler datamapping incoming lane 4 0:3,68 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:3,68
(place)lane: 4
<swim_event> get swimmer for internalheatid 25624 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"4","entrytime":"00:00:31.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"5","place":"4","time":"0:3,68","heat":"3"}
<message_mapper> store lane 4: lane 4 0:3,68 4
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"4","entrytime":"00:00:31.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"5","place":"4","time":"0:3,68","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"4","entrytime":"00:00:31.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"5","place":"4","time":"0:3,68","heat":"3"}
mqtt_handler datamapping incoming lane 5 1:59,62 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:59,62
(place)lane: 5
<swim_event> get swimmer for internalheatid 25624 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.82","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"5","time":"1:59,62","heat":"3"}
<message_mapper> store lane 5: lane 5 1:59,62 5
websocket backend mainchannel {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.82","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"5","time":"1:59,62","heat":"3"}
lane
websocket backend send {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.82","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"5","time":"1:59,62","heat":"3"}
mqtt_handler datamapping incoming lane 6 1:35,34 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:35,34
(place)lane: 6
<swim_event> get swimmer for internalheatid 25624 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"6","entrytime":"00:00:35.41","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"6","time":"1:35,34","heat":"3"}
<message_mapper> store lane 6: lane 6 1:35,34 6
websocket backend mainchannel {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"6","entrytime":"00:00:35.41","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"6","time":"1:35,34","heat":"3"}
lane
websocket backend send {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"6","entrytime":"00:00:35.41","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"6","time":"1:35,34","heat":"3"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584285431"}
websocket backend mainchannel {"type":"stop","time":"1584285431"}
stop
websocket backend send {"type":"stop","time":"1584285431"}
mqtt_handler datamapping incoming header 5 4
<message_mapper> beginn parse
<incoming> Type: header
Event: -5-
HEAT: 4
<swim_events> getInternalHeatId 5 4
<swim_event> number heats 25625
Event: -5-
<swim_event> search for number 5
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"5","heat":"4","gender":"M","round":"TIM","swimstyle":"FREE","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25625 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25625 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25625 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25625 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25625 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25625 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"5","heat":"4","gender":"M","round":"TIM","swimstyle":"FREE","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"5","heat":"4","gender":"M","round":"TIM","swimstyle":"FREE","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"24872","birthdate":"2012-01-01","firstname":"Johannes","lastname":"Lulseged","lane":"1","entrytime":"00:00:25.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24872","birthdate":"2012-01-01","firstname":"Johannes","lastname":"Lulseged","lane":"1","entrytime":"00:00:25.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"25102","birthdate":"2012-01-01","firstname":"Stefan","lastname":"David","lane":"2","entrytime":"00:00:25.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"25102","birthdate":"2012-01-01","firstname":"Stefan","lastname":"David","lane":"2","entrytime":"00:00:25.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"25152","birthdate":"2012-01-01","firstname":"Eymen","lastname":"Hayirli","lane":"3","entrytime":"00:00:20.20","name":"SG Mittelfranken","code":"6768","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"25152","birthdate":"2012-01-01","firstname":"Eymen","lastname":"Hayirli","lane":"3","entrytime":"00:00:20.20","name":"SG Mittelfranken","code":"6768","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24788","birthdate":"2012-01-01","firstname":"Nils Ã–mer","lastname":"Schulze DÃ¶ring","lane":"4","entrytime":"00:00:21.63","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24788","birthdate":"2012-01-01","firstname":"Nils Ã–mer","lastname":"Schulze DÃ¶ring","lane":"4","entrytime":"00:00:21.63","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"25442","birthdate":"2012-01-01","firstname":"Paul","lastname":"Glanz","lane":"5","entrytime":"00:00:25.00","name":"SC Uttenreuth","code":"4383","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"25442","birthdate":"2012-01-01","firstname":"Paul","lastname":"Glanz","lane":"5","entrytime":"00:00:25.00","name":"SC Uttenreuth","code":"4383","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"6","entrytime":"00:00:28.82","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"6","entrytime":"00:00:28.82","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"5","place":"undefined","time":"undefined","heat":"4"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584285437"}
websocket backend mainchannel {"type":"start","time":"1584285437"}
start
websocket backend send {"type":"start","time":"1584285437"}
mqtt_handler datamapping incoming lane 1 0:19,88 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:19,88
(place)lane: 0
<swim_event> get swimmer for internalheatid 25625 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24872","birthdate":"2012-01-01","firstname":"Johannes","lastname":"Lulseged","lane":"1","entrytime":"00:00:25.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"5","place":"0","time":"0:19,88","heat":"4"}
<message_mapper> store lane 1: lane 1 0:19,88 0
websocket backend mainchannel {"athleteid":"24872","birthdate":"2012-01-01","firstname":"Johannes","lastname":"Lulseged","lane":"1","entrytime":"00:00:25.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"5","place":"0","time":"0:19,88","heat":"4"}
lane
websocket backend send {"athleteid":"24872","birthdate":"2012-01-01","firstname":"Johannes","lastname":"Lulseged","lane":"1","entrytime":"00:00:25.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"5","place":"0","time":"0:19,88","heat":"4"}
mqtt_handler datamapping incoming lane 2 1:35,73 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:35,73
(place)lane: 0
<swim_event> get swimmer for internalheatid 25625 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25102","birthdate":"2012-01-01","firstname":"Stefan","lastname":"David","lane":"2","entrytime":"00:00:25.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"5","place":"0","time":"1:35,73","heat":"4"}
<message_mapper> store lane 2: lane 2 1:35,73 0
websocket backend mainchannel {"athleteid":"25102","birthdate":"2012-01-01","firstname":"Stefan","lastname":"David","lane":"2","entrytime":"00:00:25.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"5","place":"0","time":"1:35,73","heat":"4"}
lane
websocket backend send {"athleteid":"25102","birthdate":"2012-01-01","firstname":"Stefan","lastname":"David","lane":"2","entrytime":"00:00:25.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"5","place":"0","time":"1:35,73","heat":"4"}
mqtt_handler datamapping incoming lane 3 0:24,40 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:24,40
(place)lane: 0
<swim_event> get swimmer for internalheatid 25625 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25152","birthdate":"2012-01-01","firstname":"Eymen","lastname":"Hayirli","lane":"3","entrytime":"00:00:20.20","name":"SG Mittelfranken","code":"6768","type":"lane","event":"5","place":"0","time":"0:24,40","heat":"4"}
<message_mapper> store lane 3: lane 3 0:24,40 0
websocket backend mainchannel {"athleteid":"25152","birthdate":"2012-01-01","firstname":"Eymen","lastname":"Hayirli","lane":"3","entrytime":"00:00:20.20","name":"SG Mittelfranken","code":"6768","type":"lane","event":"5","place":"0","time":"0:24,40","heat":"4"}
lane
websocket backend send {"athleteid":"25152","birthdate":"2012-01-01","firstname":"Eymen","lastname":"Hayirli","lane":"3","entrytime":"00:00:20.20","name":"SG Mittelfranken","code":"6768","type":"lane","event":"5","place":"0","time":"0:24,40","heat":"4"}
mqtt_handler datamapping incoming lane 4 0:9,16 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:9,16
(place)lane: 0
<swim_event> get swimmer for internalheatid 25625 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24788","birthdate":"2012-01-01","firstname":"Nils Ã–mer","lastname":"Schulze DÃ¶ring","lane":"4","entrytime":"00:00:21.63","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"0","time":"0:9,16","heat":"4"}
<message_mapper> store lane 4: lane 4 0:9,16 0
websocket backend mainchannel {"athleteid":"24788","birthdate":"2012-01-01","firstname":"Nils Ã–mer","lastname":"Schulze DÃ¶ring","lane":"4","entrytime":"00:00:21.63","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"0","time":"0:9,16","heat":"4"}
lane
websocket backend send {"athleteid":"24788","birthdate":"2012-01-01","firstname":"Nils Ã–mer","lastname":"Schulze DÃ¶ring","lane":"4","entrytime":"00:00:21.63","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"0","time":"0:9,16","heat":"4"}
mqtt_handler datamapping incoming lane 5 1:50,92 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:50,92
(place)lane: 0
<swim_event> get swimmer for internalheatid 25625 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25442","birthdate":"2012-01-01","firstname":"Paul","lastname":"Glanz","lane":"5","entrytime":"00:00:25.00","name":"SC Uttenreuth","code":"4383","type":"lane","event":"5","place":"0","time":"1:50,92","heat":"4"}
<message_mapper> store lane 5: lane 5 1:50,92 0
websocket backend mainchannel {"athleteid":"25442","birthdate":"2012-01-01","firstname":"Paul","lastname":"Glanz","lane":"5","entrytime":"00:00:25.00","name":"SC Uttenreuth","code":"4383","type":"lane","event":"5","place":"0","time":"1:50,92","heat":"4"}
lane
websocket backend send {"athleteid":"25442","birthdate":"2012-01-01","firstname":"Paul","lastname":"Glanz","lane":"5","entrytime":"00:00:25.00","name":"SC Uttenreuth","code":"4383","type":"lane","event":"5","place":"0","time":"1:50,92","heat":"4"}
mqtt_handler datamapping incoming lane 6 1:54,29 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:54,29
(place)lane: 0
<swim_event> get swimmer for internalheatid 25625 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"6","entrytime":"00:00:28.82","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"5","place":"0","time":"1:54,29","heat":"4"}
<message_mapper> store lane 6: lane 6 1:54,29 0
websocket backend mainchannel {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"6","entrytime":"00:00:28.82","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"5","place":"0","time":"1:54,29","heat":"4"}
lane
websocket backend send {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"6","entrytime":"00:00:28.82","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"5","place":"0","time":"1:54,29","heat":"4"}
mqtt_handler datamapping incoming lane 1 1:22,37 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:22,37
(place)lane: 1
<swim_event> get swimmer for internalheatid 25625 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24872","birthdate":"2012-01-01","firstname":"Johannes","lastname":"Lulseged","lane":"1","entrytime":"00:00:25.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"5","place":"1","time":"1:22,37","heat":"4"}
<message_mapper> store lane 1: lane 1 1:22,37 1
websocket backend mainchannel {"athleteid":"24872","birthdate":"2012-01-01","firstname":"Johannes","lastname":"Lulseged","lane":"1","entrytime":"00:00:25.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"5","place":"1","time":"1:22,37","heat":"4"}
lane
websocket backend send {"athleteid":"24872","birthdate":"2012-01-01","firstname":"Johannes","lastname":"Lulseged","lane":"1","entrytime":"00:00:25.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"5","place":"1","time":"1:22,37","heat":"4"}
mqtt_handler datamapping incoming lane 2 1:34,79 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:34,79
(place)lane: 2
<swim_event> get swimmer for internalheatid 25625 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25102","birthdate":"2012-01-01","firstname":"Stefan","lastname":"David","lane":"2","entrytime":"00:00:25.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"5","place":"2","time":"1:34,79","heat":"4"}
<message_mapper> store lane 2: lane 2 1:34,79 2
websocket backend mainchannel {"athleteid":"25102","birthdate":"2012-01-01","firstname":"Stefan","lastname":"David","lane":"2","entrytime":"00:00:25.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"5","place":"2","time":"1:34,79","heat":"4"}
lane
websocket backend send {"athleteid":"25102","birthdate":"2012-01-01","firstname":"Stefan","lastname":"David","lane":"2","entrytime":"00:00:25.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"5","place":"2","time":"1:34,79","heat":"4"}
mqtt_handler datamapping incoming lane 3 1:55,12 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:55,12
(place)lane: 3
<swim_event> get swimmer for internalheatid 25625 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25152","birthdate":"2012-01-01","firstname":"Eymen","lastname":"Hayirli","lane":"3","entrytime":"00:00:20.20","name":"SG Mittelfranken","code":"6768","type":"lane","event":"5","place":"3","time":"1:55,12","heat":"4"}
<message_mapper> store lane 3: lane 3 1:55,12 3
websocket backend mainchannel {"athleteid":"25152","birthdate":"2012-01-01","firstname":"Eymen","lastname":"Hayirli","lane":"3","entrytime":"00:00:20.20","name":"SG Mittelfranken","code":"6768","type":"lane","event":"5","place":"3","time":"1:55,12","heat":"4"}
lane
websocket backend send {"athleteid":"25152","birthdate":"2012-01-01","firstname":"Eymen","lastname":"Hayirli","lane":"3","entrytime":"00:00:20.20","name":"SG Mittelfranken","code":"6768","type":"lane","event":"5","place":"3","time":"1:55,12","heat":"4"}
mqtt_handler datamapping incoming lane 4 1:0,30 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:0,30
(place)lane: 4
<swim_event> get swimmer for internalheatid 25625 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24788","birthdate":"2012-01-01","firstname":"Nils Ã–mer","lastname":"Schulze DÃ¶ring","lane":"4","entrytime":"00:00:21.63","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"4","time":"1:0,30","heat":"4"}
<message_mapper> store lane 4: lane 4 1:0,30 4
websocket backend mainchannel {"athleteid":"24788","birthdate":"2012-01-01","firstname":"Nils Ã–mer","lastname":"Schulze DÃ¶ring","lane":"4","entrytime":"00:00:21.63","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"4","time":"1:0,30","heat":"4"}
lane
websocket backend send {"athleteid":"24788","birthdate":"2012-01-01","firstname":"Nils Ã–mer","lastname":"Schulze DÃ¶ring","lane":"4","entrytime":"00:00:21.63","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"5","place":"4","time":"1:0,30","heat":"4"}
mqtt_handler datamapping incoming lane 5 0:20,88 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:20,88
(place)lane: 5
<swim_event> get swimmer for internalheatid 25625 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25442","birthdate":"2012-01-01","firstname":"Paul","lastname":"Glanz","lane":"5","entrytime":"00:00:25.00","name":"SC Uttenreuth","code":"4383","type":"lane","event":"5","place":"5","time":"0:20,88","heat":"4"}
<message_mapper> store lane 5: lane 5 0:20,88 5
websocket backend mainchannel {"athleteid":"25442","birthdate":"2012-01-01","firstname":"Paul","lastname":"Glanz","lane":"5","entrytime":"00:00:25.00","name":"SC Uttenreuth","code":"4383","type":"lane","event":"5","place":"5","time":"0:20,88","heat":"4"}
lane
websocket backend send {"athleteid":"25442","birthdate":"2012-01-01","firstname":"Paul","lastname":"Glanz","lane":"5","entrytime":"00:00:25.00","name":"SC Uttenreuth","code":"4383","type":"lane","event":"5","place":"5","time":"0:20,88","heat":"4"}
mqtt_handler datamapping incoming lane 6 0:39,80 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:39,80
(place)lane: 6
<swim_event> get swimmer for internalheatid 25625 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"6","entrytime":"00:00:28.82","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"5","place":"6","time":"0:39,80","heat":"4"}
<message_mapper> store lane 6: lane 6 0:39,80 6
websocket backend mainchannel {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"6","entrytime":"00:00:28.82","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"5","place":"6","time":"0:39,80","heat":"4"}
lane
websocket backend send {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"6","entrytime":"00:00:28.82","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"5","place":"6","time":"0:39,80","heat":"4"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584285449"}
websocket backend mainchannel {"type":"stop","time":"1584285449"}
stop
websocket backend send {"type":"stop","time":"1584285449"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584285452"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584285452"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584285452"}
mqtt_handler datamapping incoming header 6 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -6-
HEAT: 1
<swim_events> getInternalHeatId 6 1
<swim_event> number heats 25626
Event: -6-
<swim_event> search for number 6
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"6","heat":"1","gender":"F","round":"TIM","swimstyle":"FREE","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25626 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25626 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25626 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25626 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25626 no relay lane 5
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25626 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"6","heat":"1","gender":"F","round":"TIM","swimstyle":"FREE","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
----------------- reset clock
websocket backend send {"type":"header","relaycount":"1","event":"6","heat":"1","gender":"F","round":"TIM","swimstyle":"FREE","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"6","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"6","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24337","birthdate":"2013-01-01","firstname":"Katharina","lastname":"Dieter","lane":"3","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24337","birthdate":"2013-01-01","firstname":"Katharina","lastname":"Dieter","lane":"3","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"4","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"4","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"5","event":"6","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"5","event":"6","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"6","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"6","place":"undefined","time":"undefined","heat":"1"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584285460"}
websocket backend mainchannel {"type":"start","time":"1584285460"}
start
websocket backend send {"type":"start","time":"1584285460"}
mqtt_handler datamapping incoming lane 1 0:29,94 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:29,94
(place)lane: 0
<swim_event> get swimmer for internalheatid 25626 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"6","place":"0","time":"0:29,94","heat":"1"}
<message_mapper> store lane 1: lane 1 0:29,94 0
websocket backend mainchannel {"type":"lane","lane":"1","event":"6","place":"0","time":"0:29,94","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"6","place":"0","time":"0:29,94","heat":"1"}
mqtt_handler datamapping incoming lane 2 1:4,84 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:4,84
(place)lane: 0
<swim_event> get swimmer for internalheatid 25626 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"0","time":"1:4,84","heat":"1"}
<message_mapper> store lane 2: lane 2 1:4,84 0
websocket backend mainchannel {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"0","time":"1:4,84","heat":"1"}
lane
websocket backend send {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"0","time":"1:4,84","heat":"1"}
mqtt_handler datamapping incoming lane 3 0:17,12 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:17,12
(place)lane: 0
<swim_event> get swimmer for internalheatid 25626 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24337","birthdate":"2013-01-01","firstname":"Katharina","lastname":"Dieter","lane":"3","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"0","time":"0:17,12","heat":"1"}
<message_mapper> store lane 3: lane 3 0:17,12 0
websocket backend mainchannel {"athleteid":"24337","birthdate":"2013-01-01","firstname":"Katharina","lastname":"Dieter","lane":"3","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"0","time":"0:17,12","heat":"1"}
lane
websocket backend send {"athleteid":"24337","birthdate":"2013-01-01","firstname":"Katharina","lastname":"Dieter","lane":"3","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"0","time":"0:17,12","heat":"1"}
mqtt_handler datamapping incoming lane 4 1:29,8 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:29,8
(place)lane: 0
<swim_event> get swimmer for internalheatid 25626 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"4","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"0","time":"1:29,8","heat":"1"}
<message_mapper> store lane 4: lane 4 1:29,8 0
websocket backend mainchannel {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"4","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"0","time":"1:29,8","heat":"1"}
lane
websocket backend send {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"4","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"0","time":"1:29,8","heat":"1"}
mqtt_handler datamapping incoming lane 5 0:30,8 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:30,8
(place)lane: 0
<swim_event> get swimmer for internalheatid 25626 no relay lane 5
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"5","event":"6","place":"0","time":"0:30,8","heat":"1"}
<message_mapper> store lane 5: lane 5 0:30,8 0
websocket backend mainchannel {"type":"lane","lane":"5","event":"6","place":"0","time":"0:30,8","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"5","event":"6","place":"0","time":"0:30,8","heat":"1"}
mqtt_handler datamapping incoming lane 6 0:4,86 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:4,86
(place)lane: 0
<swim_event> get swimmer for internalheatid 25626 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"6","place":"0","time":"0:4,86","heat":"1"}
<message_mapper> store lane 6: lane 6 0:4,86 0
websocket backend mainchannel {"type":"lane","lane":"6","event":"6","place":"0","time":"0:4,86","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"6","place":"0","time":"0:4,86","heat":"1"}
mqtt_handler datamapping incoming lane 1 1:58,0 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:58,0
(place)lane: 1
<swim_event> get swimmer for internalheatid 25626 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"6","place":"1","time":"1:58,0","heat":"1"}
<message_mapper> store lane 1: lane 1 1:58,0 1
websocket backend mainchannel {"type":"lane","lane":"1","event":"6","place":"1","time":"1:58,0","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"6","place":"1","time":"1:58,0","heat":"1"}
mqtt_handler datamapping incoming lane 2 1:54,73 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:54,73
(place)lane: 2
<swim_event> get swimmer for internalheatid 25626 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"2","time":"1:54,73","heat":"1"}
<message_mapper> store lane 2: lane 2 1:54,73 2
websocket backend mainchannel {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"2","time":"1:54,73","heat":"1"}
lane
websocket backend send {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"2","time":"1:54,73","heat":"1"}
mqtt_handler datamapping incoming lane 3 0:51,95 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:51,95
(place)lane: 3
<swim_event> get swimmer for internalheatid 25626 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24337","birthdate":"2013-01-01","firstname":"Katharina","lastname":"Dieter","lane":"3","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"3","time":"0:51,95","heat":"1"}
<message_mapper> store lane 3: lane 3 0:51,95 3
websocket backend mainchannel {"athleteid":"24337","birthdate":"2013-01-01","firstname":"Katharina","lastname":"Dieter","lane":"3","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"3","time":"0:51,95","heat":"1"}
lane
websocket backend send {"athleteid":"24337","birthdate":"2013-01-01","firstname":"Katharina","lastname":"Dieter","lane":"3","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"3","time":"0:51,95","heat":"1"}
mqtt_handler datamapping incoming lane 4 0:46,28 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:46,28
(place)lane: 4
<swim_event> get swimmer for internalheatid 25626 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"4","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"4","time":"0:46,28","heat":"1"}
<message_mapper> store lane 4: lane 4 0:46,28 4
websocket backend mainchannel {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"4","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"4","time":"0:46,28","heat":"1"}
lane
websocket backend send {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"4","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"4","time":"0:46,28","heat":"1"}
mqtt_handler datamapping incoming lane 5 0:57,10 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:57,10
(place)lane: 5
<swim_event> get swimmer for internalheatid 25626 no relay lane 5
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"5","event":"6","place":"5","time":"0:57,10","heat":"1"}
<message_mapper> store lane 5: lane 5 0:57,10 5
websocket backend mainchannel {"type":"lane","lane":"5","event":"6","place":"5","time":"0:57,10","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"5","event":"6","place":"5","time":"0:57,10","heat":"1"}
mqtt_handler datamapping incoming lane 6 1:30,57 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:30,57
(place)lane: 6
<swim_event> get swimmer for internalheatid 25626 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"6","place":"6","time":"1:30,57","heat":"1"}
<message_mapper> store lane 6: lane 6 1:30,57 6
websocket backend mainchannel {"type":"lane","lane":"6","event":"6","place":"6","time":"1:30,57","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"6","place":"6","time":"1:30,57","heat":"1"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584285471"}
websocket backend mainchannel {"type":"stop","time":"1584285471"}
stop
websocket backend send {"type":"stop","time":"1584285471"}
mqtt_handler datamapping incoming header 6 2
<message_mapper> beginn parse
<incoming> Type: header
Event: -6-
HEAT: 2
<swim_events> getInternalHeatId 6 2
<swim_event> number heats 25627
Event: -6-
<swim_event> search for number 6
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"6","heat":"2","gender":"F","round":"TIM","swimstyle":"FREE","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25627 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25627 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25627 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25627 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25627 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25627 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"6","heat":"2","gender":"F","round":"TIM","swimstyle":"FREE","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"6","heat":"2","gender":"F","round":"TIM","swimstyle":"FREE","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"24364","birthdate":"2013-01-01","firstname":"Juna","lastname":"Heinze","lane":"1","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24364","birthdate":"2013-01-01","firstname":"Juna","lastname":"Heinze","lane":"1","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24478","birthdate":"2013-01-01","firstname":"Fiona","lastname":"Wystrach","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24478","birthdate":"2013-01-01","firstname":"Fiona","lastname":"Wystrach","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"3","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"3","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24471","birthdate":"2012-01-01","firstname":"Lilia","lastname":"Wagner","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24471","birthdate":"2012-01-01","firstname":"Lilia","lastname":"Wagner","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"6","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"6","place":"undefined","time":"undefined","heat":"2"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584285477"}
websocket backend mainchannel {"type":"start","time":"1584285477"}
start
websocket backend send {"type":"start","time":"1584285477"}
mqtt_handler datamapping incoming lane 1 0:39,83 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:39,83
(place)lane: 0
<swim_event> get swimmer for internalheatid 25627 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24364","birthdate":"2013-01-01","firstname":"Juna","lastname":"Heinze","lane":"1","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"0","time":"0:39,83","heat":"2"}
<message_mapper> store lane 1: lane 1 0:39,83 0
websocket backend mainchannel {"athleteid":"24364","birthdate":"2013-01-01","firstname":"Juna","lastname":"Heinze","lane":"1","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"0","time":"0:39,83","heat":"2"}
lane
websocket backend send {"athleteid":"24364","birthdate":"2013-01-01","firstname":"Juna","lastname":"Heinze","lane":"1","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"0","time":"0:39,83","heat":"2"}
mqtt_handler datamapping incoming lane 2 1:4,23 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:4,23
(place)lane: 0
<swim_event> get swimmer for internalheatid 25627 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24478","birthdate":"2013-01-01","firstname":"Fiona","lastname":"Wystrach","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"0","time":"1:4,23","heat":"2"}
<message_mapper> store lane 2: lane 2 1:4,23 0
websocket backend mainchannel {"athleteid":"24478","birthdate":"2013-01-01","firstname":"Fiona","lastname":"Wystrach","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"0","time":"1:4,23","heat":"2"}
lane
websocket backend send {"athleteid":"24478","birthdate":"2013-01-01","firstname":"Fiona","lastname":"Wystrach","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"0","time":"1:4,23","heat":"2"}
mqtt_handler datamapping incoming lane 3 1:9,72 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:9,72
(place)lane: 0
<swim_event> get swimmer for internalheatid 25627 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"3","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"0","time":"1:9,72","heat":"2"}
<message_mapper> store lane 3: lane 3 1:9,72 0
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"3","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"0","time":"1:9,72","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"3","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"0","time":"1:9,72","heat":"2"}
mqtt_handler datamapping incoming lane 4 0:46,10 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:46,10
(place)lane: 0
<swim_event> get swimmer for internalheatid 25627 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"0","time":"0:46,10","heat":"2"}
<message_mapper> store lane 4: lane 4 0:46,10 0
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"0","time":"0:46,10","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"0","time":"0:46,10","heat":"2"}
mqtt_handler datamapping incoming lane 5 1:41,93 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:41,93
(place)lane: 0
<swim_event> get swimmer for internalheatid 25627 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24471","birthdate":"2012-01-01","firstname":"Lilia","lastname":"Wagner","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"0","time":"1:41,93","heat":"2"}
<message_mapper> store lane 5: lane 5 1:41,93 0
websocket backend mainchannel {"athleteid":"24471","birthdate":"2012-01-01","firstname":"Lilia","lastname":"Wagner","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"0","time":"1:41,93","heat":"2"}
lane
websocket backend send {"athleteid":"24471","birthdate":"2012-01-01","firstname":"Lilia","lastname":"Wagner","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"0","time":"1:41,93","heat":"2"}
mqtt_handler datamapping incoming lane 6 0:46,23 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:46,23
(place)lane: 0
<swim_event> get swimmer for internalheatid 25627 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"6","place":"0","time":"0:46,23","heat":"2"}
<message_mapper> store lane 6: lane 6 0:46,23 0
websocket backend mainchannel {"type":"lane","lane":"6","event":"6","place":"0","time":"0:46,23","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"6","place":"0","time":"0:46,23","heat":"2"}
mqtt_handler datamapping incoming lane 1 0:8,95 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:8,95
(place)lane: 1
<swim_event> get swimmer for internalheatid 25627 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24364","birthdate":"2013-01-01","firstname":"Juna","lastname":"Heinze","lane":"1","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"1","time":"0:8,95","heat":"2"}
<message_mapper> store lane 1: lane 1 0:8,95 1
websocket backend mainchannel {"athleteid":"24364","birthdate":"2013-01-01","firstname":"Juna","lastname":"Heinze","lane":"1","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"1","time":"0:8,95","heat":"2"}
lane
websocket backend send {"athleteid":"24364","birthdate":"2013-01-01","firstname":"Juna","lastname":"Heinze","lane":"1","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"1","time":"0:8,95","heat":"2"}
mqtt_handler datamapping incoming lane 2 1:9,74 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:9,74
(place)lane: 2
<swim_event> get swimmer for internalheatid 25627 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24478","birthdate":"2013-01-01","firstname":"Fiona","lastname":"Wystrach","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"2","time":"1:9,74","heat":"2"}
<message_mapper> store lane 2: lane 2 1:9,74 2
websocket backend mainchannel {"athleteid":"24478","birthdate":"2013-01-01","firstname":"Fiona","lastname":"Wystrach","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"2","time":"1:9,74","heat":"2"}
lane
websocket backend send {"athleteid":"24478","birthdate":"2013-01-01","firstname":"Fiona","lastname":"Wystrach","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"2","time":"1:9,74","heat":"2"}
mqtt_handler datamapping incoming lane 3 1:24,34 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:24,34
(place)lane: 3
<swim_event> get swimmer for internalheatid 25627 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"3","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"3","time":"1:24,34","heat":"2"}
<message_mapper> store lane 3: lane 3 1:24,34 3
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"3","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"3","time":"1:24,34","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"3","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"3","time":"1:24,34","heat":"2"}
mqtt_handler datamapping incoming lane 4 0:58,9 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:58,9
(place)lane: 4
<swim_event> get swimmer for internalheatid 25627 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"4","time":"0:58,9","heat":"2"}
<message_mapper> store lane 4: lane 4 0:58,9 4
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"4","time":"0:58,9","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"4","time":"0:58,9","heat":"2"}
mqtt_handler datamapping incoming lane 5 0:6,47 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:6,47
(place)lane: 5
<swim_event> get swimmer for internalheatid 25627 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24471","birthdate":"2012-01-01","firstname":"Lilia","lastname":"Wagner","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"5","time":"0:6,47","heat":"2"}
<message_mapper> store lane 5: lane 5 0:6,47 5
websocket backend mainchannel {"athleteid":"24471","birthdate":"2012-01-01","firstname":"Lilia","lastname":"Wagner","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"5","time":"0:6,47","heat":"2"}
lane
websocket backend send {"athleteid":"24471","birthdate":"2012-01-01","firstname":"Lilia","lastname":"Wagner","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"5","time":"0:6,47","heat":"2"}
mqtt_handler datamapping incoming lane 6 0:11,46 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:11,46
(place)lane: 6
<swim_event> get swimmer for internalheatid 25627 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"6","place":"6","time":"0:11,46","heat":"2"}
<message_mapper> store lane 6: lane 6 0:11,46 6
websocket backend mainchannel {"type":"lane","lane":"6","event":"6","place":"6","time":"0:11,46","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"6","place":"6","time":"0:11,46","heat":"2"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584285489"}
websocket backend mainchannel {"type":"stop","time":"1584285489"}
stop
websocket backend send {"type":"stop","time":"1584285489"}
mqtt_handler datamapping incoming header 6 3
<message_mapper> beginn parse
<incoming> Type: header
Event: -6-
HEAT: 3
<swim_events> getInternalHeatId 6 3
<swim_event> number heats 25628
Event: -6-
<swim_event> search for number 6
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"6","heat":"3","gender":"F","round":"TIM","swimstyle":"FREE","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25628 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25628 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25628 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25628 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25628 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25628 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"6","heat":"3","gender":"F","round":"TIM","swimstyle":"FREE","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"6","heat":"3","gender":"F","round":"TIM","swimstyle":"FREE","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"1","entrytime":"00:00:57.46","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"1","entrytime":"00:00:57.46","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"2","entrytime":"00:00:46.15","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"2","entrytime":"00:00:46.15","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25543","birthdate":"2013-01-01","firstname":"Tamina","lastname":"Schomleu","lane":"3","entrytime":"00:00:45.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25543","birthdate":"2013-01-01","firstname":"Tamina","lastname":"Schomleu","lane":"3","entrytime":"00:00:45.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25538","birthdate":"2012-01-01","firstname":"Leila","lastname":"Schomleu","lane":"4","entrytime":"00:00:45.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25538","birthdate":"2012-01-01","firstname":"Leila","lastname":"Schomleu","lane":"4","entrytime":"00:00:45.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24716","birthdate":"2013-01-01","firstname":"Julia","lastname":"Ehnis","lane":"5","entrytime":"00:00:48.60","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24716","birthdate":"2013-01-01","firstname":"Julia","lastname":"Ehnis","lane":"5","entrytime":"00:00:48.60","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24341","birthdate":"2012-01-01","firstname":"Sanja","lastname":"Dietzel","lane":"6","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24341","birthdate":"2012-01-01","firstname":"Sanja","lastname":"Dietzel","lane":"6","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"3"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584285495"}
websocket backend mainchannel {"type":"start","time":"1584285495"}
start
websocket backend send {"type":"start","time":"1584285495"}
mqtt_handler datamapping incoming lane 1 0:19,31 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:19,31
(place)lane: 0
<swim_event> get swimmer for internalheatid 25628 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"1","entrytime":"00:00:57.46","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"0","time":"0:19,31","heat":"3"}
<message_mapper> store lane 1: lane 1 0:19,31 0
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"1","entrytime":"00:00:57.46","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"0","time":"0:19,31","heat":"3"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"1","entrytime":"00:00:57.46","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"0","time":"0:19,31","heat":"3"}
mqtt_handler datamapping incoming lane 2 0:5,52 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:5,52
(place)lane: 0
<swim_event> get swimmer for internalheatid 25628 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"2","entrytime":"00:00:46.15","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"0","time":"0:5,52","heat":"3"}
<message_mapper> store lane 2: lane 2 0:5,52 0
websocket backend mainchannel {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"2","entrytime":"00:00:46.15","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"0","time":"0:5,52","heat":"3"}
lane
websocket backend send {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"2","entrytime":"00:00:46.15","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"0","time":"0:5,52","heat":"3"}
mqtt_handler datamapping incoming lane 3 1:23,77 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:23,77
(place)lane: 0
<swim_event> get swimmer for internalheatid 25628 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25543","birthdate":"2013-01-01","firstname":"Tamina","lastname":"Schomleu","lane":"3","entrytime":"00:00:45.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"6","place":"0","time":"1:23,77","heat":"3"}
<message_mapper> store lane 3: lane 3 1:23,77 0
websocket backend mainchannel {"athleteid":"25543","birthdate":"2013-01-01","firstname":"Tamina","lastname":"Schomleu","lane":"3","entrytime":"00:00:45.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"6","place":"0","time":"1:23,77","heat":"3"}
lane
websocket backend send {"athleteid":"25543","birthdate":"2013-01-01","firstname":"Tamina","lastname":"Schomleu","lane":"3","entrytime":"00:00:45.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"6","place":"0","time":"1:23,77","heat":"3"}
mqtt_handler datamapping incoming lane 4 0:50,37 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:50,37
(place)lane: 0
<swim_event> get swimmer for internalheatid 25628 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25538","birthdate":"2012-01-01","firstname":"Leila","lastname":"Schomleu","lane":"4","entrytime":"00:00:45.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"6","place":"0","time":"0:50,37","heat":"3"}
<message_mapper> store lane 4: lane 4 0:50,37 0
websocket backend mainchannel {"athleteid":"25538","birthdate":"2012-01-01","firstname":"Leila","lastname":"Schomleu","lane":"4","entrytime":"00:00:45.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"6","place":"0","time":"0:50,37","heat":"3"}
lane
websocket backend send {"athleteid":"25538","birthdate":"2012-01-01","firstname":"Leila","lastname":"Schomleu","lane":"4","entrytime":"00:00:45.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"6","place":"0","time":"0:50,37","heat":"3"}
mqtt_handler datamapping incoming lane 5 1:20,21 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:20,21
(place)lane: 0
<swim_event> get swimmer for internalheatid 25628 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24716","birthdate":"2013-01-01","firstname":"Julia","lastname":"Ehnis","lane":"5","entrytime":"00:00:48.60","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"0","time":"1:20,21","heat":"3"}
<message_mapper> store lane 5: lane 5 1:20,21 0
websocket backend mainchannel {"athleteid":"24716","birthdate":"2013-01-01","firstname":"Julia","lastname":"Ehnis","lane":"5","entrytime":"00:00:48.60","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"0","time":"1:20,21","heat":"3"}
lane
websocket backend send {"athleteid":"24716","birthdate":"2013-01-01","firstname":"Julia","lastname":"Ehnis","lane":"5","entrytime":"00:00:48.60","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"0","time":"1:20,21","heat":"3"}
mqtt_handler datamapping incoming lane 6 0:59,89 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:59,89
(place)lane: 0
<swim_event> get swimmer for internalheatid 25628 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24341","birthdate":"2012-01-01","firstname":"Sanja","lastname":"Dietzel","lane":"6","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"0","time":"0:59,89","heat":"3"}
<message_mapper> store lane 6: lane 6 0:59,89 0
websocket backend mainchannel {"athleteid":"24341","birthdate":"2012-01-01","firstname":"Sanja","lastname":"Dietzel","lane":"6","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"0","time":"0:59,89","heat":"3"}
lane
websocket backend send {"athleteid":"24341","birthdate":"2012-01-01","firstname":"Sanja","lastname":"Dietzel","lane":"6","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"0","time":"0:59,89","heat":"3"}
mqtt_handler datamapping incoming lane 1 0:19,30 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:19,30
(place)lane: 1
<swim_event> get swimmer for internalheatid 25628 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"1","entrytime":"00:00:57.46","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"1","time":"0:19,30","heat":"3"}
<message_mapper> store lane 1: lane 1 0:19,30 1
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"1","entrytime":"00:00:57.46","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"1","time":"0:19,30","heat":"3"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"1","entrytime":"00:00:57.46","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"1","time":"0:19,30","heat":"3"}
mqtt_handler datamapping incoming lane 2 0:31,70 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:31,70
(place)lane: 2
<swim_event> get swimmer for internalheatid 25628 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"2","entrytime":"00:00:46.15","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"2","time":"0:31,70","heat":"3"}
<message_mapper> store lane 2: lane 2 0:31,70 2
websocket backend mainchannel {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"2","entrytime":"00:00:46.15","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"2","time":"0:31,70","heat":"3"}
lane
websocket backend send {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"2","entrytime":"00:00:46.15","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"2","time":"0:31,70","heat":"3"}
mqtt_handler datamapping incoming lane 3 1:14,66 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:14,66
(place)lane: 3
<swim_event> get swimmer for internalheatid 25628 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25543","birthdate":"2013-01-01","firstname":"Tamina","lastname":"Schomleu","lane":"3","entrytime":"00:00:45.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"6","place":"3","time":"1:14,66","heat":"3"}
<message_mapper> store lane 3: lane 3 1:14,66 3
websocket backend mainchannel {"athleteid":"25543","birthdate":"2013-01-01","firstname":"Tamina","lastname":"Schomleu","lane":"3","entrytime":"00:00:45.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"6","place":"3","time":"1:14,66","heat":"3"}
lane
websocket backend send {"athleteid":"25543","birthdate":"2013-01-01","firstname":"Tamina","lastname":"Schomleu","lane":"3","entrytime":"00:00:45.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"6","place":"3","time":"1:14,66","heat":"3"}
mqtt_handler datamapping incoming lane 4 0:35,38 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:35,38
(place)lane: 4
<swim_event> get swimmer for internalheatid 25628 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25538","birthdate":"2012-01-01","firstname":"Leila","lastname":"Schomleu","lane":"4","entrytime":"00:00:45.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"6","place":"4","time":"0:35,38","heat":"3"}
<message_mapper> store lane 4: lane 4 0:35,38 4
websocket backend mainchannel {"athleteid":"25538","birthdate":"2012-01-01","firstname":"Leila","lastname":"Schomleu","lane":"4","entrytime":"00:00:45.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"6","place":"4","time":"0:35,38","heat":"3"}
lane
websocket backend send {"athleteid":"25538","birthdate":"2012-01-01","firstname":"Leila","lastname":"Schomleu","lane":"4","entrytime":"00:00:45.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"6","place":"4","time":"0:35,38","heat":"3"}
mqtt_handler datamapping incoming lane 5 0:26,43 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:26,43
(place)lane: 5
<swim_event> get swimmer for internalheatid 25628 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24716","birthdate":"2013-01-01","firstname":"Julia","lastname":"Ehnis","lane":"5","entrytime":"00:00:48.60","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"5","time":"0:26,43","heat":"3"}
<message_mapper> store lane 5: lane 5 0:26,43 5
websocket backend mainchannel {"athleteid":"24716","birthdate":"2013-01-01","firstname":"Julia","lastname":"Ehnis","lane":"5","entrytime":"00:00:48.60","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"5","time":"0:26,43","heat":"3"}
lane
websocket backend send {"athleteid":"24716","birthdate":"2013-01-01","firstname":"Julia","lastname":"Ehnis","lane":"5","entrytime":"00:00:48.60","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"5","time":"0:26,43","heat":"3"}
mqtt_handler datamapping incoming lane 6 0:8,92 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:8,92
(place)lane: 6
<swim_event> get swimmer for internalheatid 25628 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24341","birthdate":"2012-01-01","firstname":"Sanja","lastname":"Dietzel","lane":"6","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"6","time":"0:8,92","heat":"3"}
<message_mapper> store lane 6: lane 6 0:8,92 6
websocket backend mainchannel {"athleteid":"24341","birthdate":"2012-01-01","firstname":"Sanja","lastname":"Dietzel","lane":"6","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"6","time":"0:8,92","heat":"3"}
lane
websocket backend send {"athleteid":"24341","birthdate":"2012-01-01","firstname":"Sanja","lastname":"Dietzel","lane":"6","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"6","time":"0:8,92","heat":"3"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584285506"}
websocket backend mainchannel {"type":"stop","time":"1584285506"}
stop
websocket backend send {"type":"stop","time":"1584285506"}
mqtt_handler datamapping incoming header 6 4
<message_mapper> beginn parse
<incoming> Type: header
Event: -6-
HEAT: 4
<swim_events> getInternalHeatId 6 4
<swim_event> number heats 25629
Event: -6-
<swim_event> search for number 6
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"6","heat":"4","gender":"F","round":"TIM","swimstyle":"FREE","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25629 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25629 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25629 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25629 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25629 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25629 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"6","heat":"4","gender":"F","round":"TIM","swimstyle":"FREE","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"6","heat":"4","gender":"F","round":"TIM","swimstyle":"FREE","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"24236","birthdate":"2012-01-01","firstname":"Theresa","lastname":"Dressel","lane":"1","entrytime":"00:00:43.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24236","birthdate":"2012-01-01","firstname":"Theresa","lastname":"Dressel","lane":"1","entrytime":"00:00:43.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"2","entrytime":"00:00:37.55","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"2","entrytime":"00:00:37.55","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"25457","birthdate":"2012-01-01","firstname":"Klara","lastname":"SchrÃ¶ter","lane":"3","entrytime":"00:00:35.00","name":"SC Uttenreuth","code":"4383","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"25457","birthdate":"2012-01-01","firstname":"Klara","lastname":"SchrÃ¶ter","lane":"3","entrytime":"00:00:35.00","name":"SC Uttenreuth","code":"4383","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24726","birthdate":"2012-01-01","firstname":"Linnea Emilia","lastname":"GlÃ¶ÃŸinger","lane":"4","entrytime":"00:00:36.63","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24726","birthdate":"2012-01-01","firstname":"Linnea Emilia","lastname":"GlÃ¶ÃŸinger","lane":"4","entrytime":"00:00:36.63","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"5","entrytime":"00:00:39.55","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"5","entrytime":"00:00:39.55","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"6","entrytime":"00:00:43.73","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"6","entrytime":"00:00:43.73","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"4"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584285512"}
websocket backend mainchannel {"type":"start","time":"1584285512"}
start
websocket backend send {"type":"start","time":"1584285512"}
mqtt_handler datamapping incoming lane 1 0:49,53 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:49,53
(place)lane: 0
<swim_event> get swimmer for internalheatid 25629 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24236","birthdate":"2012-01-01","firstname":"Theresa","lastname":"Dressel","lane":"1","entrytime":"00:00:43.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"6","place":"0","time":"0:49,53","heat":"4"}
<message_mapper> store lane 1: lane 1 0:49,53 0
websocket backend mainchannel {"athleteid":"24236","birthdate":"2012-01-01","firstname":"Theresa","lastname":"Dressel","lane":"1","entrytime":"00:00:43.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"6","place":"0","time":"0:49,53","heat":"4"}
lane
websocket backend send {"athleteid":"24236","birthdate":"2012-01-01","firstname":"Theresa","lastname":"Dressel","lane":"1","entrytime":"00:00:43.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"6","place":"0","time":"0:49,53","heat":"4"}
mqtt_handler datamapping incoming lane 2 1:19,40 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:19,40
(place)lane: 0
<swim_event> get swimmer for internalheatid 25629 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"2","entrytime":"00:00:37.55","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"6","place":"0","time":"1:19,40","heat":"4"}
<message_mapper> store lane 2: lane 2 1:19,40 0
websocket backend mainchannel {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"2","entrytime":"00:00:37.55","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"6","place":"0","time":"1:19,40","heat":"4"}
lane
websocket backend send {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"2","entrytime":"00:00:37.55","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"6","place":"0","time":"1:19,40","heat":"4"}
mqtt_handler datamapping incoming lane 3 1:9,96 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:9,96
(place)lane: 0
<swim_event> get swimmer for internalheatid 25629 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25457","birthdate":"2012-01-01","firstname":"Klara","lastname":"SchrÃ¶ter","lane":"3","entrytime":"00:00:35.00","name":"SC Uttenreuth","code":"4383","type":"lane","event":"6","place":"0","time":"1:9,96","heat":"4"}
<message_mapper> store lane 3: lane 3 1:9,96 0
websocket backend mainchannel {"athleteid":"25457","birthdate":"2012-01-01","firstname":"Klara","lastname":"SchrÃ¶ter","lane":"3","entrytime":"00:00:35.00","name":"SC Uttenreuth","code":"4383","type":"lane","event":"6","place":"0","time":"1:9,96","heat":"4"}
lane
websocket backend send {"athleteid":"25457","birthdate":"2012-01-01","firstname":"Klara","lastname":"SchrÃ¶ter","lane":"3","entrytime":"00:00:35.00","name":"SC Uttenreuth","code":"4383","type":"lane","event":"6","place":"0","time":"1:9,96","heat":"4"}
mqtt_handler datamapping incoming lane 4 1:14,61 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:14,61
(place)lane: 0
<swim_event> get swimmer for internalheatid 25629 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24726","birthdate":"2012-01-01","firstname":"Linnea Emilia","lastname":"GlÃ¶ÃŸinger","lane":"4","entrytime":"00:00:36.63","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"0","time":"1:14,61","heat":"4"}
<message_mapper> store lane 4: lane 4 1:14,61 0
websocket backend mainchannel {"athleteid":"24726","birthdate":"2012-01-01","firstname":"Linnea Emilia","lastname":"GlÃ¶ÃŸinger","lane":"4","entrytime":"00:00:36.63","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"0","time":"1:14,61","heat":"4"}
lane
websocket backend send {"athleteid":"24726","birthdate":"2012-01-01","firstname":"Linnea Emilia","lastname":"GlÃ¶ÃŸinger","lane":"4","entrytime":"00:00:36.63","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"0","time":"1:14,61","heat":"4"}
mqtt_handler datamapping incoming lane 5 0:25,49 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:25,49
(place)lane: 0
<swim_event> get swimmer for internalheatid 25629 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"5","entrytime":"00:00:39.55","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"0","time":"0:25,49","heat":"4"}
<message_mapper> store lane 5: lane 5 0:25,49 0
websocket backend mainchannel {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"5","entrytime":"00:00:39.55","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"0","time":"0:25,49","heat":"4"}
lane
websocket backend send {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"5","entrytime":"00:00:39.55","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"0","time":"0:25,49","heat":"4"}
mqtt_handler datamapping incoming lane 6 1:59,71 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:59,71
(place)lane: 0
<swim_event> get swimmer for internalheatid 25629 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"6","entrytime":"00:00:43.73","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"0","time":"1:59,71","heat":"4"}
<message_mapper> store lane 6: lane 6 1:59,71 0
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"6","entrytime":"00:00:43.73","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"0","time":"1:59,71","heat":"4"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"6","entrytime":"00:00:43.73","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"0","time":"1:59,71","heat":"4"}
mqtt_handler datamapping incoming lane 1 0:19,8 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:19,8
(place)lane: 1
<swim_event> get swimmer for internalheatid 25629 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24236","birthdate":"2012-01-01","firstname":"Theresa","lastname":"Dressel","lane":"1","entrytime":"00:00:43.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"6","place":"1","time":"0:19,8","heat":"4"}
<message_mapper> store lane 1: lane 1 0:19,8 1
websocket backend mainchannel {"athleteid":"24236","birthdate":"2012-01-01","firstname":"Theresa","lastname":"Dressel","lane":"1","entrytime":"00:00:43.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"6","place":"1","time":"0:19,8","heat":"4"}
lane
websocket backend send {"athleteid":"24236","birthdate":"2012-01-01","firstname":"Theresa","lastname":"Dressel","lane":"1","entrytime":"00:00:43.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"6","place":"1","time":"0:19,8","heat":"4"}
mqtt_handler datamapping incoming lane 2 1:20,72 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:20,72
(place)lane: 2
<swim_event> get swimmer for internalheatid 25629 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"2","entrytime":"00:00:37.55","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"6","place":"2","time":"1:20,72","heat":"4"}
<message_mapper> store lane 2: lane 2 1:20,72 2
websocket backend mainchannel {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"2","entrytime":"00:00:37.55","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"6","place":"2","time":"1:20,72","heat":"4"}
lane
websocket backend send {"athleteid":"24117","birthdate":"2013-01-01","firstname":"Eva","lastname":"Matthes","lane":"2","entrytime":"00:00:37.55","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"6","place":"2","time":"1:20,72","heat":"4"}
mqtt_handler datamapping incoming lane 3 0:27,68 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:27,68
(place)lane: 3
<swim_event> get swimmer for internalheatid 25629 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25457","birthdate":"2012-01-01","firstname":"Klara","lastname":"SchrÃ¶ter","lane":"3","entrytime":"00:00:35.00","name":"SC Uttenreuth","code":"4383","type":"lane","event":"6","place":"3","time":"0:27,68","heat":"4"}
<message_mapper> store lane 3: lane 3 0:27,68 3
websocket backend mainchannel {"athleteid":"25457","birthdate":"2012-01-01","firstname":"Klara","lastname":"SchrÃ¶ter","lane":"3","entrytime":"00:00:35.00","name":"SC Uttenreuth","code":"4383","type":"lane","event":"6","place":"3","time":"0:27,68","heat":"4"}
lane
websocket backend send {"athleteid":"25457","birthdate":"2012-01-01","firstname":"Klara","lastname":"SchrÃ¶ter","lane":"3","entrytime":"00:00:35.00","name":"SC Uttenreuth","code":"4383","type":"lane","event":"6","place":"3","time":"0:27,68","heat":"4"}
mqtt_handler datamapping incoming lane 4 1:5,1 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:5,1
(place)lane: 4
<swim_event> get swimmer for internalheatid 25629 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24726","birthdate":"2012-01-01","firstname":"Linnea Emilia","lastname":"GlÃ¶ÃŸinger","lane":"4","entrytime":"00:00:36.63","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"4","time":"1:5,1","heat":"4"}
<message_mapper> store lane 4: lane 4 1:5,1 4
websocket backend mainchannel {"athleteid":"24726","birthdate":"2012-01-01","firstname":"Linnea Emilia","lastname":"GlÃ¶ÃŸinger","lane":"4","entrytime":"00:00:36.63","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"4","time":"1:5,1","heat":"4"}
lane
websocket backend send {"athleteid":"24726","birthdate":"2012-01-01","firstname":"Linnea Emilia","lastname":"GlÃ¶ÃŸinger","lane":"4","entrytime":"00:00:36.63","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"4","time":"1:5,1","heat":"4"}
mqtt_handler datamapping incoming lane 5 0:43,89 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:43,89
(place)lane: 5
<swim_event> get swimmer for internalheatid 25629 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"5","entrytime":"00:00:39.55","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"5","time":"0:43,89","heat":"4"}
<message_mapper> store lane 5: lane 5 0:43,89 5
websocket backend mainchannel {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"5","entrytime":"00:00:39.55","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"5","time":"0:43,89","heat":"4"}
lane
websocket backend send {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"5","entrytime":"00:00:39.55","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"5","time":"0:43,89","heat":"4"}
mqtt_handler datamapping incoming lane 6 0:44,59 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:44,59
(place)lane: 6
<swim_event> get swimmer for internalheatid 25629 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"6","entrytime":"00:00:43.73","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"6","time":"0:44,59","heat":"4"}
<message_mapper> store lane 6: lane 6 0:44,59 6
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"6","entrytime":"00:00:43.73","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"6","time":"0:44,59","heat":"4"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"6","entrytime":"00:00:43.73","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"6","time":"0:44,59","heat":"4"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584285523"}
websocket backend mainchannel {"type":"stop","time":"1584285523"}
stop
websocket backend send {"type":"stop","time":"1584285523"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584285526"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584285526"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584285526"}
mqtt_handler datamapping incoming header 7 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -7-
HEAT: 1
<swim_events> getInternalHeatId 7 1
<swim_event> number heats 25632
Event: -7-
<swim_event> search for number 7
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"7","heat":"1","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m Kraulbeine mit Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25632 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25632 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25632 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25632 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25632 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25632 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"7","heat":"1","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m Kraulbeine mit Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
header
----------------- reset clock
websocket backend send {"type":"header","relaycount":"1","event":"7","heat":"1","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m Kraulbeine mit Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"3","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"3","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"4","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"4","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"5","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"5","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"7","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"7","place":"undefined","time":"undefined","heat":"1"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584285535"}
websocket backend mainchannel {"type":"start","time":"1584285535"}
start
websocket backend send {"type":"start","time":"1584285535"}
mqtt_handler datamapping incoming lane 1 0:19,65 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:19,65
(place)lane: 0
<swim_event> get swimmer for internalheatid 25632 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"0","time":"0:19,65","heat":"1"}
<message_mapper> store lane 1: lane 1 0:19,65 0
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"0","time":"0:19,65","heat":"1"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"0","time":"0:19,65","heat":"1"}
mqtt_handler datamapping incoming lane 2 1:8,42 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:8,42
(place)lane: 0
<swim_event> get swimmer for internalheatid 25632 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"7","place":"0","time":"1:8,42","heat":"1"}
<message_mapper> store lane 2: lane 2 1:8,42 0
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"7","place":"0","time":"1:8,42","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"7","place":"0","time":"1:8,42","heat":"1"}
mqtt_handler datamapping incoming lane 3 1:51,57 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:51,57
(place)lane: 0
<swim_event> get swimmer for internalheatid 25632 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"3","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"7","place":"0","time":"1:51,57","heat":"1"}
<message_mapper> store lane 3: lane 3 1:51,57 0
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"3","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"7","place":"0","time":"1:51,57","heat":"1"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"3","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"7","place":"0","time":"1:51,57","heat":"1"}
mqtt_handler datamapping incoming lane 4 1:23,79 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:23,79
(place)lane: 0
<swim_event> get swimmer for internalheatid 25632 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"4","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"7","place":"0","time":"1:23,79","heat":"1"}
<message_mapper> store lane 4: lane 4 1:23,79 0
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"4","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"7","place":"0","time":"1:23,79","heat":"1"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"4","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"7","place":"0","time":"1:23,79","heat":"1"}
mqtt_handler datamapping incoming lane 5 0:19,28 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:19,28
(place)lane: 0
<swim_event> get swimmer for internalheatid 25632 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"5","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"0","time":"0:19,28","heat":"1"}
<message_mapper> store lane 5: lane 5 0:19,28 0
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"5","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"0","time":"0:19,28","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"5","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"0","time":"0:19,28","heat":"1"}
mqtt_handler datamapping incoming lane 6 0:7,70 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:7,70
(place)lane: 0
<swim_event> get swimmer for internalheatid 25632 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"7","place":"0","time":"0:7,70","heat":"1"}
<message_mapper> store lane 6: lane 6 0:7,70 0
websocket backend mainchannel {"type":"lane","lane":"6","event":"7","place":"0","time":"0:7,70","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"7","place":"0","time":"0:7,70","heat":"1"}
mqtt_handler datamapping incoming lane 1 0:30,96 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:30,96
(place)lane: 1
<swim_event> get swimmer for internalheatid 25632 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"1","time":"0:30,96","heat":"1"}
<message_mapper> store lane 1: lane 1 0:30,96 1
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"1","time":"0:30,96","heat":"1"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"1","time":"0:30,96","heat":"1"}
mqtt_handler datamapping incoming lane 2 1:35,71 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:35,71
(place)lane: 2
<swim_event> get swimmer for internalheatid 25632 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"7","place":"2","time":"1:35,71","heat":"1"}
<message_mapper> store lane 2: lane 2 1:35,71 2
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"7","place":"2","time":"1:35,71","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"7","place":"2","time":"1:35,71","heat":"1"}
mqtt_handler datamapping incoming lane 3 0:7,86 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:7,86
(place)lane: 3
<swim_event> get swimmer for internalheatid 25632 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"3","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"7","place":"3","time":"0:7,86","heat":"1"}
<message_mapper> store lane 3: lane 3 0:7,86 3
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"3","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"7","place":"3","time":"0:7,86","heat":"1"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"3","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"7","place":"3","time":"0:7,86","heat":"1"}
mqtt_handler datamapping incoming lane 4 1:0,70 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:0,70
(place)lane: 4
<swim_event> get swimmer for internalheatid 25632 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"4","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"7","place":"4","time":"1:0,70","heat":"1"}
<message_mapper> store lane 4: lane 4 1:0,70 4
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"4","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"7","place":"4","time":"1:0,70","heat":"1"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"4","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"7","place":"4","time":"1:0,70","heat":"1"}
mqtt_handler datamapping incoming lane 5 0:48,95 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:48,95
(place)lane: 5
<swim_event> get swimmer for internalheatid 25632 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"5","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"5","time":"0:48,95","heat":"1"}
<message_mapper> store lane 5: lane 5 0:48,95 5
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"5","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"5","time":"0:48,95","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"5","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"5","time":"0:48,95","heat":"1"}
mqtt_handler datamapping incoming lane 6 0:20,47 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:20,47
(place)lane: 6
<swim_event> get swimmer for internalheatid 25632 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"7","place":"6","time":"0:20,47","heat":"1"}
<message_mapper> store lane 6: lane 6 0:20,47 6
websocket backend mainchannel {"type":"lane","lane":"6","event":"7","place":"6","time":"0:20,47","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"7","place":"6","time":"0:20,47","heat":"1"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584285546"}
websocket backend mainchannel {"type":"stop","time":"1584285546"}
stop
websocket backend send {"type":"stop","time":"1584285546"}
mqtt_handler datamapping incoming header 7 2
<message_mapper> beginn parse
<incoming> Type: header
Event: -7-
HEAT: 2
<swim_events> getInternalHeatId 7 2
<swim_event> number heats 25633
Event: -7-
<swim_event> search for number 7
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"7","heat":"2","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m Kraulbeine mit Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25633 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25633 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25633 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25633 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25633 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25633 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"7","heat":"2","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m Kraulbeine mit Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"7","heat":"2","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m Kraulbeine mit Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"1","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"1","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"2","entrytime":"00:00:45.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"2","entrytime":"00:00:45.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"4","entrytime":"00:00:42.10","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"4","entrytime":"00:00:42.10","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25412","birthdate":"2012-01-01","firstname":"Antoni","lastname":"Swietlik","lane":"5","entrytime":"00:00:45.98","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25412","birthdate":"2012-01-01","firstname":"Antoni","lastname":"Swietlik","lane":"5","entrytime":"00:00:45.98","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24395","birthdate":"2014-01-01","firstname":"Sebastian","lastname":"JakubaÃŸ","lane":"6","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24395","birthdate":"2014-01-01","firstname":"Sebastian","lastname":"JakubaÃŸ","lane":"6","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"2"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584285552"}
websocket backend mainchannel {"type":"start","time":"1584285552"}
start
websocket backend send {"type":"start","time":"1584285552"}
mqtt_handler datamapping incoming lane 1 1:16,8 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:16,8
(place)lane: 0
<swim_event> get swimmer for internalheatid 25633 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"1","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"7","place":"0","time":"1:16,8","heat":"2"}
<message_mapper> store lane 1: lane 1 1:16,8 0
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"1","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"7","place":"0","time":"1:16,8","heat":"2"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"1","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"7","place":"0","time":"1:16,8","heat":"2"}
mqtt_handler datamapping incoming lane 2 0:30,80 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:30,80
(place)lane: 0
<swim_event> get swimmer for internalheatid 25633 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"2","entrytime":"00:00:45.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"7","place":"0","time":"0:30,80","heat":"2"}
<message_mapper> store lane 2: lane 2 0:30,80 0
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"2","entrytime":"00:00:45.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"7","place":"0","time":"0:30,80","heat":"2"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"2","entrytime":"00:00:45.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"7","place":"0","time":"0:30,80","heat":"2"}
mqtt_handler datamapping incoming lane 3 0:19,59 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:19,59
(place)lane: 0
<swim_event> get swimmer for internalheatid 25633 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"7","place":"0","time":"0:19,59","heat":"2"}
<message_mapper> store lane 3: lane 3 0:19,59 0
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"7","place":"0","time":"0:19,59","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"7","place":"0","time":"0:19,59","heat":"2"}
mqtt_handler datamapping incoming lane 4 1:29,12 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:29,12
(place)lane: 0
<swim_event> get swimmer for internalheatid 25633 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"4","entrytime":"00:00:42.10","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"0","time":"1:29,12","heat":"2"}
<message_mapper> store lane 4: lane 4 1:29,12 0
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"4","entrytime":"00:00:42.10","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"0","time":"1:29,12","heat":"2"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"4","entrytime":"00:00:42.10","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"0","time":"1:29,12","heat":"2"}
mqtt_handler datamapping incoming lane 5 0:47,88 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:47,88
(place)lane: 0
<swim_event> get swimmer for internalheatid 25633 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25412","birthdate":"2012-01-01","firstname":"Antoni","lastname":"Swietlik","lane":"5","entrytime":"00:00:45.98","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"0","time":"0:47,88","heat":"2"}
<message_mapper> store lane 5: lane 5 0:47,88 0
websocket backend mainchannel {"athleteid":"25412","birthdate":"2012-01-01","firstname":"Antoni","lastname":"Swietlik","lane":"5","entrytime":"00:00:45.98","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"0","time":"0:47,88","heat":"2"}
lane
websocket backend send {"athleteid":"25412","birthdate":"2012-01-01","firstname":"Antoni","lastname":"Swietlik","lane":"5","entrytime":"00:00:45.98","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"0","time":"0:47,88","heat":"2"}
mqtt_handler datamapping incoming lane 6 0:41,16 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:41,16
(place)lane: 0
<swim_event> get swimmer for internalheatid 25633 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24395","birthdate":"2014-01-01","firstname":"Sebastian","lastname":"JakubaÃŸ","lane":"6","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"7","place":"0","time":"0:41,16","heat":"2"}
<message_mapper> store lane 6: lane 6 0:41,16 0
websocket backend mainchannel {"athleteid":"24395","birthdate":"2014-01-01","firstname":"Sebastian","lastname":"JakubaÃŸ","lane":"6","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"7","place":"0","time":"0:41,16","heat":"2"}
lane
websocket backend send {"athleteid":"24395","birthdate":"2014-01-01","firstname":"Sebastian","lastname":"JakubaÃŸ","lane":"6","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"7","place":"0","time":"0:41,16","heat":"2"}
mqtt_handler datamapping incoming lane 1 1:36,38 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:36,38
(place)lane: 1
<swim_event> get swimmer for internalheatid 25633 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"1","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"7","place":"1","time":"1:36,38","heat":"2"}
<message_mapper> store lane 1: lane 1 1:36,38 1
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"1","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"7","place":"1","time":"1:36,38","heat":"2"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"1","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"7","place":"1","time":"1:36,38","heat":"2"}
mqtt_handler datamapping incoming lane 2 1:51,24 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:51,24
(place)lane: 2
<swim_event> get swimmer for internalheatid 25633 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"2","entrytime":"00:00:45.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"7","place":"2","time":"1:51,24","heat":"2"}
<message_mapper> store lane 2: lane 2 1:51,24 2
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"2","entrytime":"00:00:45.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"7","place":"2","time":"1:51,24","heat":"2"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"2","entrytime":"00:00:45.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"7","place":"2","time":"1:51,24","heat":"2"}
mqtt_handler datamapping incoming lane 3 1:22,29 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:22,29
(place)lane: 3
<swim_event> get swimmer for internalheatid 25633 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"7","place":"3","time":"1:22,29","heat":"2"}
<message_mapper> store lane 3: lane 3 1:22,29 3
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"7","place":"3","time":"1:22,29","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"7","place":"3","time":"1:22,29","heat":"2"}
mqtt_handler datamapping incoming lane 4 0:37,66 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:37,66
(place)lane: 4
<swim_event> get swimmer for internalheatid 25633 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"4","entrytime":"00:00:42.10","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"4","time":"0:37,66","heat":"2"}
<message_mapper> store lane 4: lane 4 0:37,66 4
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"4","entrytime":"00:00:42.10","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"4","time":"0:37,66","heat":"2"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"4","entrytime":"00:00:42.10","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"4","time":"0:37,66","heat":"2"}
mqtt_handler datamapping incoming lane 5 1:31,27 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:31,27
(place)lane: 5
<swim_event> get swimmer for internalheatid 25633 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25412","birthdate":"2012-01-01","firstname":"Antoni","lastname":"Swietlik","lane":"5","entrytime":"00:00:45.98","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"5","time":"1:31,27","heat":"2"}
<message_mapper> store lane 5: lane 5 1:31,27 5
websocket backend mainchannel {"athleteid":"25412","birthdate":"2012-01-01","firstname":"Antoni","lastname":"Swietlik","lane":"5","entrytime":"00:00:45.98","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"5","time":"1:31,27","heat":"2"}
lane
websocket backend send {"athleteid":"25412","birthdate":"2012-01-01","firstname":"Antoni","lastname":"Swietlik","lane":"5","entrytime":"00:00:45.98","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"5","time":"1:31,27","heat":"2"}
mqtt_handler datamapping incoming lane 6 1:32,83 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:32,83
(place)lane: 6
<swim_event> get swimmer for internalheatid 25633 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24395","birthdate":"2014-01-01","firstname":"Sebastian","lastname":"JakubaÃŸ","lane":"6","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"7","place":"6","time":"1:32,83","heat":"2"}
<message_mapper> store lane 6: lane 6 1:32,83 6
websocket backend mainchannel {"athleteid":"24395","birthdate":"2014-01-01","firstname":"Sebastian","lastname":"JakubaÃŸ","lane":"6","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"7","place":"6","time":"1:32,83","heat":"2"}
lane
websocket backend send {"athleteid":"24395","birthdate":"2014-01-01","firstname":"Sebastian","lastname":"JakubaÃŸ","lane":"6","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"7","place":"6","time":"1:32,83","heat":"2"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584285563"}
websocket backend mainchannel {"type":"stop","time":"1584285563"}
stop
websocket backend send {"type":"stop","time":"1584285563"}
mqtt_handler datamapping incoming header 7 3
<message_mapper> beginn parse
<incoming> Type: header
Event: -7-
HEAT: 3
<swim_events> getInternalHeatId 7 3
<swim_event> number heats 25634
Event: -7-
<swim_event> search for number 7
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"7","heat":"3","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m Kraulbeine mit Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25634 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25634 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25634 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25634 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25634 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25634 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"7","heat":"3","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m Kraulbeine mit Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"7","heat":"3","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m Kraulbeine mit Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"1","entrytime":"00:00:36.77","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"1","entrytime":"00:00:36.77","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25102","birthdate":"2012-01-01","firstname":"Stefan","lastname":"David","lane":"2","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25102","birthdate":"2012-01-01","firstname":"Stefan","lastname":"David","lane":"2","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25398","birthdate":"2012-01-01","firstname":"Leon","lastname":"Rauscher","lane":"3","entrytime":"00:00:33.50","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25398","birthdate":"2012-01-01","firstname":"Leon","lastname":"Rauscher","lane":"3","entrytime":"00:00:33.50","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"4","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"4","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"5","entrytime":"00:00:36.70","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"5","entrytime":"00:00:36.70","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"6","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"6","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"3"}
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1584285582"}
websocket backend mainchannel {"type":"startlist","time":"1584285582"}
startlist
websocket backend send {"type":"startlist","time":"1584285582"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584285587"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584285587"}
video
websocket backend send {"type":"video","version":"2","time":"1584285587"}
websocket backend Client disconnected
/GET
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1584294619"}
websocket backend mainchannel {"type":"startlist","time":"1584294619"}
startlist
websocket backend send {"type":"startlist","time":"1584294619"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584294622"}
race 7
<incoming> Type: header
Event: -7-
HEAT: 3
<swim_events> getInternalHeatId 7 3
<swim_event> number heats 25634
Event: -7-
<swim_event> search for number 7
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25634 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25634 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25634 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25634 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25634 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25634 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"race","time":"1584294622"}
race
websocket backend send {"type":"race","time":"1584294622"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"7","heat":"3","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m Kraulbeine mit Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"7","heat":"3","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m Kraulbeine mit Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"1","entrytime":"00:00:36.77","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"1","entrytime":"00:00:36.77","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25102","birthdate":"2012-01-01","firstname":"Stefan","lastname":"David","lane":"2","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25102","birthdate":"2012-01-01","firstname":"Stefan","lastname":"David","lane":"2","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25398","birthdate":"2012-01-01","firstname":"Leon","lastname":"Rauscher","lane":"3","entrytime":"00:00:33.50","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25398","birthdate":"2012-01-01","firstname":"Leon","lastname":"Rauscher","lane":"3","entrytime":"00:00:33.50","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"4","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"4","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"5","entrytime":"00:00:36.70","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"5","entrytime":"00:00:36.70","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"6","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"6","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"3"}
/POST
Message: {"message":"lane 6 1:11,11 1"}
mqtt_handler datamapping incoming lane 6 1:11,11 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:11,11
(place)lane: 1
<swim_event> get swimmer for internalheatid 25634 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"6","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"7","place":"1","time":"1:11,11","heat":"3"}
<message_mapper> store lane 6: lane 6 1:11,11 1
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"6","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"7","place":"1","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"6","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"7","place":"1","time":"1:11,11","heat":"3"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"lane 6 1:11,11 0"}
mqtt_handler datamapping incoming lane 6 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25634 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"6","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"7","place":"0","time":"1:11,11","heat":"3"}
<message_mapper> store lane 6: lane 6 1:11,11 0
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"6","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"7","place":"0","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"6","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"7","place":"0","time":"1:11,11","heat":"3"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"lane 6 1:11,11 11"}
mqtt_handler datamapping incoming lane 6 1:11,11 11
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:11,11
(place)lane: 11
<swim_event> get swimmer for internalheatid 25634 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"6","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"7","place":"11","time":"1:11,11","heat":"3"}
<message_mapper> store lane 6: lane 6 1:11,11 11
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"6","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"7","place":"11","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"6","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"7","place":"11","time":"1:11,11","heat":"3"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"lane 6 1:11,11 0"}
mqtt_handler datamapping incoming lane 6 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25634 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"6","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"7","place":"0","time":"1:11,11","heat":"3"}
<message_mapper> store lane 6: lane 6 1:11,11 0
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"6","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"7","place":"0","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"6","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"7","place":"0","time":"1:11,11","heat":"3"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"lane 6 1:11,11 0"}
mqtt_handler datamapping incoming lane 6 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25634 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"6","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"7","place":"0","time":"1:11,11","heat":"3"}
<message_mapper> store lane 6: lane 6 1:11,11 0
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"6","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"7","place":"0","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"6","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"7","place":"0","time":"1:11,11","heat":"3"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"lane 5 1:11,11 0"}
mqtt_handler datamapping incoming lane 5 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25634 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"5","entrytime":"00:00:36.70","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"0","time":"1:11,11","heat":"3"}
<message_mapper> store lane 5: lane 5 1:11,11 0
websocket backend mainchannel {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"5","entrytime":"00:00:36.70","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"0","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"5","entrytime":"00:00:36.70","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"0","time":"1:11,11","heat":"3"}
/POST
Message: {"message":"lane 5 1:11,11 1"}
mqtt_handler datamapping incoming lane 5 1:11,11 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:11,11
(place)lane: 1
<swim_event> get swimmer for internalheatid 25634 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"5","entrytime":"00:00:36.70","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"1","time":"1:11,11","heat":"3"}
<message_mapper> store lane 5: lane 5 1:11,11 1
websocket backend mainchannel {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"5","entrytime":"00:00:36.70","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"1","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"5","entrytime":"00:00:36.70","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"1","time":"1:11,11","heat":"3"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"lane 5 1:11,11 0"}
mqtt_handler datamapping incoming lane 5 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25634 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"5","entrytime":"00:00:36.70","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"0","time":"1:11,11","heat":"3"}
<message_mapper> store lane 5: lane 5 1:11,11 0
websocket backend mainchannel {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"5","entrytime":"00:00:36.70","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"0","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"5","entrytime":"00:00:36.70","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"0","time":"1:11,11","heat":"3"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"lane 5 1:11,11 0"}
mqtt_handler datamapping incoming lane 5 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25634 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"5","entrytime":"00:00:36.70","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"0","time":"1:11,11","heat":"3"}
<message_mapper> store lane 5: lane 5 1:11,11 0
websocket backend mainchannel {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"5","entrytime":"00:00:36.70","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"0","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"5","entrytime":"00:00:36.70","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"0","time":"1:11,11","heat":"3"}
/POST
Message: {"message":"lane 5 1:11,11 1"}
mqtt_handler datamapping incoming lane 5 1:11,11 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:11,11
(place)lane: 1
<swim_event> get swimmer for internalheatid 25634 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"5","entrytime":"00:00:36.70","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"1","time":"1:11,11","heat":"3"}
<message_mapper> store lane 5: lane 5 1:11,11 1
websocket backend mainchannel {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"5","entrytime":"00:00:36.70","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"1","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"5","entrytime":"00:00:36.70","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"1","time":"1:11,11","heat":"3"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected

> websocket_backend@1.0.0 start /Users/matthiasfuchs/projects/schwimmen/webtiming/websocket_backend
> node app.js


> administration@0.1.0 start /Users/matthiasfuchs/projects/schwimmen/webtiming/react_frontend/administration
> react-scripts start


> express-api-mqtt-example@1.0.0 start /Users/matthiasfuchs/projects/schwimmen/webtiming/datamapping
> node app.js

websocket backend Listening on port 4001
websocket backend connected
<incoming> using /Users/matthiasfuchs/projects/schwimmen/webtiming/datamapping/incoming/../property.ini
<incoming> using file resources/kinder.lef
<swim_event> read resources/kinder.lef
<mqqt_message_sender>lenex success upload new lenex file
<swim_event> Event type ALL
<sender> no auth set for outgoing mqttfalse undefined undefined
<sender> DEST_MQTT_HOST: mqtt://localhost
<mapper> use 6 lanes
app running on port. 3001
<sender> mqtt_sender client connected
mqtt_handler raw client connected
[34mâ„¹[39m [90mï½¢wdsï½£[39m: Project is running at http://0.0.0.0:3000/
[34mâ„¹[39m [90mï½¢wdsï½£[39m: webpack output is served from 
[34mâ„¹[39m [90mï½¢wdsï½£[39m: Content not from webpack is served from /Users/matthiasfuchs/projects/schwimmen/webtiming/react_frontend/administration/public
[34mâ„¹[39m [90mï½¢wdsï½£[39m: 404s will fallback to /
Starting the development server...

Files successfully emitted, waiting for typecheck results...
/GET
Compiled successfully!

You can now view administration in the browser.

  http://localhost:3000

Note that the development build is not optimized.
To create a production build, use npm run build.

websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584384125"}
race 0
<incoming> Type: header
Event: -0-
HEAT: 0
<swim_events> getInternalHeatId 0 0
<swim_events> getInternalHeatId crash 0 0 mode ALL
<swim_events> nothing found !!!
Event: -0-
<swim_event> search for number 0
<swim_event> single event
websocket backend mainchannel {"type":"race","time":"1584384125"}
race
websocket backend send {"type":"race","time":"1584384125"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"0","heat":"0","competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"0","heat":"0","competition":"43. FÃ¼rther Kinderschwimmen"}
/POST
Message: {"message":"header 1 1"}
mqtt_handler datamapping incoming header 1 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584384150"}
websocket backend mainchannel {"type":"start","time":"1584384150"}
start
websocket backend send {"type":"start","time":"1584384150"}
/POST
Message: {"message":"lane 1 1:11,11 0"}
mqtt_handler datamapping incoming lane 1 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"1","place":"0","time":"1:11,11","heat":"1"}
<message_mapper> store lane 1: lane 1 1:11,11 0
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"0","time":"1:11,11","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"0","time":"1:11,11","heat":"1"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584384546"}
websocket backend mainchannel {"type":"start","time":"1584384546"}
start
websocket backend send {"type":"start","time":"1584384546"}
/POST
Message: {"message":"video 1"}
mqtt_handler datamapping incoming video 1
<message_mapper> beginn parse
<incoming> Type: video
Event: -1-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"1","time":"1584384561"}
websocket backend mainchannel {"type":"video","version":"1","time":"1584384561"}
video
websocket backend send {"type":"video","version":"1","time":"1584384561"}
/POST
Message: {"message":"video 2"}
mqtt_handler datamapping incoming video 2
<message_mapper> beginn parse
<incoming> Type: video
Event: -2-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"2","time":"1584384568"}
websocket backend mainchannel {"type":"video","version":"2","time":"1584384568"}
video
websocket backend send {"type":"video","version":"2","time":"1584384568"}
/POST
Message: {"message":"video 4"}
mqtt_handler datamapping incoming video 4
<message_mapper> beginn parse
<incoming> Type: video
Event: -4-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"4","time":"1584384574"}
websocket backend mainchannel {"type":"video","version":"4","time":"1584384574"}
video
websocket backend send {"type":"video","version":"4","time":"1584384574"}
/POST
Message: {"message":"video 5"}
mqtt_handler datamapping incoming video 5
<message_mapper> beginn parse
<incoming> Type: video
Event: -5-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"5","time":"1584384589"}
websocket backend mainchannel {"type":"video","version":"5","time":"1584384589"}
video
websocket backend send {"type":"video","version":"5","time":"1584384589"}
/POST
Message: {"message":"video 3"}
mqtt_handler datamapping incoming video 3
<message_mapper> beginn parse
<incoming> Type: video
Event: -3-
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"video","version":"3","time":"1584384593"}
websocket backend mainchannel {"type":"video","version":"3","time":"1584384593"}
video
websocket backend send {"type":"video","version":"3","time":"1584384593"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584384618"}
websocket backend mainchannel {"type":"start","time":"1584384618"}
start
websocket backend send {"type":"start","time":"1584384618"}
/POST
Message: {"message":"lane 1 1:11,11 0"}
mqtt_handler datamapping incoming lane 1 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"1","place":"0","time":"1:11,11","heat":"1"}
<message_mapper> store lane 1: lane 1 1:11,11 0
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"0","time":"1:11,11","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"0","time":"1:11,11","heat":"1"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1584385393"}
websocket backend mainchannel {"type":"startlist","time":"1584385393"}
startlist
websocket backend send {"type":"startlist","time":"1584385393"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1584387224"}
websocket backend mainchannel {"type":"startlist","time":"1584387224"}
startlist
websocket backend send {"type":"startlist","time":"1584387224"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"header 1 2"}
mqtt_handler datamapping incoming header 1 2
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 2
<swim_events> getInternalHeatId 1 2
<swim_event> number heats 25608
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected

> administration@0.1.0 start /Users/matthiasfuchs/projects/schwimmen/webtiming/react_frontend/administration
> react-scripts start


> websocket_backend@1.0.0 start /Users/matthiasfuchs/projects/schwimmen/webtiming/websocket_backend
> node app.js


> express-api-mqtt-example@1.0.0 start /Users/matthiasfuchs/projects/schwimmen/webtiming/datamapping
> node app.js

<incoming> using /Users/matthiasfuchs/projects/schwimmen/webtiming/datamapping/incoming/../property.ini
<incoming> using file resources/kinder.lef
<swim_event> read resources/kinder.lef
<mqqt_message_sender>lenex success upload new lenex file
<swim_event> Event type ALL
<sender> no auth set for outgoing mqttfalse undefined undefined
<sender> DEST_MQTT_HOST: mqtt://localhost
<mapper> use 6 lanes
Something is already running on port 3000.
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/GET
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584789886"}
race 1
<incoming> Type: header
Event: -1-
HEAT: 2
<swim_events> getInternalHeatId 1 2
<swim_event> number heats 25608
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"race","time":"1584789886"}
race
websocket backend send {"type":"race","time":"1584789886"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1584789888"}
websocket backend mainchannel {"type":"startlist","time":"1584789888"}
startlist
websocket backend send {"type":"startlist","time":"1584789888"}
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1584791482"}
websocket backend mainchannel {"type":"startlist","time":"1584791482"}
startlist
websocket backend send {"type":"startlist","time":"1584791482"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584791710"}
race 1
<incoming> Type: header
Event: -1-
HEAT: 2
<swim_events> getInternalHeatId 1 2
<swim_event> number heats 25608
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"race","time":"1584791710"}
race
websocket backend send {"type":"race","time":"1584791710"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1584791712"}
websocket backend mainchannel {"type":"startlist","time":"1584791712"}
startlist
websocket backend send {"type":"startlist","time":"1584791712"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"header 1 1"}
mqtt_handler datamapping incoming header 1 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
/GET
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1584874474"}
websocket backend mainchannel {"type":"startlist","time":"1584874474"}
startlist
websocket backend send {"type":"startlist","time":"1584874474"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584874483"}
race 1
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"race","time":"1584874483"}
race
websocket backend send {"type":"race","time":"1584874483"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1584874484"}
websocket backend mainchannel {"type":"startlist","time":"1584874484"}
startlist
websocket backend send {"type":"startlist","time":"1584874484"}
/POST
Message: {"message":"header 1 2"}
mqtt_handler datamapping incoming header 1 2
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 2
<swim_events> getInternalHeatId 1 2
<swim_event> number heats 25608
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"header 1 3"}
mqtt_handler datamapping incoming header 1 3
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 3
<swim_events> getInternalHeatId 1 3
<swim_event> number heats 25609
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
/POST
Message: {"message":"header 1 4"}
mqtt_handler datamapping incoming header 1 4
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 4
<swim_events> getInternalHeatId 1 4
<swim_event> number heats 25610
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"4","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"4","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"4","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584877671"}
websocket backend mainchannel {"type":"start","time":"1584877671"}
start
websocket backend send {"type":"start","time":"1584877671"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584877712"}
race 1
<incoming> Type: header
Event: -1-
HEAT: 4
<swim_events> getInternalHeatId 1 4
<swim_event> number heats 25610
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"race","time":"1584877712"}
race
websocket backend send {"type":"race","time":"1584877712"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"4","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"4","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
/POST
Message: {"message":"stop"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584877729"}
websocket backend mainchannel {"type":"stop","time":"1584877729"}
stop
websocket backend send {"type":"stop","time":"1584877729"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584877730"}
websocket backend mainchannel {"type":"start","time":"1584877730"}
start
websocket backend send {"type":"start","time":"1584877730"}
/POST
Message: {"message":"lane 1 1:11,11 0"}
mqtt_handler datamapping incoming lane 1 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"4"}
<message_mapper> store lane 1: lane 1 1:11,11 0
websocket backend mainchannel {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"4"}
lane
websocket backend send {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"4"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1569662431"}
clock
websocket backend send {"type":"clock","size":"large","time":"1569662431"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1569662431"}
clock
websocket backend send {"type":"clock","size":"large","time":"1569662431"}
websocket backend mainchannel {"event":"1","gender":"F","round":"PRE","relaycount":"1","swimstyle":"FREE","distance":"100","type":"header","heat":"1","competition":"Bayerische Kurzbahnmeisterschaften 2016"}
header
----------------- reset clock
websocket backend send {"event":"1","gender":"F","round":"PRE","relaycount":"1","swimstyle":"FREE","distance":"100","type":"header","heat":"1","competition":"Bayerische Kurzbahnmeisterschaften 2016"}
websocket backend mainchannel {"type":"start","size":"large","time":"1569662431"}
start
websocket backend send {"type":"start","size":"large","time":"1569662431"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:17,85","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:17,85","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:44,94","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:44,94","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:47,90","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:47,90","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:29,51","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:29,51","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:50,43","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:50,43","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:21,26","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:21,26","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"1:48,96","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"1:48,96","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"2","time":"1:48,94","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"2","time":"1:48,94","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"1:26,81","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"1:26,81","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"4","time":"1:41,5","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"4","time":"1:41,5","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"5","time":"1:46,73","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"5","time":"1:46,73","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"6","time":"1:57,76","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"6","time":"1:57,76","heat":"1"}
websocket backend mainchannel {"type":"stop","size":"large","time":"1569662431"}
stop
websocket backend send {"type":"stop","size":"large","time":"1569662431"}
websocket backend mainchannel {"event":"1","gender":"F","round":"PRE","relaycount":"1","swimstyle":"FREE","distance":"100","type":"header","heat":"2","competition":"Bayerische Kurzbahnmeisterschaften 2016"}
header
websocket backend send {"event":"1","gender":"F","round":"PRE","relaycount":"1","swimstyle":"FREE","distance":"100","type":"header","heat":"2","competition":"Bayerische Kurzbahnmeisterschaften 2016"}
websocket backend mainchannel {"type":"start","size":"large","time":"1569662431"}
start
websocket backend send {"type":"start","size":"large","time":"1569662431"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:29,29","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:29,29","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:28,85","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:28,85","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:2,0","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:2,0","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:14,40","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:14,40","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:16,61","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:16,61","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:17,37","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:17,37","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"0:37,11","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"0:37,11","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"2","time":"0:23,45","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"2","time":"0:23,45","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"0:20,33","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"0:20,33","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"4","time":"1:2,46","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"4","time":"1:2,46","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"5","time":"0:44,53","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"5","time":"0:44,53","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"6","time":"0:20,23","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"6","time":"0:20,23","heat":"2"}
websocket backend mainchannel {"type":"stop","size":"large","time":"1569662431"}
stop
websocket backend send {"type":"stop","size":"large","time":"1569662431"}
websocket backend mainchannel {"event":"1","gender":"F","round":"PRE","relaycount":"1","swimstyle":"FREE","distance":"100","type":"header","heat":"3","competition":"Bayerische Kurzbahnmeisterschaften 2016"}
header
websocket backend send {"event":"1","gender":"F","round":"PRE","relaycount":"1","swimstyle":"FREE","distance":"100","type":"header","heat":"3","competition":"Bayerische Kurzbahnmeisterschaften 2016"}
websocket backend mainchannel {"type":"start","size":"large","time":"1569662431"}
start
websocket backend send {"type":"start","size":"large","time":"1569662431"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:25,20","heat":"3"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:25,20","heat":"3"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:27,45","heat":"3"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:27,45","heat":"3"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:18,37","heat":"3"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:18,37","heat":"3"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:52,5","heat":"3"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:52,5","heat":"3"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:58,55","heat":"3"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:58,55","heat":"3"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:28,97","heat":"3"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:28,97","heat":"3"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"1:37,52","heat":"3"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"1:37,52","heat":"3"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"2","time":"0:29,23","heat":"3"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"2","time":"0:29,23","heat":"3"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"1:1,91","heat":"3"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"1:1,91","heat":"3"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"4","time":"1:14,6","heat":"3"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"4","time":"1:14,6","heat":"3"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"5","time":"1:43,72","heat":"3"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"5","time":"1:43,72","heat":"3"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"6","time":"0:12,39","heat":"3"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"6","time":"0:12,39","heat":"3"}
websocket backend mainchannel {"type":"stop","size":"large","time":"1569662431"}
stop
websocket backend send {"type":"stop","size":"large","time":"1569662431"}
websocket backend mainchannel {"event":"1","gender":"F","round":"PRE","relaycount":"1","swimstyle":"FREE","distance":"100","type":"header","heat":"4","competition":"Bayerische Kurzbahnmeisterschaften 2016"}
header
websocket backend send {"event":"1","gender":"F","round":"PRE","relaycount":"1","swimstyle":"FREE","distance":"100","type":"header","heat":"4","competition":"Bayerische Kurzbahnmeisterschaften 2016"}
websocket backend mainchannel {"type":"start","size":"large","time":"1569662431"}
start
websocket backend send {"type":"start","size":"large","time":"1569662431"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:20,39","heat":"4"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:20,39","heat":"4"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:7,68","heat":"4"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:7,68","heat":"4"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:20,90","heat":"4"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:20,90","heat":"4"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:9,62","heat":"4"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:9,62","heat":"4"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:46,17","heat":"4"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:46,17","heat":"4"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:38,61","heat":"4"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:38,61","heat":"4"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"1:12,81","heat":"4"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"1:12,81","heat":"4"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"2","time":"1:50,21","heat":"4"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"2","time":"1:50,21","heat":"4"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"1:39,13","heat":"4"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"1:39,13","heat":"4"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"4","time":"1:49,81","heat":"4"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"4","time":"1:49,81","heat":"4"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"5","time":"1:30,84","heat":"4"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"5","time":"1:30,84","heat":"4"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"6","time":"1:37,58","heat":"4"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"6","time":"1:37,58","heat":"4"}
websocket backend mainchannel {"type":"stop","size":"large","time":"1569662431"}
stop
websocket backend send {"type":"stop","size":"large","time":"1569662431"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1569662431"}
clock
websocket backend send {"type":"clock","size":"large","time":"1569662431"}
websocket backend mainchannel {"event":"2","gender":"F","round":"PRE","relaycount":"1","swimstyle":"FREE","distance":"100","type":"header","heat":"1","competition":"Bayerische Kurzbahnmeisterschaften 2016"}
header
----------------- reset clock
websocket backend send {"event":"2","gender":"F","round":"PRE","relaycount":"1","swimstyle":"FREE","distance":"100","type":"header","heat":"1","competition":"Bayerische Kurzbahnmeisterschaften 2016"}
websocket backend mainchannel {"type":"start","size":"large","time":"1569662431"}
start
websocket backend send {"type":"start","size":"large","time":"1569662431"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"0","time":"0:39,83","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"0","time":"0:39,83","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"0","time":"1:29,59","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"0","time":"1:29,59","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"0","time":"1:48,84","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"0","time":"1:48,84","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"0","time":"0:12,56","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"0","time":"0:12,56","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"0","time":"1:44,5","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"0","time":"1:44,5","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"0","time":"0:54,29","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"0","time":"0:54,29","heat":"1"}
/POST
Message: {"message":"stop"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584877945"}
websocket backend mainchannel {"type":"stop","time":"1584877945"}
stop
websocket backend send {"type":"stop","time":"1584877945"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584877945"}
websocket backend mainchannel {"type":"start","time":"1584877945"}
start
websocket backend send {"type":"start","time":"1584877945"}
/POST
Message: {"message":"stop"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584877949"}
websocket backend mainchannel {"type":"stop","time":"1584877949"}
stop
websocket backend send {"type":"stop","time":"1584877949"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584877950"}
websocket backend mainchannel {"type":"start","time":"1584877950"}
start
websocket backend send {"type":"start","time":"1584877950"}
/POST
Message: {"message":"clear"}
mqtt_handler datamapping incoming clear
<message_mapper> beginn parse
<incoming> Type: clear
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clear","time":"1584877954"}
<message_mapper> clear race
<message_mapper> race out lane 1 1:11,11 0
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"clear","time":"1584877954"}
clear
clear lanes
websocket backend send {"type":"clear","time":"1584877954"}
websocket backend mainchannel {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"4"}
lane
websocket backend send {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"4"}
websocket backend mainchannel {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"4"}
lane
websocket backend send {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"4"}
websocket backend mainchannel {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"4"}
lane
websocket backend send {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"4"}
websocket backend mainchannel {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"","time":"","heat":"4"}
lane
websocket backend send {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"","time":"","heat":"4"}
websocket backend mainchannel {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"4"}
lane
websocket backend send {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"4"}
websocket backend mainchannel {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"","time":"","heat":"4"}
lane
websocket backend send {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"","time":"","heat":"4"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1569662431"}
clock
websocket backend send {"type":"clock","size":"large","time":"1569662431"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1569662431"}
clock
websocket backend send {"type":"clock","size":"large","time":"1569662431"}
websocket backend Client disconnected
websocket backend mainchannel {"event":"1","gender":"F","round":"PRE","relaycount":"1","swimstyle":"FREE","distance":"100","type":"header","heat":"1","competition":"Bayerische Kurzbahnmeisterschaften 2016"}
header
----------------- reset clock
websocket backend send {"event":"1","gender":"F","round":"PRE","relaycount":"1","swimstyle":"FREE","distance":"100","type":"header","heat":"1","competition":"Bayerische Kurzbahnmeisterschaften 2016"}
websocket backend mainchannel {"type":"start","size":"large","time":"1569662431"}
start
websocket backend send {"type":"start","size":"large","time":"1569662431"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:6,10","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:6,10","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:17,10","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:17,10","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:40,39","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:40,39","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:4,27","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:4,27","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:35,20","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:35,20","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:26,75","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:26,75","heat":"1"}
websocket backend Subscribing to mqtt://localhost
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"0:34,32","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"0:34,32","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"2","time":"0:51,79","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"2","time":"0:51,79","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"0:52,2","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"0:52,2","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"4","time":"1:59,97","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"4","time":"1:59,97","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"5","time":"0:57,36","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"5","time":"0:57,36","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"6","time":"0:22,52","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"6","time":"0:22,52","heat":"1"}
websocket backend mainchannel {"type":"stop","size":"large","time":"1569662431"}
stop
websocket backend send {"type":"stop","size":"large","time":"1569662431"}
websocket backend mainchannel {"event":"1","gender":"F","round":"PRE","relaycount":"1","swimstyle":"FREE","distance":"100","type":"header","heat":"2","competition":"Bayerische Kurzbahnmeisterschaften 2016"}
header
websocket backend send {"event":"1","gender":"F","round":"PRE","relaycount":"1","swimstyle":"FREE","distance":"100","type":"header","heat":"2","competition":"Bayerische Kurzbahnmeisterschaften 2016"}
websocket backend mainchannel {"type":"start","size":"large","time":"1569662431"}
start
websocket backend send {"type":"start","size":"large","time":"1569662431"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:25,65","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:25,65","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:13,17","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:13,17","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:55,8","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:55,8","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:40,89","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:40,89","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:36,39","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:36,39","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:3,44","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:3,44","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"1:7,72","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"1:7,72","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"2","time":"0:45,17","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"2","time":"0:45,17","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"1:53,38","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"1:53,38","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"4","time":"0:24,27","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"4","time":"0:24,27","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"5","time":"0:53,37","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"5","time":"0:53,37","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"6","time":"0:4,26","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"6","time":"0:4,26","heat":"2"}
websocket backend mainchannel {"type":"stop","size":"large","time":"1569662431"}
stop
websocket backend send {"type":"stop","size":"large","time":"1569662431"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend mainchannel {"event":"1","gender":"F","round":"PRE","relaycount":"1","swimstyle":"FREE","distance":"100","type":"header","heat":"3","competition":"Bayerische Kurzbahnmeisterschaften 2016"}
header
websocket backend send {"event":"1","gender":"F","round":"PRE","relaycount":"1","swimstyle":"FREE","distance":"100","type":"header","heat":"3","competition":"Bayerische Kurzbahnmeisterschaften 2016"}
websocket backend mainchannel {"type":"start","size":"large","time":"1569662431"}
start
websocket backend send {"type":"start","size":"large","time":"1569662431"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:50,4","heat":"3"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:50,4","heat":"3"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:34,52","heat":"3"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:34,52","heat":"3"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:24,19","heat":"3"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:24,19","heat":"3"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:2,71","heat":"3"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:2,71","heat":"3"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:10,68","heat":"3"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:10,68","heat":"3"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:1,4","heat":"3"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:1,4","heat":"3"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"1:34,25","heat":"3"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"1:34,25","heat":"3"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"2","time":"1:44,40","heat":"3"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"2","time":"1:44,40","heat":"3"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"1:33,40","heat":"3"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"1:33,40","heat":"3"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"4","time":"0:21,84","heat":"3"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"4","time":"0:21,84","heat":"3"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"5","time":"0:9,92","heat":"3"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"5","time":"0:9,92","heat":"3"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"6","time":"0:17,95","heat":"3"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"6","time":"0:17,95","heat":"3"}
websocket backend mainchannel {"type":"stop","size":"large","time":"1569662431"}
stop
websocket backend send {"type":"stop","size":"large","time":"1569662431"}
websocket backend mainchannel {"event":"1","gender":"F","round":"PRE","relaycount":"1","swimstyle":"FREE","distance":"100","type":"header","heat":"4","competition":"Bayerische Kurzbahnmeisterschaften 2016"}
header
websocket backend send {"event":"1","gender":"F","round":"PRE","relaycount":"1","swimstyle":"FREE","distance":"100","type":"header","heat":"4","competition":"Bayerische Kurzbahnmeisterschaften 2016"}
websocket backend mainchannel {"type":"start","size":"large","time":"1569662431"}
start
websocket backend send {"type":"start","size":"large","time":"1569662431"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:3,62","heat":"4"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:3,62","heat":"4"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:32,46","heat":"4"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:32,46","heat":"4"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:53,82","heat":"4"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:53,82","heat":"4"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:33,62","heat":"4"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:33,62","heat":"4"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:32,69","heat":"4"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:32,69","heat":"4"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:20,59","heat":"4"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:20,59","heat":"4"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"1:29,55","heat":"4"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"1:29,55","heat":"4"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"2","time":"0:48,43","heat":"4"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"2","time":"0:48,43","heat":"4"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"1:59,40","heat":"4"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"1:59,40","heat":"4"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"4","time":"1:16,33","heat":"4"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"4","time":"1:16,33","heat":"4"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"5","time":"0:51,81","heat":"4"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"5","time":"0:51,81","heat":"4"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"6","time":"1:54,18","heat":"4"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"6","time":"1:54,18","heat":"4"}
websocket backend mainchannel {"type":"stop","size":"large","time":"1569662431"}
stop
websocket backend send {"type":"stop","size":"large","time":"1569662431"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1569662431"}
clock
websocket backend send {"type":"clock","size":"large","time":"1569662431"}
websocket backend mainchannel {"event":"2","gender":"F","round":"PRE","relaycount":"1","swimstyle":"FREE","distance":"100","type":"header","heat":"1","competition":"Bayerische Kurzbahnmeisterschaften 2016"}
header
----------------- reset clock
websocket backend send {"event":"2","gender":"F","round":"PRE","relaycount":"1","swimstyle":"FREE","distance":"100","type":"header","heat":"1","competition":"Bayerische Kurzbahnmeisterschaften 2016"}
websocket backend mainchannel {"type":"start","size":"large","time":"1569662431"}
start
websocket backend send {"type":"start","size":"large","time":"1569662431"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"0","time":"0:15,87","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"0","time":"0:15,87","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"0","time":"0:6,11","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"0","time":"0:6,11","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"0","time":"0:46,63","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"0","time":"0:46,63","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"0","time":"0:54,52","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"0","time":"0:54,52","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"0","time":"1:10,44","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"0","time":"1:10,44","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"0","time":"1:42,97","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"0","time":"1:42,97","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"1","time":"1:35,19","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"1","time":"1:35,19","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"2","time":"1:45,85","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"2","time":"1:45,85","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"3","time":"1:8,54","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"3","time":"1:8,54","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"4","time":"1:26,38","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"4","time":"1:26,38","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"5","time":"1:10,57","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"5","time":"1:10,57","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"6","time":"1:49,23","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"6","time":"1:49,23","heat":"1"}
websocket backend mainchannel {"type":"stop","size":"large","time":"1569662431"}
stop
websocket backend send {"type":"stop","size":"large","time":"1569662431"}
websocket backend mainchannel {"event":"2","gender":"F","round":"PRE","relaycount":"1","swimstyle":"FREE","distance":"100","type":"header","heat":"2","competition":"Bayerische Kurzbahnmeisterschaften 2016"}
header
websocket backend send {"event":"2","gender":"F","round":"PRE","relaycount":"1","swimstyle":"FREE","distance":"100","type":"header","heat":"2","competition":"Bayerische Kurzbahnmeisterschaften 2016"}
websocket backend mainchannel {"type":"start","size":"large","time":"1569662431"}
start
websocket backend send {"type":"start","size":"large","time":"1569662431"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"0","time":"1:50,88","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"0","time":"1:50,88","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"0","time":"1:41,35","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"0","time":"1:41,35","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"0","time":"1:1,99","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"0","time":"1:1,99","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"0","time":"0:34,74","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"0","time":"0:34,74","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"0","time":"0:22,35","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"0","time":"0:22,35","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"0","time":"1:5,95","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"0","time":"1:5,95","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"1","time":"0:23,7","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"1","time":"0:23,7","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"2","time":"1:57,95","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"2","time":"1:57,95","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"3","time":"1:2,39","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"3","time":"1:2,39","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"4","time":"1:21,92","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"4","time":"1:21,92","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"5","time":"1:43,90","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"5","time":"1:43,90","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"6","time":"1:42,95","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"2","place":"6","time":"1:42,95","heat":"2"}
websocket backend mainchannel {"type":"stop","size":"large","time":"1569662431"}
stop
websocket backend send {"type":"stop","size":"large","time":"1569662431"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1569662431"}
clock
websocket backend send {"type":"clock","size":"large","time":"1569662431"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1569662431"}
clock
websocket backend send {"type":"clock","size":"large","time":"1569662431"}
websocket backend mainchannel {"event":"1","gender":"F","round":"PRE","relaycount":"1","swimstyle":"FREE","distance":"100","type":"header","heat":"1","competition":"Bayerische Kurzbahnmeisterschaften 2016"}
header
----------------- reset clock
websocket backend send {"event":"1","gender":"F","round":"PRE","relaycount":"1","swimstyle":"FREE","distance":"100","type":"header","heat":"1","competition":"Bayerische Kurzbahnmeisterschaften 2016"}
websocket backend mainchannel {"type":"start","size":"large","time":"1569662431"}
start
websocket backend send {"type":"start","size":"large","time":"1569662431"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:58,36","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:58,36","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:21,53","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:21,53","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:28,97","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:28,97","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:36,57","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:36,57","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:41,7","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:41,7","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:57,71","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:57,71","heat":"1"}
/POST
Message: {"message":"header 1 1"}
mqtt_handler datamapping incoming header 1 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584878270"}
websocket backend mainchannel {"type":"start","time":"1584878270"}
start
websocket backend send {"type":"start","time":"1584878270"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"header 1 1"}
mqtt_handler datamapping incoming header 1 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
/POST
Message: {"message":"header 1 0"}
mqtt_handler datamapping incoming header 1 0
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 0
<swim_events> getInternalHeatId 1 0
<swim_event> number heats 
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"0","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 2
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 3
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 4
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 5
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid  no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"0","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"0","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"0"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"0"}
websocket backend mainchannel {"type":"lane","lane":"2","event":"1","place":"undefined","time":"undefined","heat":"0"}
lane
websocket backend send {"type":"lane","lane":"2","event":"1","place":"undefined","time":"undefined","heat":"0"}
websocket backend mainchannel {"type":"lane","lane":"3","event":"1","place":"undefined","time":"undefined","heat":"0"}
lane
websocket backend send {"type":"lane","lane":"3","event":"1","place":"undefined","time":"undefined","heat":"0"}
websocket backend mainchannel {"type":"lane","lane":"4","event":"1","place":"undefined","time":"undefined","heat":"0"}
lane
websocket backend send {"type":"lane","lane":"4","event":"1","place":"undefined","time":"undefined","heat":"0"}
websocket backend mainchannel {"type":"lane","lane":"5","event":"1","place":"undefined","time":"undefined","heat":"0"}
lane
websocket backend send {"type":"lane","lane":"5","event":"1","place":"undefined","time":"undefined","heat":"0"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"0"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"0"}
/POST
Message: {"message":"header 1 2"}
mqtt_handler datamapping incoming header 1 2
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 2
<swim_events> getInternalHeatId 1 2
<swim_event> number heats 25608
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"header 1 1"}
mqtt_handler datamapping incoming header 1 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1569662431"}
clock
websocket backend send {"type":"clock","size":"large","time":"1569662431"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1569662431"}
clock
websocket backend send {"type":"clock","size":"large","time":"1569662431"}
websocket backend mainchannel {"event":"1","gender":"F","round":"PRE","relaycount":"1","swimstyle":"FREE","distance":"100","type":"header","heat":"1","competition":"Bayerische Kurzbahnmeisterschaften 2016"}
header
----------------- reset clock
websocket backend send {"event":"1","gender":"F","round":"PRE","relaycount":"1","swimstyle":"FREE","distance":"100","type":"header","heat":"1","competition":"Bayerische Kurzbahnmeisterschaften 2016"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend mainchannel {"type":"start","size":"large","time":"1569662431"}
start
websocket backend send {"type":"start","size":"large","time":"1569662431"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:39,22","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:39,22","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:46,37","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:46,37","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:54,52","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:54,52","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:54,85","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:54,85","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:53,6","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:53,6","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:48,26","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:48,26","heat":"1"}
websocket backend Subscribing to mqtt://localhost
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"0:54,38","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"0:54,38","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"2","time":"1:21,61","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"2","time":"1:21,61","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"1:35,64","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"1:35,64","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"4","time":"0:7,65","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"4","time":"0:7,65","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"5","time":"1:7,61","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"5","time":"1:7,61","heat":"1"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"6","time":"0:32,34","heat":"1"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"6","time":"0:32,34","heat":"1"}
websocket backend mainchannel {"type":"stop","size":"large","time":"1569662431"}
stop
websocket backend send {"type":"stop","size":"large","time":"1569662431"}
websocket backend mainchannel {"event":"1","gender":"F","round":"PRE","relaycount":"1","swimstyle":"FREE","distance":"100","type":"header","heat":"2","competition":"Bayerische Kurzbahnmeisterschaften 2016"}
header
websocket backend send {"event":"1","gender":"F","round":"PRE","relaycount":"1","swimstyle":"FREE","distance":"100","type":"header","heat":"2","competition":"Bayerische Kurzbahnmeisterschaften 2016"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend mainchannel {"type":"start","size":"large","time":"1569662431"}
start
websocket backend send {"type":"start","size":"large","time":"1569662431"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:18,94","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:18,94","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:41,28","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:41,28","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:35,36","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:35,36","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:13,54","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:13,54","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:28,43","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:28,43","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:51,84","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:51,84","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"0:27,71","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"1","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"0:27,71","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"2","time":"0:5,58","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"2","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"2","time":"0:5,58","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"0:13,85","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"3","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"0:13,85","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"4","time":"0:12,41","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"4","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"4","time":"0:12,41","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"5","time":"1:6,11","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"5","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"5","time":"1:6,11","heat":"2"}
websocket backend mainchannel {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"6","time":"0:26,9","heat":"2"}
lane
websocket backend send {"athleteid":"4002","birthdate":"2001-01-01","firstname":"Nele","lastname":"Rudolph",     "lane":"6","entrytime":"00:01:04.90","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"6","time":"0:26,9","heat":"2"}
websocket backend Client disconnected
websocket backend mainchannel {"type":"stop","size":"large","time":"1569662431"}
stop
websocket backend send {"type":"stop","size":"large","time":"1569662431"}
websocket backend Client disconnected
websocket backend mainchannel {"event":"1","gender":"F","round":"PRE","relaycount":"1","swimstyle":"FREE","distance":"100","type":"header","heat":"3","competition":"Bayerische Kurzbahnmeisterschaften 2016"}
header
websocket backend send {"event":"1","gender":"F","round":"PRE","relaycount":"1","swimstyle":"FREE","distance":"100","type":"header","heat":"3","competition":"Bayerische Kurzbahnmeisterschaften 2016"}
websocket backend Subscribing to mqtt://localhost
websocket backend mainchannel {"type":"start","size":"large","time":"1569662431"}
start
websocket backend send {"type":"start","size":"large","time":"1569662431"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584878456"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584878456"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584878456"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584878457"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584878457"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584878457"}
mqtt_handler datamapping incoming header 1 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
----------------- reset clock
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584878465"}
websocket backend mainchannel {"type":"start","time":"1584878465"}
start
websocket backend send {"type":"start","time":"1584878465"}
mqtt_handler datamapping incoming lane 1 0:52,30 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:52,30
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"1","place":"0","time":"0:52,30","heat":"1"}
<message_mapper> store lane 1: lane 1 0:52,30 0
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"0","time":"0:52,30","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"0","time":"0:52,30","heat":"1"}
mqtt_handler datamapping incoming lane 2 0:39,92 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:39,92
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:39,92","heat":"1"}
<message_mapper> store lane 2: lane 2 0:39,92 0
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:39,92","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:39,92","heat":"1"}
mqtt_handler datamapping incoming lane 3 0:49,61 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:49,61
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:49,61","heat":"1"}
<message_mapper> store lane 3: lane 3 0:49,61 0
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:49,61","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:49,61","heat":"1"}
mqtt_handler datamapping incoming lane 4 0:25,71 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:25,71
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"0:25,71","heat":"1"}
<message_mapper> store lane 4: lane 4 0:25,71 0
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"0:25,71","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"0:25,71","heat":"1"}
mqtt_handler datamapping incoming lane 5 0:7,35 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:7,35
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:7,35","heat":"1"}
<message_mapper> store lane 5: lane 5 0:7,35 0
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:7,35","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:7,35","heat":"1"}
mqtt_handler datamapping incoming lane 6 0:46,22 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:46,22
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"1","place":"0","time":"0:46,22","heat":"1"}
<message_mapper> store lane 6: lane 6 0:46,22 0
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"0","time":"0:46,22","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"0","time":"0:46,22","heat":"1"}
mqtt_handler datamapping incoming lane 1 1:55,78 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:55,78
(place)lane: 1
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"1","place":"1","time":"1:55,78","heat":"1"}
<message_mapper> store lane 1: lane 1 1:55,78 1
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"1","time":"1:55,78","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"1","time":"1:55,78","heat":"1"}
mqtt_handler datamapping incoming lane 2 0:26,91 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:26,91
(place)lane: 2
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"2","time":"0:26,91","heat":"1"}
<message_mapper> store lane 2: lane 2 0:26,91 2
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"2","time":"0:26,91","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"2","time":"0:26,91","heat":"1"}
mqtt_handler datamapping incoming lane 3 0:40,26 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:40,26
(place)lane: 3
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"0:40,26","heat":"1"}
<message_mapper> store lane 3: lane 3 0:40,26 3
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"0:40,26","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"0:40,26","heat":"1"}
mqtt_handler datamapping incoming lane 4 1:25,87 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:25,87
(place)lane: 4
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"4","time":"1:25,87","heat":"1"}
<message_mapper> store lane 4: lane 4 1:25,87 4
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"4","time":"1:25,87","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"4","time":"1:25,87","heat":"1"}
mqtt_handler datamapping incoming lane 5 1:47,60 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:47,60
(place)lane: 5
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"1:47,60","heat":"1"}
<message_mapper> store lane 5: lane 5 1:47,60 5
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"1:47,60","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"1:47,60","heat":"1"}
mqtt_handler datamapping incoming lane 6 1:17,21 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:17,21
(place)lane: 6
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"1","place":"6","time":"1:17,21","heat":"1"}
<message_mapper> store lane 6: lane 6 1:17,21 6
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"6","time":"1:17,21","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"6","time":"1:17,21","heat":"1"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584878477"}
websocket backend mainchannel {"type":"stop","time":"1584878477"}
stop
websocket backend send {"type":"stop","time":"1584878477"}
mqtt_handler datamapping incoming header 1 2
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 2
<swim_events> getInternalHeatId 1 2
<swim_event> number heats 25608
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584878483"}
websocket backend mainchannel {"type":"start","time":"1584878483"}
start
websocket backend send {"type":"start","time":"1584878483"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
mqtt_handler datamapping incoming lane 1 1:56,46 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:56,46
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:56,46","heat":"2"}
<message_mapper> store lane 1: lane 1 1:56,46 0
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:56,46","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:56,46","heat":"2"}
mqtt_handler datamapping incoming lane 2 0:25,22 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:25,22
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"0","time":"0:25,22","heat":"2"}
<message_mapper> store lane 2: lane 2 0:25,22 0
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"0","time":"0:25,22","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"0","time":"0:25,22","heat":"2"}
mqtt_handler datamapping incoming lane 3 1:11,30 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:11,30
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,30","heat":"2"}
<message_mapper> store lane 3: lane 3 1:11,30 0
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,30","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,30","heat":"2"}
mqtt_handler datamapping incoming lane 4 1:20,97 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:20,97
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"1:20,97","heat":"2"}
<message_mapper> store lane 4: lane 4 1:20,97 0
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"1:20,97","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"1:20,97","heat":"2"}
mqtt_handler datamapping incoming lane 5 1:2,84 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:2,84
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:2,84","heat":"2"}
<message_mapper> store lane 5: lane 5 1:2,84 0
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:2,84","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:2,84","heat":"2"}
mqtt_handler datamapping incoming lane 6 1:7,68 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:7,68
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"0","time":"1:7,68","heat":"2"}
<message_mapper> store lane 6: lane 6 1:7,68 0
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"0","time":"1:7,68","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"0","time":"1:7,68","heat":"2"}
mqtt_handler datamapping incoming lane 1 0:41,72 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:41,72
(place)lane: 1
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"0:41,72","heat":"2"}
<message_mapper> store lane 1: lane 1 0:41,72 1
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"0:41,72","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"0:41,72","heat":"2"}
mqtt_handler datamapping incoming lane 2 0:45,63 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:45,63
(place)lane: 2
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"2","time":"0:45,63","heat":"2"}
<message_mapper> store lane 2: lane 2 0:45,63 2
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"2","time":"0:45,63","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"2","time":"0:45,63","heat":"2"}
mqtt_handler datamapping incoming lane 3 1:48,94 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:48,94
(place)lane: 3
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"1:48,94","heat":"2"}
<message_mapper> store lane 3: lane 3 1:48,94 3
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"1:48,94","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"1:48,94","heat":"2"}
mqtt_handler datamapping incoming lane 4 0:43,10 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:43,10
(place)lane: 4
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"4","time":"0:43,10","heat":"2"}
<message_mapper> store lane 4: lane 4 0:43,10 4
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"4","time":"0:43,10","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"4","time":"0:43,10","heat":"2"}
mqtt_handler datamapping incoming lane 5 0:48,55 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:48,55
(place)lane: 5
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"0:48,55","heat":"2"}
<message_mapper> store lane 5: lane 5 0:48,55 5
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"0:48,55","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"0:48,55","heat":"2"}
mqtt_handler datamapping incoming lane 6 1:5,0 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:5,0
(place)lane: 6
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"6","time":"1:5,0","heat":"2"}
<message_mapper> store lane 6: lane 6 1:5,0 6
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"6","time":"1:5,0","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"6","time":"1:5,0","heat":"2"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584878494"}
websocket backend mainchannel {"type":"stop","time":"1584878494"}
stop
websocket backend send {"type":"stop","time":"1584878494"}
mqtt_handler datamapping incoming header 1 3
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 3
<swim_events> getInternalHeatId 1 3
<swim_event> number heats 25609
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584878500"}
websocket backend mainchannel {"type":"start","time":"1584878500"}
start
websocket backend send {"type":"start","time":"1584878500"}
mqtt_handler datamapping incoming lane 1 1:39,61 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:39,61
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:39,61","heat":"3"}
<message_mapper> store lane 1: lane 1 1:39,61 0
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:39,61","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:39,61","heat":"3"}
mqtt_handler datamapping incoming lane 2 0:21,95 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:21,95
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:21,95","heat":"3"}
<message_mapper> store lane 2: lane 2 0:21,95 0
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:21,95","heat":"3"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:21,95","heat":"3"}
mqtt_handler datamapping incoming lane 3 0:33,25 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:33,25
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:33,25","heat":"3"}
<message_mapper> store lane 3: lane 3 0:33,25 0
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:33,25","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:33,25","heat":"3"}
mqtt_handler datamapping incoming lane 4 1:59,94 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:59,94
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:59,94","heat":"3"}
<message_mapper> store lane 4: lane 4 1:59,94 0
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:59,94","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:59,94","heat":"3"}
mqtt_handler datamapping incoming lane 5 1:43,6 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:43,6
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:43,6","heat":"3"}
<message_mapper> store lane 5: lane 5 1:43,6 0
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:43,6","heat":"3"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:43,6","heat":"3"}
mqtt_handler datamapping incoming lane 6 0:53,21 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:53,21
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:53,21","heat":"3"}
<message_mapper> store lane 6: lane 6 0:53,21 0
websocket backend mainchannel {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:53,21","heat":"3"}
lane
websocket backend send {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:53,21","heat":"3"}
mqtt_handler datamapping incoming lane 1 0:2,10 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:2,10
(place)lane: 1
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"0:2,10","heat":"3"}
<message_mapper> store lane 1: lane 1 0:2,10 1
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"0:2,10","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"0:2,10","heat":"3"}
mqtt_handler datamapping incoming lane 2 1:47,97 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:47,97
(place)lane: 2
<swim_event> get swimmer for internalheatid 25609 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"2","time":"1:47,97","heat":"3"}
<message_mapper> store lane 2: lane 2 1:47,97 2
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"2","time":"1:47,97","heat":"3"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"2","time":"1:47,97","heat":"3"}
mqtt_handler datamapping incoming lane 3 0:30,37 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:30,37
(place)lane: 3
<swim_event> get swimmer for internalheatid 25609 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"0:30,37","heat":"3"}
<message_mapper> store lane 3: lane 3 0:30,37 3
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"0:30,37","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"0:30,37","heat":"3"}
mqtt_handler datamapping incoming lane 4 0:44,60 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:44,60
(place)lane: 4
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"4","time":"0:44,60","heat":"3"}
<message_mapper> store lane 4: lane 4 0:44,60 4
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"4","time":"0:44,60","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"4","time":"0:44,60","heat":"3"}
mqtt_handler datamapping incoming lane 5 1:38,36 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:38,36
(place)lane: 5
<swim_event> get swimmer for internalheatid 25609 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"1:38,36","heat":"3"}
<message_mapper> store lane 5: lane 5 1:38,36 5
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"1:38,36","heat":"3"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"1:38,36","heat":"3"}
mqtt_handler datamapping incoming lane 6 0:0,95 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:0,95
(place)lane: 6
<swim_event> get swimmer for internalheatid 25609 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"6","time":"0:0,95","heat":"3"}
<message_mapper> store lane 6: lane 6 0:0,95 6
websocket backend mainchannel {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"6","time":"0:0,95","heat":"3"}
lane
websocket backend send {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"6","time":"0:0,95","heat":"3"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584878511"}
websocket backend mainchannel {"type":"stop","time":"1584878511"}
stop
websocket backend send {"type":"stop","time":"1584878511"}
mqtt_handler datamapping incoming header 1 4
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 4
<swim_events> getInternalHeatId 1 4
<swim_event> number heats 25610
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"4","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"4","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"4","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584878518"}
websocket backend mainchannel {"type":"start","time":"1584878518"}
start
websocket backend send {"type":"start","time":"1584878518"}
mqtt_handler datamapping incoming lane 1 1:46,83 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:46,83
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:46,83","heat":"4"}
<message_mapper> store lane 1: lane 1 1:46,83 0
websocket backend mainchannel {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:46,83","heat":"4"}
lane
websocket backend send {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:46,83","heat":"4"}
mqtt_handler datamapping incoming lane 2 1:27,84 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:27,84
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:27,84","heat":"4"}
<message_mapper> store lane 2: lane 2 1:27,84 0
websocket backend mainchannel {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:27,84","heat":"4"}
lane
websocket backend send {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:27,84","heat":"4"}
mqtt_handler datamapping incoming lane 3 0:31,91 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:31,91
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:31,91","heat":"4"}
<message_mapper> store lane 3: lane 3 0:31,91 0
websocket backend mainchannel {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:31,91","heat":"4"}
lane
websocket backend send {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:31,91","heat":"4"}
mqtt_handler datamapping incoming lane 4 1:8,29 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:8,29
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"0","time":"1:8,29","heat":"4"}
<message_mapper> store lane 4: lane 4 1:8,29 0
websocket backend mainchannel {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"0","time":"1:8,29","heat":"4"}
lane
websocket backend send {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"0","time":"1:8,29","heat":"4"}
mqtt_handler datamapping incoming lane 5 0:30,3 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:30,3
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:30,3","heat":"4"}
<message_mapper> store lane 5: lane 5 0:30,3 0
websocket backend mainchannel {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:30,3","heat":"4"}
lane
websocket backend send {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:30,3","heat":"4"}
mqtt_handler datamapping incoming lane 6 0:36,84 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:36,84
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"0:36,84","heat":"4"}
<message_mapper> store lane 6: lane 6 0:36,84 0
websocket backend mainchannel {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"0:36,84","heat":"4"}
lane
websocket backend send {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"0:36,84","heat":"4"}
/POST
Message: {"message":"stop"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584878528"}
websocket backend mainchannel {"type":"stop","time":"1584878528"}
stop
websocket backend send {"type":"stop","time":"1584878528"}
/POST
Message: {"message":"header 1 1"}
mqtt_handler datamapping incoming header 1 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584878874"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584878874"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584878874"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584878875"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584878875"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584878875"}
mqtt_handler datamapping incoming header 1 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
----------------- reset clock
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584878883"}
websocket backend mainchannel {"type":"start","time":"1584878883"}
start
websocket backend send {"type":"start","time":"1584878883"}
mqtt_handler datamapping incoming lane 1 1:53,26 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:53,26
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"1","place":"0","time":"1:53,26","heat":"1"}
<message_mapper> store lane 1: lane 1 1:53,26 0
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"0","time":"1:53,26","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"0","time":"1:53,26","heat":"1"}
mqtt_handler datamapping incoming lane 2 1:5,96 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:5,96
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"1:5,96","heat":"1"}
<message_mapper> store lane 2: lane 2 1:5,96 0
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"1:5,96","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"1:5,96","heat":"1"}
mqtt_handler datamapping incoming lane 3 0:8,88 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:8,88
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:8,88","heat":"1"}
<message_mapper> store lane 3: lane 3 0:8,88 0
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:8,88","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:8,88","heat":"1"}
mqtt_handler datamapping incoming lane 4 0:9,90 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:9,90
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"0:9,90","heat":"1"}
<message_mapper> store lane 4: lane 4 0:9,90 0
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"0:9,90","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"0:9,90","heat":"1"}
mqtt_handler datamapping incoming lane 5 1:13,4 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:13,4
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:13,4","heat":"1"}
<message_mapper> store lane 5: lane 5 1:13,4 0
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:13,4","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:13,4","heat":"1"}
mqtt_handler datamapping incoming lane 6 0:48,80 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:48,80
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"1","place":"0","time":"0:48,80","heat":"1"}
<message_mapper> store lane 6: lane 6 0:48,80 0
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"0","time":"0:48,80","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"0","time":"0:48,80","heat":"1"}
mqtt_handler datamapping incoming lane 1 0:24,85 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:24,85
(place)lane: 1
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"1","place":"1","time":"0:24,85","heat":"1"}
<message_mapper> store lane 1: lane 1 0:24,85 1
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"1","time":"0:24,85","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"1","time":"0:24,85","heat":"1"}
mqtt_handler datamapping incoming lane 2 0:10,69 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:10,69
(place)lane: 2
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"2","time":"0:10,69","heat":"1"}
<message_mapper> store lane 2: lane 2 0:10,69 2
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"2","time":"0:10,69","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"2","time":"0:10,69","heat":"1"}
mqtt_handler datamapping incoming lane 3 0:10,11 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:10,11
(place)lane: 3
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"0:10,11","heat":"1"}
<message_mapper> store lane 3: lane 3 0:10,11 3
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"0:10,11","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"0:10,11","heat":"1"}
mqtt_handler datamapping incoming lane 4 1:43,32 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:43,32
(place)lane: 4
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"4","time":"1:43,32","heat":"1"}
<message_mapper> store lane 4: lane 4 1:43,32 4
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"4","time":"1:43,32","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"4","time":"1:43,32","heat":"1"}
mqtt_handler datamapping incoming lane 5 0:42,19 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:42,19
(place)lane: 5
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"0:42,19","heat":"1"}
<message_mapper> store lane 5: lane 5 0:42,19 5
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"0:42,19","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"0:42,19","heat":"1"}
mqtt_handler datamapping incoming lane 6 1:11,35 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:11,35
(place)lane: 6
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"1","place":"6","time":"1:11,35","heat":"1"}
<message_mapper> store lane 6: lane 6 1:11,35 6
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"6","time":"1:11,35","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"6","time":"1:11,35","heat":"1"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584878895"}
websocket backend mainchannel {"type":"stop","time":"1584878895"}
stop
websocket backend send {"type":"stop","time":"1584878895"}
mqtt_handler datamapping incoming header 1 2
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 2
<swim_events> getInternalHeatId 1 2
<swim_event> number heats 25608
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584878901"}
websocket backend mainchannel {"type":"start","time":"1584878901"}
start
websocket backend send {"type":"start","time":"1584878901"}
mqtt_handler datamapping incoming lane 1 1:18,22 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:18,22
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:18,22","heat":"2"}
<message_mapper> store lane 1: lane 1 1:18,22 0
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:18,22","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:18,22","heat":"2"}
mqtt_handler datamapping incoming lane 2 1:17,10 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:17,10
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"0","time":"1:17,10","heat":"2"}
<message_mapper> store lane 2: lane 2 1:17,10 0
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"0","time":"1:17,10","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"0","time":"1:17,10","heat":"2"}
mqtt_handler datamapping incoming lane 3 1:29,14 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:29,14
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:29,14","heat":"2"}
<message_mapper> store lane 3: lane 3 1:29,14 0
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:29,14","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:29,14","heat":"2"}
mqtt_handler datamapping incoming lane 4 0:49,98 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:49,98
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:49,98","heat":"2"}
<message_mapper> store lane 4: lane 4 0:49,98 0
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:49,98","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:49,98","heat":"2"}
mqtt_handler datamapping incoming lane 5 0:48,6 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:48,6
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:48,6","heat":"2"}
<message_mapper> store lane 5: lane 5 0:48,6 0
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:48,6","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:48,6","heat":"2"}
mqtt_handler datamapping incoming lane 6 1:19,61 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:19,61
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"0","time":"1:19,61","heat":"2"}
<message_mapper> store lane 6: lane 6 1:19,61 0
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"0","time":"1:19,61","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"0","time":"1:19,61","heat":"2"}
mqtt_handler datamapping incoming lane 1 1:47,27 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:47,27
(place)lane: 1
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:47,27","heat":"2"}
<message_mapper> store lane 1: lane 1 1:47,27 1
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:47,27","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:47,27","heat":"2"}
mqtt_handler datamapping incoming lane 2 1:30,87 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:30,87
(place)lane: 2
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"2","time":"1:30,87","heat":"2"}
<message_mapper> store lane 2: lane 2 1:30,87 2
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"2","time":"1:30,87","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"2","time":"1:30,87","heat":"2"}
mqtt_handler datamapping incoming lane 3 1:19,50 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:19,50
(place)lane: 3
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"1:19,50","heat":"2"}
<message_mapper> store lane 3: lane 3 1:19,50 3
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"1:19,50","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"1:19,50","heat":"2"}
mqtt_handler datamapping incoming lane 4 0:41,7 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:41,7
(place)lane: 4
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"4","time":"0:41,7","heat":"2"}
<message_mapper> store lane 4: lane 4 0:41,7 4
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"4","time":"0:41,7","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"4","time":"0:41,7","heat":"2"}
mqtt_handler datamapping incoming lane 5 0:9,18 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:9,18
(place)lane: 5
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"0:9,18","heat":"2"}
<message_mapper> store lane 5: lane 5 0:9,18 5
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"0:9,18","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"0:9,18","heat":"2"}
mqtt_handler datamapping incoming lane 6 1:59,98 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:59,98
(place)lane: 6
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"6","time":"1:59,98","heat":"2"}
<message_mapper> store lane 6: lane 6 1:59,98 6
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"6","time":"1:59,98","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"6","time":"1:59,98","heat":"2"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584878912"}
websocket backend mainchannel {"type":"stop","time":"1584878912"}
stop
websocket backend send {"type":"stop","time":"1584878912"}
mqtt_handler datamapping incoming header 1 3
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 3
<swim_events> getInternalHeatId 1 3
<swim_event> number heats 25609
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584878918"}
websocket backend mainchannel {"type":"start","time":"1584878918"}
start
websocket backend send {"type":"start","time":"1584878918"}
mqtt_handler datamapping incoming lane 1 1:52,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:52,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:52,11","heat":"3"}
<message_mapper> store lane 1: lane 1 1:52,11 0
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:52,11","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:52,11","heat":"3"}
mqtt_handler datamapping incoming lane 2 0:8,45 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:8,45
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:8,45","heat":"3"}
<message_mapper> store lane 2: lane 2 0:8,45 0
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:8,45","heat":"3"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:8,45","heat":"3"}
mqtt_handler datamapping incoming lane 3 0:25,55 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:25,55
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:25,55","heat":"3"}
<message_mapper> store lane 3: lane 3 0:25,55 0
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:25,55","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"0:25,55","heat":"3"}
mqtt_handler datamapping incoming lane 4 0:12,8 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:12,8
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:12,8","heat":"3"}
<message_mapper> store lane 4: lane 4 0:12,8 0
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:12,8","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:12,8","heat":"3"}
mqtt_handler datamapping incoming lane 5 1:11,34 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:11,34
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,34","heat":"3"}
<message_mapper> store lane 5: lane 5 1:11,34 0
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,34","heat":"3"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,34","heat":"3"}
mqtt_handler datamapping incoming lane 6 1:37,16 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:37,16
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:37,16","heat":"3"}
<message_mapper> store lane 6: lane 6 1:37,16 0
websocket backend mainchannel {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:37,16","heat":"3"}
lane
websocket backend send {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:37,16","heat":"3"}
mqtt_handler datamapping incoming lane 1 0:19,1 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:19,1
(place)lane: 1
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"0:19,1","heat":"3"}
<message_mapper> store lane 1: lane 1 0:19,1 1
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"0:19,1","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"0:19,1","heat":"3"}
mqtt_handler datamapping incoming lane 2 1:47,4 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:47,4
(place)lane: 2
<swim_event> get swimmer for internalheatid 25609 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"2","time":"1:47,4","heat":"3"}
<message_mapper> store lane 2: lane 2 1:47,4 2
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"2","time":"1:47,4","heat":"3"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"2","time":"1:47,4","heat":"3"}
mqtt_handler datamapping incoming lane 3 0:16,53 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:16,53
(place)lane: 3
<swim_event> get swimmer for internalheatid 25609 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"0:16,53","heat":"3"}
<message_mapper> store lane 3: lane 3 0:16,53 3
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"0:16,53","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"0:16,53","heat":"3"}
mqtt_handler datamapping incoming lane 4 1:24,48 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:24,48
(place)lane: 4
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"4","time":"1:24,48","heat":"3"}
<message_mapper> store lane 4: lane 4 1:24,48 4
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"4","time":"1:24,48","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"4","time":"1:24,48","heat":"3"}
mqtt_handler datamapping incoming lane 5 1:21,37 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:21,37
(place)lane: 5
<swim_event> get swimmer for internalheatid 25609 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"1:21,37","heat":"3"}
<message_mapper> store lane 5: lane 5 1:21,37 5
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"1:21,37","heat":"3"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"1:21,37","heat":"3"}
mqtt_handler datamapping incoming lane 6 1:6,6 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:6,6
(place)lane: 6
<swim_event> get swimmer for internalheatid 25609 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"6","time":"1:6,6","heat":"3"}
<message_mapper> store lane 6: lane 6 1:6,6 6
websocket backend mainchannel {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"6","time":"1:6,6","heat":"3"}
lane
websocket backend send {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"6","time":"1:6,6","heat":"3"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584878929"}
websocket backend mainchannel {"type":"stop","time":"1584878929"}
stop
websocket backend send {"type":"stop","time":"1584878929"}
mqtt_handler datamapping incoming header 1 4
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 4
<swim_events> getInternalHeatId 1 4
<swim_event> number heats 25610
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"4","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"4","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"4","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584878935"}
websocket backend mainchannel {"type":"start","time":"1584878935"}
start
websocket backend send {"type":"start","time":"1584878935"}
mqtt_handler datamapping incoming lane 1 0:0,52 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:0,52
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:0,52","heat":"4"}
<message_mapper> store lane 1: lane 1 0:0,52 0
websocket backend mainchannel {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:0,52","heat":"4"}
lane
websocket backend send {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:0,52","heat":"4"}
mqtt_handler datamapping incoming lane 2 1:25,57 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:25,57
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:25,57","heat":"4"}
<message_mapper> store lane 2: lane 2 1:25,57 0
websocket backend mainchannel {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:25,57","heat":"4"}
lane
websocket backend send {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:25,57","heat":"4"}
mqtt_handler datamapping incoming lane 3 0:13,18 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:13,18
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:13,18","heat":"4"}
<message_mapper> store lane 3: lane 3 0:13,18 0
websocket backend mainchannel {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:13,18","heat":"4"}
lane
websocket backend send {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:13,18","heat":"4"}
mqtt_handler datamapping incoming lane 4 0:47,24 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:47,24
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"0","time":"0:47,24","heat":"4"}
<message_mapper> store lane 4: lane 4 0:47,24 0
websocket backend mainchannel {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"0","time":"0:47,24","heat":"4"}
lane
websocket backend send {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"0","time":"0:47,24","heat":"4"}
mqtt_handler datamapping incoming lane 5 1:23,52 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:23,52
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:23,52","heat":"4"}
<message_mapper> store lane 5: lane 5 1:23,52 0
websocket backend mainchannel {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:23,52","heat":"4"}
lane
websocket backend send {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:23,52","heat":"4"}
mqtt_handler datamapping incoming lane 6 1:28,81 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:28,81
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"1:28,81","heat":"4"}
<message_mapper> store lane 6: lane 6 1:28,81 0
websocket backend mainchannel {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"1:28,81","heat":"4"}
lane
websocket backend send {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"1:28,81","heat":"4"}
mqtt_handler datamapping incoming lane 1 1:28,89 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:28,89
(place)lane: 1
<swim_event> get swimmer for internalheatid 25610 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:28,89","heat":"4"}
<message_mapper> store lane 1: lane 1 1:28,89 1
websocket backend mainchannel {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:28,89","heat":"4"}
lane
websocket backend send {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:28,89","heat":"4"}
mqtt_handler datamapping incoming lane 2 1:6,58 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:6,58
(place)lane: 2
<swim_event> get swimmer for internalheatid 25610 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"2","time":"1:6,58","heat":"4"}
<message_mapper> store lane 2: lane 2 1:6,58 2
websocket backend mainchannel {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"2","time":"1:6,58","heat":"4"}
lane
websocket backend send {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"2","time":"1:6,58","heat":"4"}
mqtt_handler datamapping incoming lane 3 0:36,66 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:36,66
(place)lane: 3
<swim_event> get swimmer for internalheatid 25610 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"0:36,66","heat":"4"}
<message_mapper> store lane 3: lane 3 0:36,66 3
websocket backend mainchannel {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"0:36,66","heat":"4"}
lane
websocket backend send {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"0:36,66","heat":"4"}
mqtt_handler datamapping incoming lane 4 1:44,67 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:44,67
(place)lane: 4
<swim_event> get swimmer for internalheatid 25610 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"4","time":"1:44,67","heat":"4"}
<message_mapper> store lane 4: lane 4 1:44,67 4
websocket backend mainchannel {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"4","time":"1:44,67","heat":"4"}
lane
websocket backend send {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"4","time":"1:44,67","heat":"4"}
mqtt_handler datamapping incoming lane 5 0:59,27 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:59,27
(place)lane: 5
<swim_event> get swimmer for internalheatid 25610 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"0:59,27","heat":"4"}
<message_mapper> store lane 5: lane 5 0:59,27 5
websocket backend mainchannel {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"0:59,27","heat":"4"}
lane
websocket backend send {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"0:59,27","heat":"4"}
mqtt_handler datamapping incoming lane 6 1:4,76 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:4,76
(place)lane: 6
<swim_event> get swimmer for internalheatid 25610 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"6","time":"1:4,76","heat":"4"}
<message_mapper> store lane 6: lane 6 1:4,76 6
websocket backend mainchannel {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"6","time":"1:4,76","heat":"4"}
lane
websocket backend send {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"6","time":"1:4,76","heat":"4"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584878946"}
websocket backend mainchannel {"type":"stop","time":"1584878946"}
stop
websocket backend send {"type":"stop","time":"1584878946"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584878949"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584878949"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584878949"}
mqtt_handler datamapping incoming header 2 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -2-
HEAT: 1
<swim_events> getInternalHeatId 2 1
<swim_event> number heats 25612
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"2","heat":"1","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25612 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25612 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25612 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25612 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25612 no relay lane 5
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25612 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"1","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
----------------- reset clock
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"1","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"2","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"2","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"5","event":"2","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"5","event":"2","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"1"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584878958"}
websocket backend mainchannel {"type":"start","time":"1584878958"}
start
websocket backend send {"type":"start","time":"1584878958"}
mqtt_handler datamapping incoming lane 1 1:42,88 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:42,88
(place)lane: 0
<swim_event> get swimmer for internalheatid 25612 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"2","place":"0","time":"1:42,88","heat":"1"}
<message_mapper> store lane 1: lane 1 1:42,88 0
websocket backend mainchannel {"type":"lane","lane":"1","event":"2","place":"0","time":"1:42,88","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"2","place":"0","time":"1:42,88","heat":"1"}
mqtt_handler datamapping incoming lane 2 0:35,49 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:35,49
(place)lane: 0
<swim_event> get swimmer for internalheatid 25612 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"0:35,49","heat":"1"}
<message_mapper> store lane 2: lane 2 0:35,49 0
websocket backend mainchannel {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"0:35,49","heat":"1"}
lane
websocket backend send {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"0:35,49","heat":"1"}
mqtt_handler datamapping incoming lane 3 0:14,37 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:14,37
(place)lane: 0
<swim_event> get swimmer for internalheatid 25612 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"0:14,37","heat":"1"}
<message_mapper> store lane 3: lane 3 0:14,37 0
websocket backend mainchannel {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"0:14,37","heat":"1"}
lane
websocket backend send {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"0:14,37","heat":"1"}
mqtt_handler datamapping incoming lane 4 1:22,83 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:22,83
(place)lane: 0
<swim_event> get swimmer for internalheatid 25612 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"0","time":"1:22,83","heat":"1"}
<message_mapper> store lane 4: lane 4 1:22,83 0
websocket backend mainchannel {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"0","time":"1:22,83","heat":"1"}
lane
websocket backend send {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"0","time":"1:22,83","heat":"1"}
mqtt_handler datamapping incoming lane 5 0:1,8 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:1,8
(place)lane: 0
<swim_event> get swimmer for internalheatid 25612 no relay lane 5
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"5","event":"2","place":"0","time":"0:1,8","heat":"1"}
<message_mapper> store lane 5: lane 5 0:1,8 0
websocket backend mainchannel {"type":"lane","lane":"5","event":"2","place":"0","time":"0:1,8","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"5","event":"2","place":"0","time":"0:1,8","heat":"1"}
mqtt_handler datamapping incoming lane 6 0:14,64 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:14,64
(place)lane: 0
<swim_event> get swimmer for internalheatid 25612 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"2","place":"0","time":"0:14,64","heat":"1"}
<message_mapper> store lane 6: lane 6 0:14,64 0
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"0","time":"0:14,64","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"0","time":"0:14,64","heat":"1"}
mqtt_handler datamapping incoming lane 1 1:29,70 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:29,70
(place)lane: 1
<swim_event> get swimmer for internalheatid 25612 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"2","place":"1","time":"1:29,70","heat":"1"}
<message_mapper> store lane 1: lane 1 1:29,70 1
websocket backend mainchannel {"type":"lane","lane":"1","event":"2","place":"1","time":"1:29,70","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"2","place":"1","time":"1:29,70","heat":"1"}
mqtt_handler datamapping incoming lane 2 1:3,28 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:3,28
(place)lane: 2
<swim_event> get swimmer for internalheatid 25612 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"2","time":"1:3,28","heat":"1"}
<message_mapper> store lane 2: lane 2 1:3,28 2
websocket backend mainchannel {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"2","time":"1:3,28","heat":"1"}
lane
websocket backend send {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"2","time":"1:3,28","heat":"1"}
mqtt_handler datamapping incoming lane 3 1:0,0 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:0,0
(place)lane: 3
<swim_event> get swimmer for internalheatid 25612 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"3","time":"1:0,0","heat":"1"}
<message_mapper> store lane 3: lane 3 1:0,0 3
websocket backend mainchannel {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"3","time":"1:0,0","heat":"1"}
lane
websocket backend send {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"3","time":"1:0,0","heat":"1"}
mqtt_handler datamapping incoming lane 4 0:51,32 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:51,32
(place)lane: 4
<swim_event> get swimmer for internalheatid 25612 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"4","time":"0:51,32","heat":"1"}
<message_mapper> store lane 4: lane 4 0:51,32 4
websocket backend mainchannel {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"4","time":"0:51,32","heat":"1"}
lane
websocket backend send {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"4","time":"0:51,32","heat":"1"}
mqtt_handler datamapping incoming lane 5 0:46,23 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:46,23
(place)lane: 5
<swim_event> get swimmer for internalheatid 25612 no relay lane 5
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"5","event":"2","place":"5","time":"0:46,23","heat":"1"}
<message_mapper> store lane 5: lane 5 0:46,23 5
websocket backend mainchannel {"type":"lane","lane":"5","event":"2","place":"5","time":"0:46,23","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"5","event":"2","place":"5","time":"0:46,23","heat":"1"}
mqtt_handler datamapping incoming lane 6 0:37,96 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:37,96
(place)lane: 6
<swim_event> get swimmer for internalheatid 25612 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"2","place":"6","time":"0:37,96","heat":"1"}
<message_mapper> store lane 6: lane 6 0:37,96 6
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"6","time":"0:37,96","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"6","time":"0:37,96","heat":"1"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584878969"}
websocket backend mainchannel {"type":"stop","time":"1584878969"}
stop
websocket backend send {"type":"stop","time":"1584878969"}
mqtt_handler datamapping incoming header 2 2
<message_mapper> beginn parse
<incoming> Type: header
Event: -2-
HEAT: 2
<swim_events> getInternalHeatId 2 2
<swim_event> number heats 25613
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"2","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"2"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584878975"}
websocket backend mainchannel {"type":"start","time":"1584878975"}
start
websocket backend send {"type":"start","time":"1584878975"}
mqtt_handler datamapping incoming lane 1 0:13,68 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:13,68
(place)lane: 0
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"0","time":"0:13,68","heat":"2"}
<message_mapper> store lane 1: lane 1 0:13,68 0
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"0","time":"0:13,68","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"0","time":"0:13,68","heat":"2"}
mqtt_handler datamapping incoming lane 2 1:45,30 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:45,30
(place)lane: 0
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"1:45,30","heat":"2"}
<message_mapper> store lane 2: lane 2 1:45,30 0
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"1:45,30","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"1:45,30","heat":"2"}
mqtt_handler datamapping incoming lane 3 1:48,59 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:48,59
(place)lane: 0
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"1:48,59","heat":"2"}
<message_mapper> store lane 3: lane 3 1:48,59 0
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"1:48,59","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"1:48,59","heat":"2"}
mqtt_handler datamapping incoming lane 4 0:7,7 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:7,7
(place)lane: 0
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"0:7,7","heat":"2"}
<message_mapper> store lane 4: lane 4 0:7,7 0
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"0:7,7","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"0:7,7","heat":"2"}
mqtt_handler datamapping incoming lane 5 1:54,3 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:54,3
(place)lane: 0
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"1:54,3","heat":"2"}
<message_mapper> store lane 5: lane 5 1:54,3 0
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"1:54,3","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"1:54,3","heat":"2"}
mqtt_handler datamapping incoming lane 6 0:56,6 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:56,6
(place)lane: 0
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"2","place":"0","time":"0:56,6","heat":"2"}
<message_mapper> store lane 6: lane 6 0:56,6 0
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"0","time":"0:56,6","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"0","time":"0:56,6","heat":"2"}
mqtt_handler datamapping incoming lane 1 0:48,42 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:48,42
(place)lane: 1
<swim_event> get swimmer for internalheatid 25613 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"1","time":"0:48,42","heat":"2"}
<message_mapper> store lane 1: lane 1 0:48,42 1
websocket backend mainchannel {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"1","time":"0:48,42","heat":"2"}
lane
websocket backend send {"athleteid":"25386","birthdate":"2012-01-01","firstname":"Klara","lastname":"Nagler","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"1","time":"0:48,42","heat":"2"}
mqtt_handler datamapping incoming lane 2 0:41,59 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:41,59
(place)lane: 2
<swim_event> get swimmer for internalheatid 25613 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"2","time":"0:41,59","heat":"2"}
<message_mapper> store lane 2: lane 2 0:41,59 2
websocket backend mainchannel {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"2","time":"0:41,59","heat":"2"}
lane
websocket backend send {"athleteid":"24457","birthdate":"2012-01-01","firstname":"Hanna","lastname":"Skamrahl","lane":"2","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"2","time":"0:41,59","heat":"2"}
mqtt_handler datamapping incoming lane 3 1:2,89 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:2,89
(place)lane: 3
<swim_event> get swimmer for internalheatid 25613 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"3","time":"1:2,89","heat":"2"}
<message_mapper> store lane 3: lane 3 1:2,89 3
websocket backend mainchannel {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"3","time":"1:2,89","heat":"2"}
lane
websocket backend send {"athleteid":"24351","birthdate":"2013-01-01","firstname":"Elisa","lastname":"Graf","lane":"3","entrytime":"00:00:54.94","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"3","time":"1:2,89","heat":"2"}
mqtt_handler datamapping incoming lane 4 1:9,61 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:9,61
(place)lane: 4
<swim_event> get swimmer for internalheatid 25613 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"4","time":"1:9,61","heat":"2"}
<message_mapper> store lane 4: lane 4 1:9,61 4
websocket backend mainchannel {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"4","time":"1:9,61","heat":"2"}
lane
websocket backend send {"athleteid":"24467","birthdate":"2012-01-01","firstname":"Lena","lastname":"Troll","lane":"4","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"4","time":"1:9,61","heat":"2"}
mqtt_handler datamapping incoming lane 5 1:5,35 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:5,35
(place)lane: 5
<swim_event> get swimmer for internalheatid 25613 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"5","time":"1:5,35","heat":"2"}
<message_mapper> store lane 5: lane 5 1:5,35 5
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"5","time":"1:5,35","heat":"2"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"5","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"5","time":"1:5,35","heat":"2"}
mqtt_handler datamapping incoming lane 6 0:50,52 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:50,52
(place)lane: 6
<swim_event> get swimmer for internalheatid 25613 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"2","place":"6","time":"0:50,52","heat":"2"}
<message_mapper> store lane 6: lane 6 0:50,52 6
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"6","time":"0:50,52","heat":"2"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"6","time":"0:50,52","heat":"2"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584878986"}
websocket backend mainchannel {"type":"stop","time":"1584878986"}
stop
websocket backend send {"type":"stop","time":"1584878986"}
mqtt_handler datamapping incoming header 2 3
<message_mapper> beginn parse
<incoming> Type: header
Event: -2-
HEAT: 3
<swim_events> getInternalHeatId 2 3
<swim_event> number heats 25614
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"2","heat":"3","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25614 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25614 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25614 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25614 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25614 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25614 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"3","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"3","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24323","birthdate":"2013-01-01","firstname":"Alina","lastname":"Zeder","lane":"3","entrytime":"00:00:39.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24323","birthdate":"2013-01-01","firstname":"Alina","lastname":"Zeder","lane":"3","entrytime":"00:00:39.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"4","entrytime":"00:00:39.89","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"4","entrytime":"00:00:39.89","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24529","birthdate":"2013-01-01","firstname":"Louisa","lastname":"Heidenreich","lane":"5","entrytime":"00:00:42.76","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24529","birthdate":"2013-01-01","firstname":"Louisa","lastname":"Heidenreich","lane":"5","entrytime":"00:00:42.76","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"6","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"6","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"3"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584878992"}
websocket backend mainchannel {"type":"start","time":"1584878992"}
start
websocket backend send {"type":"start","time":"1584878992"}
mqtt_handler datamapping incoming lane 1 1:28,31 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:28,31
(place)lane: 0
<swim_event> get swimmer for internalheatid 25614 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"1:28,31","heat":"3"}
<message_mapper> store lane 1: lane 1 1:28,31 0
websocket backend mainchannel {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"1:28,31","heat":"3"}
lane
websocket backend send {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"1:28,31","heat":"3"}
mqtt_handler datamapping incoming lane 2 0:39,3 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:39,3
(place)lane: 0
<swim_event> get swimmer for internalheatid 25614 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"0","time":"0:39,3","heat":"3"}
<message_mapper> store lane 2: lane 2 0:39,3 0
websocket backend mainchannel {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"0","time":"0:39,3","heat":"3"}
lane
websocket backend send {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"0","time":"0:39,3","heat":"3"}
mqtt_handler datamapping incoming lane 3 0:13,53 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:13,53
(place)lane: 0
<swim_event> get swimmer for internalheatid 25614 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24323","birthdate":"2013-01-01","firstname":"Alina","lastname":"Zeder","lane":"3","entrytime":"00:00:39.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"0","time":"0:13,53","heat":"3"}
<message_mapper> store lane 3: lane 3 0:13,53 0
websocket backend mainchannel {"athleteid":"24323","birthdate":"2013-01-01","firstname":"Alina","lastname":"Zeder","lane":"3","entrytime":"00:00:39.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"0","time":"0:13,53","heat":"3"}
lane
websocket backend send {"athleteid":"24323","birthdate":"2013-01-01","firstname":"Alina","lastname":"Zeder","lane":"3","entrytime":"00:00:39.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"0","time":"0:13,53","heat":"3"}
mqtt_handler datamapping incoming lane 4 0:20,81 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:20,81
(place)lane: 0
<swim_event> get swimmer for internalheatid 25614 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"4","entrytime":"00:00:39.89","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"0:20,81","heat":"3"}
<message_mapper> store lane 4: lane 4 0:20,81 0
websocket backend mainchannel {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"4","entrytime":"00:00:39.89","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"0:20,81","heat":"3"}
lane
websocket backend send {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"4","entrytime":"00:00:39.89","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"0:20,81","heat":"3"}
mqtt_handler datamapping incoming lane 5 1:56,0 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:56,0
(place)lane: 0
<swim_event> get swimmer for internalheatid 25614 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24529","birthdate":"2013-01-01","firstname":"Louisa","lastname":"Heidenreich","lane":"5","entrytime":"00:00:42.76","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"1:56,0","heat":"3"}
<message_mapper> store lane 5: lane 5 1:56,0 0
websocket backend mainchannel {"athleteid":"24529","birthdate":"2013-01-01","firstname":"Louisa","lastname":"Heidenreich","lane":"5","entrytime":"00:00:42.76","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"1:56,0","heat":"3"}
lane
websocket backend send {"athleteid":"24529","birthdate":"2013-01-01","firstname":"Louisa","lastname":"Heidenreich","lane":"5","entrytime":"00:00:42.76","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"1:56,0","heat":"3"}
mqtt_handler datamapping incoming lane 6 0:22,77 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:22,77
(place)lane: 0
<swim_event> get swimmer for internalheatid 25614 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"6","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"0:22,77","heat":"3"}
<message_mapper> store lane 6: lane 6 0:22,77 0
websocket backend mainchannel {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"6","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"0:22,77","heat":"3"}
lane
websocket backend send {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"6","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"0","time":"0:22,77","heat":"3"}
mqtt_handler datamapping incoming lane 1 1:14,62 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:14,62
(place)lane: 1
<swim_event> get swimmer for internalheatid 25614 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"1","time":"1:14,62","heat":"3"}
<message_mapper> store lane 1: lane 1 1:14,62 1
websocket backend mainchannel {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"1","time":"1:14,62","heat":"3"}
lane
websocket backend send {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"1","time":"1:14,62","heat":"3"}
mqtt_handler datamapping incoming lane 2 1:27,66 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:27,66
(place)lane: 2
<swim_event> get swimmer for internalheatid 25614 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"2","time":"1:27,66","heat":"3"}
<message_mapper> store lane 2: lane 2 1:27,66 2
websocket backend mainchannel {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"2","time":"1:27,66","heat":"3"}
lane
websocket backend send {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"2","time":"1:27,66","heat":"3"}
mqtt_handler datamapping incoming lane 3 0:39,85 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:39,85
(place)lane: 3
<swim_event> get swimmer for internalheatid 25614 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24323","birthdate":"2013-01-01","firstname":"Alina","lastname":"Zeder","lane":"3","entrytime":"00:00:39.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"3","time":"0:39,85","heat":"3"}
<message_mapper> store lane 3: lane 3 0:39,85 3
websocket backend mainchannel {"athleteid":"24323","birthdate":"2013-01-01","firstname":"Alina","lastname":"Zeder","lane":"3","entrytime":"00:00:39.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"3","time":"0:39,85","heat":"3"}
lane
websocket backend send {"athleteid":"24323","birthdate":"2013-01-01","firstname":"Alina","lastname":"Zeder","lane":"3","entrytime":"00:00:39.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"3","time":"0:39,85","heat":"3"}
mqtt_handler datamapping incoming lane 4 1:13,35 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:13,35
(place)lane: 4
<swim_event> get swimmer for internalheatid 25614 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"4","entrytime":"00:00:39.89","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"4","time":"1:13,35","heat":"3"}
<message_mapper> store lane 4: lane 4 1:13,35 4
websocket backend mainchannel {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"4","entrytime":"00:00:39.89","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"4","time":"1:13,35","heat":"3"}
lane
websocket backend send {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"4","entrytime":"00:00:39.89","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"4","time":"1:13,35","heat":"3"}
mqtt_handler datamapping incoming lane 5 0:43,90 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:43,90
(place)lane: 5
<swim_event> get swimmer for internalheatid 25614 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24529","birthdate":"2013-01-01","firstname":"Louisa","lastname":"Heidenreich","lane":"5","entrytime":"00:00:42.76","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"5","time":"0:43,90","heat":"3"}
<message_mapper> store lane 5: lane 5 0:43,90 5
websocket backend mainchannel {"athleteid":"24529","birthdate":"2013-01-01","firstname":"Louisa","lastname":"Heidenreich","lane":"5","entrytime":"00:00:42.76","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"5","time":"0:43,90","heat":"3"}
lane
websocket backend send {"athleteid":"24529","birthdate":"2013-01-01","firstname":"Louisa","lastname":"Heidenreich","lane":"5","entrytime":"00:00:42.76","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"5","time":"0:43,90","heat":"3"}
mqtt_handler datamapping incoming lane 6 1:14,35 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:14,35
(place)lane: 6
<swim_event> get swimmer for internalheatid 25614 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"6","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"6","time":"1:14,35","heat":"3"}
<message_mapper> store lane 6: lane 6 1:14,35 6
websocket backend mainchannel {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"6","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"6","time":"1:14,35","heat":"3"}
lane
websocket backend send {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"6","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"6","time":"1:14,35","heat":"3"}
/POST
Message: {"message":"clock"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584879008"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584879008"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584879008"}
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1584879022"}
websocket backend mainchannel {"type":"startlist","time":"1584879022"}
startlist
websocket backend send {"type":"startlist","time":"1584879022"}
/POST
Message: {"message":"clock"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584879035"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584879035"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584879035"}
/POST
Message: {"message":"race"}
mqtt_handler datamapping incoming race
<message_mapper> beginn parse
<incoming> Type: race
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"race","time":"1584879043"}
race 2
<incoming> Type: header
Event: -2-
HEAT: 3
<swim_events> getInternalHeatId 2 3
<swim_event> number heats 25614
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> race out lane 1 1:14,62 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:14,62
(place)lane: 1
<swim_event> get swimmer for internalheatid 25614 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2 1:27,66 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:27,66
(place)lane: 2
<swim_event> get swimmer for internalheatid 25614 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3 0:39,85 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:39,85
(place)lane: 3
<swim_event> get swimmer for internalheatid 25614 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4 1:13,35 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:13,35
(place)lane: 4
<swim_event> get swimmer for internalheatid 25614 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5 0:43,90 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:43,90
(place)lane: 5
<swim_event> get swimmer for internalheatid 25614 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6 1:14,35 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:14,35
(place)lane: 6
<swim_event> get swimmer for internalheatid 25614 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"race","time":"1584879043"}
race
websocket backend send {"type":"race","time":"1584879043"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"3","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"3","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"1","time":"1:14,62","heat":"3"}
lane
websocket backend send {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"1","time":"1:14,62","heat":"3"}
websocket backend mainchannel {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"2","time":"1:27,66","heat":"3"}
lane
websocket backend send {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"2","time":"1:27,66","heat":"3"}
websocket backend mainchannel {"athleteid":"24323","birthdate":"2013-01-01","firstname":"Alina","lastname":"Zeder","lane":"3","entrytime":"00:00:39.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"3","time":"0:39,85","heat":"3"}
lane
websocket backend send {"athleteid":"24323","birthdate":"2013-01-01","firstname":"Alina","lastname":"Zeder","lane":"3","entrytime":"00:00:39.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"3","time":"0:39,85","heat":"3"}
websocket backend mainchannel {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"4","entrytime":"00:00:39.89","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"4","time":"1:13,35","heat":"3"}
lane
websocket backend send {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"4","entrytime":"00:00:39.89","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"4","time":"1:13,35","heat":"3"}
websocket backend mainchannel {"athleteid":"24529","birthdate":"2013-01-01","firstname":"Louisa","lastname":"Heidenreich","lane":"5","entrytime":"00:00:42.76","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"5","time":"0:43,90","heat":"3"}
lane
websocket backend send {"athleteid":"24529","birthdate":"2013-01-01","firstname":"Louisa","lastname":"Heidenreich","lane":"5","entrytime":"00:00:42.76","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"5","time":"0:43,90","heat":"3"}
websocket backend mainchannel {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"6","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"6","time":"1:14,35","heat":"3"}
lane
websocket backend send {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"6","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"6","time":"1:14,35","heat":"3"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584879058"}
websocket backend mainchannel {"type":"start","time":"1584879058"}
start
websocket backend send {"type":"start","time":"1584879058"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584988760"}
websocket backend mainchannel {"type":"start","time":"1584988760"}
start
websocket backend send {"type":"start","time":"1584988760"}
/POST
Message: {"message":"lane 1 1:11,11 0"}
mqtt_handler datamapping incoming lane 1 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25614 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"1:11,11","heat":"3"}
<message_mapper> store lane 1: lane 1 1:11,11 0
websocket backend mainchannel {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"1:11,11","heat":"3"}
/POST
Message: {"message":"stop"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584989219"}
websocket backend mainchannel {"type":"stop","time":"1584989219"}
stop
websocket backend send {"type":"stop","time":"1584989219"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584989220"}
websocket backend mainchannel {"type":"start","time":"1584989220"}
start
websocket backend send {"type":"start","time":"1584989220"}
/POST
Message: {"message":"lane 1 1:11,11 0"}
mqtt_handler datamapping incoming lane 1 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25614 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"1:11,11","heat":"3"}
<message_mapper> store lane 1: lane 1 1:11,11 0
websocket backend mainchannel {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"1:11,11","heat":"3"}
/POST
Message: {"message":"stop"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584989244"}
websocket backend mainchannel {"type":"stop","time":"1584989244"}
stop
websocket backend send {"type":"stop","time":"1584989244"}
/POST
Message: {"message":"clear"}
mqtt_handler datamapping incoming clear
<message_mapper> beginn parse
<incoming> Type: clear
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clear","time":"1584989245"}
<message_mapper> clear race
<message_mapper> race out lane 1 1:11,11 0
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25614 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2 1:27,66 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:27,66
(place)lane: 2
<swim_event> get swimmer for internalheatid 25614 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3 0:39,85 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:39,85
(place)lane: 3
<swim_event> get swimmer for internalheatid 25614 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4 1:13,35 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:13,35
(place)lane: 4
<swim_event> get swimmer for internalheatid 25614 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5 0:43,90 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:43,90
(place)lane: 5
<swim_event> get swimmer for internalheatid 25614 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6 1:14,35 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:14,35
(place)lane: 6
<swim_event> get swimmer for internalheatid 25614 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"clear","time":"1584989245"}
clear
clear lanes
websocket backend send {"type":"clear","time":"1584989245"}
websocket backend mainchannel {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"24323","birthdate":"2013-01-01","firstname":"Alina","lastname":"Zeder","lane":"3","entrytime":"00:00:39.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"24323","birthdate":"2013-01-01","firstname":"Alina","lastname":"Zeder","lane":"3","entrytime":"00:00:39.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"4","entrytime":"00:00:39.89","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"4","entrytime":"00:00:39.89","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"24529","birthdate":"2013-01-01","firstname":"Louisa","lastname":"Heidenreich","lane":"5","entrytime":"00:00:42.76","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"24529","birthdate":"2013-01-01","firstname":"Louisa","lastname":"Heidenreich","lane":"5","entrytime":"00:00:42.76","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"6","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"6","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"","time":"","heat":"3"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584989246"}
websocket backend mainchannel {"type":"start","time":"1584989246"}
start
websocket backend send {"type":"start","time":"1584989246"}
/POST
Message: {"message":"lane 1 1:11,11 0"}
mqtt_handler datamapping incoming lane 1 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25614 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"1:11,11","heat":"3"}
<message_mapper> store lane 1: lane 1 1:11,11 0
websocket backend mainchannel {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"0","time":"1:11,11","heat":"3"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"lane 1 1:11,11 11"}
mqtt_handler datamapping incoming lane 1 1:11,11 11
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 11
<swim_event> get swimmer for internalheatid 25614 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"11","time":"1:11,11","heat":"3"}
<message_mapper> store lane 1: lane 1 1:11,11 11
websocket backend mainchannel {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"11","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"11","time":"1:11,11","heat":"3"}
/POST
Message: {"message":"lane 2 1:11,11 2"}
mqtt_handler datamapping incoming lane 2 1:11,11 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:11,11
(place)lane: 2
<swim_event> get swimmer for internalheatid 25614 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"2","time":"1:11,11","heat":"3"}
<message_mapper> store lane 2: lane 2 1:11,11 2
websocket backend mainchannel {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"2","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"2","time":"1:11,11","heat":"3"}
/POST
Message: {"message":"lane 2 1:11,11 0"}
mqtt_handler datamapping incoming lane 2 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25614 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"0","time":"1:11,11","heat":"3"}
<message_mapper> store lane 2: lane 2 1:11,11 0
websocket backend mainchannel {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"0","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"0","time":"1:11,11","heat":"3"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"lane 2 1:11,11 3"}
mqtt_handler datamapping incoming lane 2 1:11,11 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:11,11
(place)lane: 3
<swim_event> get swimmer for internalheatid 25614 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"3","time":"1:11,11","heat":"3"}
<message_mapper> store lane 2: lane 2 1:11,11 3
websocket backend mainchannel {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"3","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"3","time":"1:11,11","heat":"3"}
/POST
Message: {"message":"clear"}
mqtt_handler datamapping incoming clear
<message_mapper> beginn parse
<incoming> Type: clear
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clear","time":"1584989612"}
<message_mapper> clear race
<message_mapper> race out lane 1 1:11,11 11
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 11
<swim_event> get swimmer for internalheatid 25614 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2 1:11,11 3
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:11,11
(place)lane: 3
<swim_event> get swimmer for internalheatid 25614 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3 0:39,85 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:39,85
(place)lane: 3
<swim_event> get swimmer for internalheatid 25614 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4 1:13,35 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:13,35
(place)lane: 4
<swim_event> get swimmer for internalheatid 25614 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5 0:43,90 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:43,90
(place)lane: 5
<swim_event> get swimmer for internalheatid 25614 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6 1:14,35 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:14,35
(place)lane: 6
<swim_event> get swimmer for internalheatid 25614 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"clear","time":"1584989612"}
clear
clear lanes
websocket backend send {"type":"clear","time":"1584989612"}
websocket backend mainchannel {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"24461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"Struckmeier","lane":"1","entrytime":"00:00:43.36","name":"SG Bamberg","code":"5085","type":"lane","event":"2","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"24323","birthdate":"2013-01-01","firstname":"Alina","lastname":"Zeder","lane":"3","entrytime":"00:00:39.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"24323","birthdate":"2013-01-01","firstname":"Alina","lastname":"Zeder","lane":"3","entrytime":"00:00:39.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"4","entrytime":"00:00:39.89","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"23963","birthdate":"2013-01-01","firstname":"Julia","lastname":"Slonicz","lane":"4","entrytime":"00:00:39.89","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"24529","birthdate":"2013-01-01","firstname":"Louisa","lastname":"Heidenreich","lane":"5","entrytime":"00:00:42.76","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"24529","birthdate":"2013-01-01","firstname":"Louisa","lastname":"Heidenreich","lane":"5","entrytime":"00:00:42.76","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"6","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"6","entrytime":"00:00:50.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"","time":"","heat":"3"}
/POST
Message: {"message":"lane 2 1:11,11 3"}
mqtt_handler datamapping incoming lane 2 1:11,11 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:11,11
(place)lane: 3
<swim_event> get swimmer for internalheatid 25614 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"3","time":"1:11,11","heat":"3"}
<message_mapper> store lane 2: lane 2 1:11,11 3
websocket backend mainchannel {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"3","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"3","time":"1:11,11","heat":"3"}
/POST
Message: {"message":"lane 2 1:11,11 3"}
mqtt_handler datamapping incoming lane 2 1:11,11 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:11,11
(place)lane: 3
<swim_event> get swimmer for internalheatid 25614 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"3","time":"1:11,11","heat":"3"}
<message_mapper> store lane 2: lane 2 1:11,11 3
websocket backend mainchannel {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"3","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"3","time":"1:11,11","heat":"3"}
/POST
Message: {"message":"lane 2 1:11,11 3"}
mqtt_handler datamapping incoming lane 2 1:11,11 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:11,11
(place)lane: 3
<swim_event> get swimmer for internalheatid 25614 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"3","time":"1:11,11","heat":"3"}
<message_mapper> store lane 2: lane 2 1:11,11 3
websocket backend mainchannel {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"3","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"24280","birthdate":"2014-01-01","firstname":"Sophia","lastname":"Lamik","lane":"2","entrytime":"00:00:42.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"2","place":"3","time":"1:11,11","heat":"3"}
/POST
Message: {"message":"header 1 1"}
mqtt_handler datamapping incoming header 1 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
/POST
Message: {"message":"lane 2 1:11,11 3"}
mqtt_handler datamapping incoming lane 2 1:11,11 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:11,11
(place)lane: 3
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"3","time":"1:11,11","heat":"1"}
<message_mapper> store lane 2: lane 2 1:11,11 3
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"3","time":"1:11,11","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"3","time":"1:11,11","heat":"1"}
/POST
Message: {"message":"lane 2 1:11,11 0"}
mqtt_handler datamapping incoming lane 2 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"1"}
<message_mapper> store lane 2: lane 2 1:11,11 0
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"1"}
/POST
Message: {"message":"lane 2 1:11,11 1"}
mqtt_handler datamapping incoming lane 2 1:11,11 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:11,11
(place)lane: 1
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"1"}
<message_mapper> store lane 2: lane 2 1:11,11 1
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"1"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"lane 2 1:11,11 1"}
mqtt_handler datamapping incoming lane 2 1:11,11 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:11,11
(place)lane: 1
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"1"}
<message_mapper> store lane 2: lane 2 1:11,11 1
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"1"}
/POST
Message: {"message":"lane 4 1:11,11 22"}
mqtt_handler datamapping incoming lane 4 1:11,11 22
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:11,11
(place)lane: 22
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"22","time":"1:11,11","heat":"1"}
<message_mapper> store lane 4: lane 4 1:11,11 22
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"22","time":"1:11,11","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"22","time":"1:11,11","heat":"1"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"lane 4 1:11,11 2"}
mqtt_handler datamapping incoming lane 4 1:11,11 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:11,11
(place)lane: 2
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"2","time":"1:11,11","heat":"1"}
<message_mapper> store lane 4: lane 4 1:11,11 2
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"2","time":"1:11,11","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"2","time":"1:11,11","heat":"1"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"lane 4 1:11,11 2"}
mqtt_handler datamapping incoming lane 4 1:11,11 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:11,11
(place)lane: 2
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"2","time":"1:11,11","heat":"1"}
<message_mapper> store lane 4: lane 4 1:11,11 2
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"2","time":"1:11,11","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"2","time":"1:11,11","heat":"1"}
/POST
Message: {"message":"lane 4 1:11,11 2"}
mqtt_handler datamapping incoming lane 4 1:11,11 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:11,11
(place)lane: 2
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"2","time":"1:11,11","heat":"1"}
<message_mapper> store lane 4: lane 4 1:11,11 2
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"2","time":"1:11,11","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"2","time":"1:11,11","heat":"1"}
/POST
Message: {"message":"lane 4 1:11,11 2"}
mqtt_handler datamapping incoming lane 4 1:11,11 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:11,11
(place)lane: 2
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"2","time":"1:11,11","heat":"1"}
<message_mapper> store lane 4: lane 4 1:11,11 2
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"2","time":"1:11,11","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"2","time":"1:11,11","heat":"1"}
/POST
Message: {"message":"lane 3 1:11,11 2"}
mqtt_handler datamapping incoming lane 3 1:11,11 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:11,11
(place)lane: 2
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"2","time":"1:11,11","heat":"1"}
<message_mapper> store lane 3: lane 3 1:11,11 2
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"2","time":"1:11,11","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"2","time":"1:11,11","heat":"1"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"lane 3 1:11,11 2"}
mqtt_handler datamapping incoming lane 3 1:11,11 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:11,11
(place)lane: 2
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"2","time":"1:11,11","heat":"1"}
<message_mapper> store lane 3: lane 3 1:11,11 2
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"2","time":"1:11,11","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"2","time":"1:11,11","heat":"1"}
/POST
Message: {"message":"lane 3 1:11,11 0"}
mqtt_handler datamapping incoming lane 3 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"1"}
<message_mapper> store lane 3: lane 3 1:11,11 0
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"1"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"lane 3 1:11,11 1"}
mqtt_handler datamapping incoming lane 3 1:11,11 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:11,11
(place)lane: 1
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"1"}
<message_mapper> store lane 3: lane 3 1:11,11 1
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"1"}
/POST
Message: {"message":"clear"}
mqtt_handler datamapping incoming clear
<message_mapper> beginn parse
<incoming> Type: clear
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clear","time":"1584990181"}
<message_mapper> clear race
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> race out lane 2 1:11,11 1
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:11,11
(place)lane: 1
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3 1:11,11 1
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:11,11
(place)lane: 1
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4 1:11,11 2
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:11,11
(place)lane: 2
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"clear","time":"1584990181"}
clear
clear lanes
websocket backend send {"type":"clear","time":"1584990181"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"","time":"","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"","time":"","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"","time":"","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"","time":"","heat":"1"}
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"1"}
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"","time":"","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"","time":"","heat":"1"}
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"","time":"","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"","time":"","heat":"1"}
/POST
Message: {"message":"lane 3 1:11,11 1"}
mqtt_handler datamapping incoming lane 3 1:11,11 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:11,11
(place)lane: 1
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"1"}
<message_mapper> store lane 3: lane 3 1:11,11 1
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"1"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"lane 3 1:11,11 0"}
mqtt_handler datamapping incoming lane 3 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"1"}
<message_mapper> store lane 3: lane 3 1:11,11 0
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"1"}
/POST
Message: {"message":"lane 1 1:11,11 0"}
mqtt_handler datamapping incoming lane 1 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"1","place":"0","time":"1:11,11","heat":"1"}
<message_mapper> store lane 1: lane 1 1:11,11 0
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"0","time":"1:11,11","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"0","time":"1:11,11","heat":"1"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"lane 1 1:11,11 0"}
mqtt_handler datamapping incoming lane 1 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"1","place":"0","time":"1:11,11","heat":"1"}
<message_mapper> store lane 1: lane 1 1:11,11 0
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"0","time":"1:11,11","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"0","time":"1:11,11","heat":"1"}
/POST
Message: {"message":"stop"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584990301"}
websocket backend mainchannel {"type":"stop","time":"1584990301"}
stop
websocket backend send {"type":"stop","time":"1584990301"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584990305"}
websocket backend mainchannel {"type":"start","time":"1584990305"}
start
websocket backend send {"type":"start","time":"1584990305"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584990322"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584990322"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584990322"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584990323"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584990323"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584990323"}
mqtt_handler datamapping incoming header 1 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
----------------- reset clock
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584990331"}
websocket backend mainchannel {"type":"start","time":"1584990331"}
start
websocket backend send {"type":"start","time":"1584990331"}
mqtt_handler datamapping incoming lane 1 1:38,90 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:38,90
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"1","place":"0","time":"1:38,90","heat":"1"}
<message_mapper> store lane 1: lane 1 1:38,90 0
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"0","time":"1:38,90","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"0","time":"1:38,90","heat":"1"}
mqtt_handler datamapping incoming lane 2 0:10,56 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:10,56
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:10,56","heat":"1"}
<message_mapper> store lane 2: lane 2 0:10,56 0
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:10,56","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:10,56","heat":"1"}
mqtt_handler datamapping incoming lane 3 1:54,52 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:54,52
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:54,52","heat":"1"}
<message_mapper> store lane 3: lane 3 1:54,52 0
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:54,52","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:54,52","heat":"1"}
mqtt_handler datamapping incoming lane 4 1:8,33 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:8,33
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"1:8,33","heat":"1"}
<message_mapper> store lane 4: lane 4 1:8,33 0
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"1:8,33","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"1:8,33","heat":"1"}
mqtt_handler datamapping incoming lane 5 0:34,6 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:34,6
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:34,6","heat":"1"}
<message_mapper> store lane 5: lane 5 0:34,6 0
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:34,6","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:34,6","heat":"1"}
mqtt_handler datamapping incoming lane 6 1:43,21 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:43,21
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"1","place":"0","time":"1:43,21","heat":"1"}
<message_mapper> store lane 6: lane 6 1:43,21 0
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"0","time":"1:43,21","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"0","time":"1:43,21","heat":"1"}
mqtt_handler datamapping incoming lane 1 0:37,40 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:37,40
(place)lane: 1
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"1","place":"1","time":"0:37,40","heat":"1"}
<message_mapper> store lane 1: lane 1 0:37,40 1
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"1","time":"0:37,40","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"1","time":"0:37,40","heat":"1"}
mqtt_handler datamapping incoming lane 2 0:19,23 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:19,23
(place)lane: 2
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"2","time":"0:19,23","heat":"1"}
<message_mapper> store lane 2: lane 2 0:19,23 2
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"2","time":"0:19,23","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"2","time":"0:19,23","heat":"1"}
mqtt_handler datamapping incoming lane 3 0:10,14 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:10,14
(place)lane: 3
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"0:10,14","heat":"1"}
<message_mapper> store lane 3: lane 3 0:10,14 3
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"0:10,14","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"0:10,14","heat":"1"}
mqtt_handler datamapping incoming lane 4 0:0,91 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:0,91
(place)lane: 4
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"4","time":"0:0,91","heat":"1"}
<message_mapper> store lane 4: lane 4 0:0,91 4
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"4","time":"0:0,91","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"4","time":"0:0,91","heat":"1"}
mqtt_handler datamapping incoming lane 5 0:7,63 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:7,63
(place)lane: 5
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"0:7,63","heat":"1"}
<message_mapper> store lane 5: lane 5 0:7,63 5
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"0:7,63","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"0:7,63","heat":"1"}
mqtt_handler datamapping incoming lane 6 1:3,55 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:3,55
(place)lane: 6
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"6","event":"1","place":"6","time":"1:3,55","heat":"1"}
<message_mapper> store lane 6: lane 6 1:3,55 6
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"6","time":"1:3,55","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"6","time":"1:3,55","heat":"1"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584990343"}
websocket backend mainchannel {"type":"stop","time":"1584990343"}
stop
websocket backend send {"type":"stop","time":"1584990343"}
mqtt_handler datamapping incoming header 1 2
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 2
<swim_events> getInternalHeatId 1 2
<swim_event> number heats 25608
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584990349"}
websocket backend mainchannel {"type":"start","time":"1584990349"}
start
websocket backend send {"type":"start","time":"1584990349"}
mqtt_handler datamapping incoming lane 1 1:46,83 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:46,83
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:46,83","heat":"2"}
<message_mapper> store lane 1: lane 1 1:46,83 0
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:46,83","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:46,83","heat":"2"}
mqtt_handler datamapping incoming lane 2 1:8,92 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:8,92
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"0","time":"1:8,92","heat":"2"}
<message_mapper> store lane 2: lane 2 1:8,92 0
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"0","time":"1:8,92","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"0","time":"1:8,92","heat":"2"}
mqtt_handler datamapping incoming lane 3 1:49,85 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:49,85
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:49,85","heat":"2"}
<message_mapper> store lane 3: lane 3 1:49,85 0
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:49,85","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:49,85","heat":"2"}
mqtt_handler datamapping incoming lane 4 0:47,72 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:47,72
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:47,72","heat":"2"}
<message_mapper> store lane 4: lane 4 0:47,72 0
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:47,72","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:47,72","heat":"2"}
mqtt_handler datamapping incoming lane 5 0:53,85 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:53,85
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:53,85","heat":"2"}
<message_mapper> store lane 5: lane 5 0:53,85 0
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:53,85","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:53,85","heat":"2"}
mqtt_handler datamapping incoming lane 6 1:49,85 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:49,85
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"0","time":"1:49,85","heat":"2"}
<message_mapper> store lane 6: lane 6 1:49,85 0
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"0","time":"1:49,85","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"0","time":"1:49,85","heat":"2"}
mqtt_handler datamapping incoming lane 1 0:15,81 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:15,81
(place)lane: 1
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"0:15,81","heat":"2"}
<message_mapper> store lane 1: lane 1 0:15,81 1
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"0:15,81","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"0:15,81","heat":"2"}
mqtt_handler datamapping incoming lane 2 0:59,35 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:59,35
(place)lane: 2
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"2","time":"0:59,35","heat":"2"}
<message_mapper> store lane 2: lane 2 0:59,35 2
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"2","time":"0:59,35","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"2","time":"0:59,35","heat":"2"}
mqtt_handler datamapping incoming lane 3 1:58,21 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:58,21
(place)lane: 3
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"1:58,21","heat":"2"}
<message_mapper> store lane 3: lane 3 1:58,21 3
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"1:58,21","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"1:58,21","heat":"2"}
mqtt_handler datamapping incoming lane 4 1:45,55 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:45,55
(place)lane: 4
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"4","time":"1:45,55","heat":"2"}
<message_mapper> store lane 4: lane 4 1:45,55 4
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"4","time":"1:45,55","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"4","time":"1:45,55","heat":"2"}
mqtt_handler datamapping incoming lane 5 1:4,83 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:4,83
(place)lane: 5
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"1:4,83","heat":"2"}
<message_mapper> store lane 5: lane 5 1:4,83 5
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"1:4,83","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"1:4,83","heat":"2"}
mqtt_handler datamapping incoming lane 6 1:52,55 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:52,55
(place)lane: 6
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"6","time":"1:52,55","heat":"2"}
<message_mapper> store lane 6: lane 6 1:52,55 6
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"6","time":"1:52,55","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"6","time":"1:52,55","heat":"2"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584990360"}
websocket backend mainchannel {"type":"stop","time":"1584990360"}
stop
websocket backend send {"type":"stop","time":"1584990360"}
mqtt_handler datamapping incoming header 1 3
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 3
<swim_events> getInternalHeatId 1 3
<swim_event> number heats 25609
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584990366"}
websocket backend mainchannel {"type":"start","time":"1584990366"}
start
websocket backend send {"type":"start","time":"1584990366"}
mqtt_handler datamapping incoming lane 1 1:5,48 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:5,48
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:5,48","heat":"3"}
<message_mapper> store lane 1: lane 1 1:5,48 0
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:5,48","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:5,48","heat":"3"}
mqtt_handler datamapping incoming lane 2 0:4,18 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:4,18
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:4,18","heat":"3"}
<message_mapper> store lane 2: lane 2 0:4,18 0
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:4,18","heat":"3"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"0:4,18","heat":"3"}
mqtt_handler datamapping incoming lane 3 1:42,64 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:42,64
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:42,64","heat":"3"}
<message_mapper> store lane 3: lane 3 1:42,64 0
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:42,64","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"0","time":"1:42,64","heat":"3"}
mqtt_handler datamapping incoming lane 4 0:20,90 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:20,90
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:20,90","heat":"3"}
<message_mapper> store lane 4: lane 4 0:20,90 0
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:20,90","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:20,90","heat":"3"}
mqtt_handler datamapping incoming lane 5 1:13,47 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:13,47
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:13,47","heat":"3"}
<message_mapper> store lane 5: lane 5 1:13,47 0
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:13,47","heat":"3"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:13,47","heat":"3"}
mqtt_handler datamapping incoming lane 6 1:34,74 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:34,74
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:34,74","heat":"3"}
<message_mapper> store lane 6: lane 6 1:34,74 0
websocket backend mainchannel {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:34,74","heat":"3"}
lane
websocket backend send {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:34,74","heat":"3"}
mqtt_handler datamapping incoming lane 1 1:16,94 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:16,94
(place)lane: 1
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"1:16,94","heat":"3"}
<message_mapper> store lane 1: lane 1 1:16,94 1
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"1:16,94","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"1","time":"1:16,94","heat":"3"}
mqtt_handler datamapping incoming lane 2 1:24,74 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:24,74
(place)lane: 2
<swim_event> get swimmer for internalheatid 25609 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"2","time":"1:24,74","heat":"3"}
<message_mapper> store lane 2: lane 2 1:24,74 2
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"2","time":"1:24,74","heat":"3"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"2","time":"1:24,74","heat":"3"}
mqtt_handler datamapping incoming lane 3 0:29,42 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 0:29,42
(place)lane: 3
<swim_event> get swimmer for internalheatid 25609 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"0:29,42","heat":"3"}
<message_mapper> store lane 3: lane 3 0:29,42 3
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"0:29,42","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"3","time":"0:29,42","heat":"3"}
mqtt_handler datamapping incoming lane 4 0:23,67 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 0:23,67
(place)lane: 4
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"4","time":"0:23,67","heat":"3"}
<message_mapper> store lane 4: lane 4 0:23,67 4
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"4","time":"0:23,67","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"4","time":"0:23,67","heat":"3"}
mqtt_handler datamapping incoming lane 5 0:44,91 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:44,91
(place)lane: 5
<swim_event> get swimmer for internalheatid 25609 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"0:44,91","heat":"3"}
<message_mapper> store lane 5: lane 5 0:44,91 5
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"0:44,91","heat":"3"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"0:44,91","heat":"3"}
mqtt_handler datamapping incoming lane 6 0:49,74 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 0:49,74
(place)lane: 6
<swim_event> get swimmer for internalheatid 25609 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"6","time":"0:49,74","heat":"3"}
<message_mapper> store lane 6: lane 6 0:49,74 6
websocket backend mainchannel {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"6","time":"0:49,74","heat":"3"}
lane
websocket backend send {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"6","time":"0:49,74","heat":"3"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584990377"}
websocket backend mainchannel {"type":"stop","time":"1584990377"}
stop
websocket backend send {"type":"stop","time":"1584990377"}
mqtt_handler datamapping incoming header 1 4
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 4
<swim_events> getInternalHeatId 1 4
<swim_event> number heats 25610
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"4","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25610 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"4","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"4","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
websocket backend mainchannel {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
lane
websocket backend send {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"4"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584990384"}
websocket backend mainchannel {"type":"start","time":"1584990384"}
start
websocket backend send {"type":"start","time":"1584990384"}
mqtt_handler datamapping incoming lane 1 0:18,7 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 0:18,7
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:18,7","heat":"4"}
<message_mapper> store lane 1: lane 1 0:18,7 0
websocket backend mainchannel {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:18,7","heat":"4"}
lane
websocket backend send {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:18,7","heat":"4"}
mqtt_handler datamapping incoming lane 2 1:30,54 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:30,54
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:30,54","heat":"4"}
<message_mapper> store lane 2: lane 2 1:30,54 0
websocket backend mainchannel {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:30,54","heat":"4"}
lane
websocket backend send {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:30,54","heat":"4"}
mqtt_handler datamapping incoming lane 3 1:59,31 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:59,31
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:59,31","heat":"4"}
<message_mapper> store lane 3: lane 3 1:59,31 0
websocket backend mainchannel {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:59,31","heat":"4"}
lane
websocket backend send {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:59,31","heat":"4"}
mqtt_handler datamapping incoming lane 4 1:45,14 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:45,14
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"0","time":"1:45,14","heat":"4"}
<message_mapper> store lane 4: lane 4 1:45,14 0
websocket backend mainchannel {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"0","time":"1:45,14","heat":"4"}
lane
websocket backend send {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"0","time":"1:45,14","heat":"4"}
mqtt_handler datamapping incoming lane 5 0:56,99 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 0:56,99
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:56,99","heat":"4"}
<message_mapper> store lane 5: lane 5 0:56,99 0
websocket backend mainchannel {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:56,99","heat":"4"}
lane
websocket backend send {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"0:56,99","heat":"4"}
mqtt_handler datamapping incoming lane 6 1:22,9 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:22,9
(place)lane: 0
<swim_event> get swimmer for internalheatid 25610 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"1:22,9","heat":"4"}
<message_mapper> store lane 6: lane 6 1:22,9 0
websocket backend mainchannel {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"1:22,9","heat":"4"}
lane
websocket backend send {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"0","time":"1:22,9","heat":"4"}
mqtt_handler datamapping incoming lane 1 1:32,58 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:32,58
(place)lane: 1
<swim_event> get swimmer for internalheatid 25610 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:32,58","heat":"4"}
<message_mapper> store lane 1: lane 1 1:32,58 1
websocket backend mainchannel {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:32,58","heat":"4"}
lane
websocket backend send {"athleteid":"23958","birthdate":"2013-01-01","firstname":"Timon Sebastian","lastname":"Rother","lane":"1","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"1","time":"1:32,58","heat":"4"}
mqtt_handler datamapping incoming lane 2 0:39,89 2
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 0:39,89
(place)lane: 2
<swim_event> get swimmer for internalheatid 25610 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"2","time":"0:39,89","heat":"4"}
<message_mapper> store lane 2: lane 2 0:39,89 2
websocket backend mainchannel {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"2","time":"0:39,89","heat":"4"}
lane
websocket backend send {"athleteid":"24769","birthdate":"2012-01-01","firstname":"Theo","lastname":"Rother","lane":"2","entrytime":"00:00:32.25","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"2","time":"0:39,89","heat":"4"}
mqtt_handler datamapping incoming lane 3 1:8,99 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:8,99
(place)lane: 3
<swim_event> get swimmer for internalheatid 25610 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"1:8,99","heat":"4"}
<message_mapper> store lane 3: lane 3 1:8,99 3
websocket backend mainchannel {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"1:8,99","heat":"4"}
lane
websocket backend send {"athleteid":"23931","birthdate":"2013-01-01","firstname":"Luca","lastname":"Lautenschlager","lane":"3","entrytime":"00:00:31.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"3","time":"1:8,99","heat":"4"}
mqtt_handler datamapping incoming lane 4 1:43,99 4
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: 1:43,99
(place)lane: 4
<swim_event> get swimmer for internalheatid 25610 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"4","time":"1:43,99","heat":"4"}
<message_mapper> store lane 4: lane 4 1:43,99 4
websocket backend mainchannel {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"4","time":"1:43,99","heat":"4"}
lane
websocket backend send {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"4","entrytime":"00:00:32.02","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"1","place":"4","time":"1:43,99","heat":"4"}
mqtt_handler datamapping incoming lane 5 1:59,0 5
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: 1:59,0
(place)lane: 5
<swim_event> get swimmer for internalheatid 25610 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"1:59,0","heat":"4"}
<message_mapper> store lane 5: lane 5 1:59,0 5
websocket backend mainchannel {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"1:59,0","heat":"4"}
lane
websocket backend send {"athleteid":"24759","birthdate":"2013-01-01","firstname":"Theo","lastname":"Rischbeck","lane":"5","entrytime":"00:00:33.19","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"5","time":"1:59,0","heat":"4"}
mqtt_handler datamapping incoming lane 6 1:18,53 6
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: 1:18,53
(place)lane: 6
<swim_event> get swimmer for internalheatid 25610 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"6","time":"1:18,53","heat":"4"}
<message_mapper> store lane 6: lane 6 1:18,53 6
websocket backend mainchannel {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"6","time":"1:18,53","heat":"4"}
lane
websocket backend send {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"6","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"6","time":"1:18,53","heat":"4"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584990395"}
websocket backend mainchannel {"type":"stop","time":"1584990395"}
stop
websocket backend send {"type":"stop","time":"1584990395"}
mqtt_handler datamapping incoming clock
<message_mapper> beginn parse
<incoming> Type: clock
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clock","size":"large","time":"1584990398"}
websocket backend mainchannel {"type":"clock","size":"large","time":"1584990398"}
clock
websocket backend send {"type":"clock","size":"large","time":"1584990398"}
mqtt_handler datamapping incoming header 2 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -2-
HEAT: 1
<swim_events> getInternalHeatId 2 1
<swim_event> number heats 25612
Event: -2-
<swim_event> search for number 2
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"2","heat":"1","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25612 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25612 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25612 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25612 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25612 no relay lane 5
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25612 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"2","heat":"1","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
----------------- reset clock
websocket backend send {"type":"header","relaycount":"1","event":"2","heat":"1","gender":"F","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"2","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"2","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24696","birthdate":"2012-01-01","firstname":"Alarice","lastname":"Bitz","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25461","birthdate":"2012-01-01","firstname":"Antonia","lastname":"SchÃ¶dl","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25403","birthdate":"2012-01-01","firstname":"Frida","lastname":"Rosenbaum","lane":"4","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"2","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"5","event":"2","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"5","event":"2","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"2","place":"undefined","time":"undefined","heat":"1"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584990407"}
websocket backend mainchannel {"type":"start","time":"1584990407"}
start
websocket backend send {"type":"start","time":"1584990407"}
/POST
Message: {"message":"lane 1 1:11,11 0"}
mqtt_handler datamapping incoming lane 1 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25612 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"2","place":"0","time":"1:11,11","heat":"1"}
<message_mapper> store lane 1: lane 1 1:11,11 0
websocket backend mainchannel {"type":"lane","lane":"1","event":"2","place":"0","time":"1:11,11","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"2","place":"0","time":"1:11,11","heat":"1"}
/POST
Message: {"message":"stop"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584990448"}
websocket backend mainchannel {"type":"stop","time":"1584990448"}
stop
websocket backend send {"type":"stop","time":"1584990448"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584990452"}
websocket backend mainchannel {"type":"start","time":"1584990452"}
start
websocket backend send {"type":"start","time":"1584990452"}
/POST
Message: {"message":"header 1 2"}
mqtt_handler datamapping incoming header 1 2
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 2
<swim_events> getInternalHeatId 1 2
<swim_event> number heats 25608
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25608 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"2","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"1","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"4","entrytime":"00:00:44.20","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24801","birthdate":"2015-01-01","firstname":"Simon","lastname":"Zeidler","lane":"5","entrytime":"00:00:53.27","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
websocket backend mainchannel {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
lane
websocket backend send {"athleteid":"24928","birthdate":"2015-01-01","firstname":"Roman","lastname":"Vogeler","lane":"6","entrytime":"00:01:00.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"2"}
/POST
Message: {"message":"lane 2 1:11,11 0"}
mqtt_handler datamapping incoming lane 2 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"2"}
<message_mapper> store lane 2: lane 2 1:11,11 0
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"2"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"2","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"2"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584990503"}
websocket backend mainchannel {"type":"start","time":"1584990503"}
start
websocket backend send {"type":"start","time":"1584990503"}
/POST
Message: {"message":"lane 3 1:11,11 0"}
mqtt_handler datamapping incoming lane 3 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25608 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"2"}
<message_mapper> store lane 3: lane 3 1:11,11 0
websocket backend mainchannel {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"2"}
lane
websocket backend send {"athleteid":"23946","birthdate":"2013-01-01","firstname":"Julius","lastname":"Nahr","lane":"3","entrytime":"00:00:41.06","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"2"}
/POST
Message: {"message":"header 1 3"}
mqtt_handler datamapping incoming header 1 3
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 3
<swim_events> getInternalHeatId 1 3
<swim_event> number heats 25609
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"3","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"3"}
/POST
Message: {"message":"lane 2 1:11,11 0"}
mqtt_handler datamapping incoming lane 2 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"3"}
<message_mapper> store lane 2: lane 2 1:11,11 0
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"3"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"stop"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584991942"}
websocket backend mainchannel {"type":"stop","time":"1584991942"}
stop
websocket backend send {"type":"stop","time":"1584991942"}
/POST
Message: {"message":"clear"}
mqtt_handler datamapping incoming clear
<message_mapper> beginn parse
<incoming> Type: clear
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clear","time":"1584991943"}
<message_mapper> clear race
<message_mapper> race out lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 2 1:11,11 0
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25609 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25609 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"clear","time":"1584991943"}
clear
clear lanes
websocket backend send {"type":"clear","time":"1584991943"}
websocket backend mainchannel {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"25121","birthdate":"2013-01-01","firstname":"Daniel","lastname":"Frank","lane":"1","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"25376","birthdate":"2012-01-01","firstname":"Elias","lastname":"Jost","lane":"2","entrytime":"00:00:39.11","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"3","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"1","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"24739","birthdate":"2012-01-01","firstname":"Edwin","lastname":"Lichtenwald","lane":"4","entrytime":"00:00:35.31","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"24517","birthdate":"2012-01-01","firstname":"Simon","lastname":"Clausen","lane":"5","entrytime":"00:00:39.38","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"3"}
websocket backend mainchannel {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"3"}
lane
websocket backend send {"athleteid":"24564","birthdate":"2012-01-01","firstname":"Amir","lastname":"Tawfik","lane":"6","entrytime":"00:00:40.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"3"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"header 6 3"}
mqtt_handler datamapping incoming header 6 3
<message_mapper> beginn parse
<incoming> Type: header
Event: -6-
HEAT: 3
<swim_events> getInternalHeatId 6 3
<swim_event> number heats 25628
Event: -6-
<swim_event> search for number 6
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"6","heat":"3","gender":"F","round":"TIM","swimstyle":"FREE","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25628 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25628 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25628 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25628 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25628 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25628 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"6","heat":"3","gender":"F","round":"TIM","swimstyle":"FREE","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"6","heat":"3","gender":"F","round":"TIM","swimstyle":"FREE","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"1","entrytime":"00:00:57.46","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24448","birthdate":"2013-01-01","firstname":"Luisa","lastname":"Schindler","lane":"1","entrytime":"00:00:57.46","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"2","entrytime":"00:00:46.15","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24555","birthdate":"2012-01-01","firstname":"Elsa","lastname":"Schmaus","lane":"2","entrytime":"00:00:46.15","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25543","birthdate":"2013-01-01","firstname":"Tamina","lastname":"Schomleu","lane":"3","entrytime":"00:00:45.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25543","birthdate":"2013-01-01","firstname":"Tamina","lastname":"Schomleu","lane":"3","entrytime":"00:00:45.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25538","birthdate":"2012-01-01","firstname":"Leila","lastname":"Schomleu","lane":"4","entrytime":"00:00:45.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25538","birthdate":"2012-01-01","firstname":"Leila","lastname":"Schomleu","lane":"4","entrytime":"00:00:45.00","name":"TSG NÃ¼rnberg","code":"6655","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24716","birthdate":"2013-01-01","firstname":"Julia","lastname":"Ehnis","lane":"5","entrytime":"00:00:48.60","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24716","birthdate":"2013-01-01","firstname":"Julia","lastname":"Ehnis","lane":"5","entrytime":"00:00:48.60","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24341","birthdate":"2012-01-01","firstname":"Sanja","lastname":"Dietzel","lane":"6","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24341","birthdate":"2012-01-01","firstname":"Sanja","lastname":"Dietzel","lane":"6","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"6","place":"undefined","time":"undefined","heat":"3"}
/POST
Message: {"message":"header 7 3"}
mqtt_handler datamapping incoming header 7 3
<message_mapper> beginn parse
<incoming> Type: header
Event: -7-
HEAT: 3
<swim_events> getInternalHeatId 7 3
<swim_event> number heats 25634
Event: -7-
<swim_event> search for number 7
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"7","heat":"3","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m Kraulbeine mit Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25634 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25634 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25634 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25634 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25634 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25634 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"7","heat":"3","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m Kraulbeine mit Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"7","heat":"3","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m Kraulbeine mit Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"1","entrytime":"00:00:36.77","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24067","birthdate":"2012-01-01","firstname":"Luca","lastname":"Daucher","lane":"1","entrytime":"00:00:36.77","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25102","birthdate":"2012-01-01","firstname":"Stefan","lastname":"David","lane":"2","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25102","birthdate":"2012-01-01","firstname":"Stefan","lastname":"David","lane":"2","entrytime":"00:00:35.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25398","birthdate":"2012-01-01","firstname":"Leon","lastname":"Rauscher","lane":"3","entrytime":"00:00:33.50","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25398","birthdate":"2012-01-01","firstname":"Leon","lastname":"Rauscher","lane":"3","entrytime":"00:00:33.50","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"4","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24241","birthdate":"2014-01-01","firstname":"Hannes","lastname":"Endruweit","lane":"4","entrytime":"00:00:35.00","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"5","entrytime":"00:00:36.70","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25416","birthdate":"2012-01-01","firstname":"Oskar","lastname":"Swietlik","lane":"5","entrytime":"00:00:36.70","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"6","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25231","birthdate":"2012-01-01","firstname":"Dennis","lastname":"Kranz","lane":"6","entrytime":"00:00:40.00","name":"SG Mittelfranken","code":"6768","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"3"}
/POST
Message: {"message":"header 8 3"}
mqtt_handler datamapping incoming header 8 3
<message_mapper> beginn parse
<incoming> Type: header
Event: -8-
HEAT: 3
<swim_events> getInternalHeatId 8 3
<swim_event> number heats 25637
Event: -8-
<swim_event> search for number 8
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"8","heat":"3","gender":"F","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m Kraulbeine mit Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25637 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25637 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25637 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25637 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25637 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25637 no relay lane 6
<swim_event> lastswimmer
<swim_event> type single
websocket backend mainchannel {"type":"header","relaycount":"1","event":"8","heat":"3","gender":"F","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m Kraulbeine mit Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"8","heat":"3","gender":"F","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m Kraulbeine mit Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25449","birthdate":"2012-01-01","firstname":"Lina","lastname":"Lederer","lane":"1","entrytime":"00:00:50.00","name":"SC Uttenreuth","code":"4383","type":"lane","event":"8","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25449","birthdate":"2012-01-01","firstname":"Lina","lastname":"Lederer","lane":"1","entrytime":"00:00:50.00","name":"SC Uttenreuth","code":"4383","type":"lane","event":"8","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"25408","birthdate":"2013-01-01","firstname":"Johanna","lastname":"Spitzner","lane":"2","entrytime":"00:00:46.94","name":"SC Regensburg","code":"6524","type":"lane","event":"8","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"25408","birthdate":"2013-01-01","firstname":"Johanna","lastname":"Spitzner","lane":"2","entrytime":"00:00:46.94","name":"SC Regensburg","code":"6524","type":"lane","event":"8","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24095","birthdate":"2012-01-01","firstname":"Lena","lastname":"Knerer","lane":"3","entrytime":"00:00:44.97","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"8","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24095","birthdate":"2012-01-01","firstname":"Lena","lastname":"Knerer","lane":"3","entrytime":"00:00:44.97","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"8","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24941","birthdate":"2014-01-01","firstname":"Leni","lastname":"Willums","lane":"4","entrytime":"00:00:45.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"8","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24941","birthdate":"2014-01-01","firstname":"Leni","lastname":"Willums","lane":"4","entrytime":"00:00:45.00","name":"Post-SV NÃ¼rnberg","code":"4271","type":"lane","event":"8","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24716","birthdate":"2013-01-01","firstname":"Julia","lastname":"Ehnis","lane":"5","entrytime":"00:00:48.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"8","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24716","birthdate":"2013-01-01","firstname":"Julia","lastname":"Ehnis","lane":"5","entrytime":"00:00:48.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"8","place":"undefined","time":"undefined","heat":"3"}
websocket backend mainchannel {"athleteid":"24438","birthdate":"2013-01-01","firstname":"Marie","lastname":"Schellenberger","lane":"6","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"8","place":"undefined","time":"undefined","heat":"3"}
lane
websocket backend send {"athleteid":"24438","birthdate":"2013-01-01","firstname":"Marie","lastname":"Schellenberger","lane":"6","entrytime":"00:00:50.00","name":"SG Bamberg","code":"5085","type":"lane","event":"8","place":"undefined","time":"undefined","heat":"3"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"stop"}
mqtt_handler datamapping incoming stop
<message_mapper> beginn parse
<incoming> Type: stop
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"stop","time":"1584994295"}
websocket backend mainchannel {"type":"stop","time":"1584994295"}
stop
websocket backend send {"type":"stop","time":"1584994295"}
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1584994299"}
websocket backend mainchannel {"type":"start","time":"1584994299"}
start
websocket backend send {"type":"start","time":"1584994299"}
/POST
Message: {"message":"lane 2 1:11,11 0"}
mqtt_handler datamapping incoming lane 2 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25637 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25408","birthdate":"2013-01-01","firstname":"Johanna","lastname":"Spitzner","lane":"2","entrytime":"00:00:46.94","name":"SC Regensburg","code":"6524","type":"lane","event":"8","place":"0","time":"1:11,11","heat":"3"}
<message_mapper> store lane 2: lane 2 1:11,11 0
websocket backend mainchannel {"athleteid":"25408","birthdate":"2013-01-01","firstname":"Johanna","lastname":"Spitzner","lane":"2","entrytime":"00:00:46.94","name":"SC Regensburg","code":"6524","type":"lane","event":"8","place":"0","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"25408","birthdate":"2013-01-01","firstname":"Johanna","lastname":"Spitzner","lane":"2","entrytime":"00:00:46.94","name":"SC Regensburg","code":"6524","type":"lane","event":"8","place":"0","time":"1:11,11","heat":"3"}
/POST
Message: {"message":"lane 2 1:11,11 0"}
mqtt_handler datamapping incoming lane 2 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25637 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25408","birthdate":"2013-01-01","firstname":"Johanna","lastname":"Spitzner","lane":"2","entrytime":"00:00:46.94","name":"SC Regensburg","code":"6524","type":"lane","event":"8","place":"0","time":"1:11,11","heat":"3"}
<message_mapper> store lane 2: lane 2 1:11,11 0
websocket backend mainchannel {"athleteid":"25408","birthdate":"2013-01-01","firstname":"Johanna","lastname":"Spitzner","lane":"2","entrytime":"00:00:46.94","name":"SC Regensburg","code":"6524","type":"lane","event":"8","place":"0","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"25408","birthdate":"2013-01-01","firstname":"Johanna","lastname":"Spitzner","lane":"2","entrytime":"00:00:46.94","name":"SC Regensburg","code":"6524","type":"lane","event":"8","place":"0","time":"1:11,11","heat":"3"}
/POST
Message: {"message":"lane 3 1:11,11 3"}
mqtt_handler datamapping incoming lane 3 1:11,11 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: 1:11,11
(place)lane: 3
<swim_event> get swimmer for internalheatid 25637 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"24095","birthdate":"2012-01-01","firstname":"Lena","lastname":"Knerer","lane":"3","entrytime":"00:00:44.97","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"8","place":"3","time":"1:11,11","heat":"3"}
<message_mapper> store lane 3: lane 3 1:11,11 3
websocket backend mainchannel {"athleteid":"24095","birthdate":"2012-01-01","firstname":"Lena","lastname":"Knerer","lane":"3","entrytime":"00:00:44.97","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"8","place":"3","time":"1:11,11","heat":"3"}
lane
websocket backend send {"athleteid":"24095","birthdate":"2012-01-01","firstname":"Lena","lastname":"Knerer","lane":"3","entrytime":"00:00:44.97","name":"Schwimmclub Schwandorf","code":"6777","type":"lane","event":"8","place":"3","time":"1:11,11","heat":"3"}
websocket backend Client disconnected
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
<sender> mqtt_sender client disconnected
undefined

> websocket_backend@1.0.0 start /Users/matthiasfuchs/projects/schwimmen/webtiming/websocket_backend
> node app.js


> administration@0.1.0 start /Users/matthiasfuchs/projects/schwimmen/webtiming/react_frontend/administration
> react-scripts start


> express-api-mqtt-example@1.0.0 start /Users/matthiasfuchs/projects/schwimmen/webtiming/datamapping
> node app.js

websocket backend Listening on port 4001
<incoming> using /Users/matthiasfuchs/projects/schwimmen/webtiming/datamapping/incoming/../property.ini
<incoming> using file resources/kinder.lef
<swim_event> read resources/kinder.lef
<mqqt_message_sender>lenex success upload new lenex file
<swim_event> Event type ALL
<sender> no auth set for outgoing mqttfalse undefined undefined
<sender> DEST_MQTT_HOST: mqtt://localhost
<mapper> use 6 lanes
app running on port. 3001
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
failure MQTT
websocket backend Subscribing to mqtt://localhost
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
failure MQTT
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
[34mâ„¹[39m [90mï½¢wdsï½£[39m: Project is running at http://192.168.178.144/
[34mâ„¹[39m [90mï½¢wdsï½£[39m: webpack output is served from 
[34mâ„¹[39m [90mï½¢wdsï½£[39m: Content not from webpack is served from /Users/matthiasfuchs/projects/schwimmen/webtiming/react_frontend/administration/public
[34mâ„¹[39m [90mï½¢wdsï½£[39m: 404s will fallback to /
Starting the development server...

failure MQTT
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
failure MQTT
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
failure MQTT
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
failure MQTT
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
failure MQTT
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
failure MQTT
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
Files successfully emitted, waiting for typecheck results...
websocket backend Client disconnected
failure MQTT
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
/GET
Compiled successfully!

You can now view administration in the browser.

  Local:            http://localhost:3000
  On Your Network:  http://192.168.178.144:3000

Note that the development build is not optimized.
To create a production build, use npm run build.

failure MQTT
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
failure MQTT
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
failure MQTT
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
failure MQTT
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
failure MQTT
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
failure MQTT
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
failure MQTT
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
failure MQTT
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
failure MQTT
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
failure MQTT
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
failure MQTT
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
failure MQTT
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
failure MQTT
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
failure MQTT
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
failure MQTT
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
failure MQTT
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
failure MQTT
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
failure MQTT
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
failure MQTT
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
failure MQTT
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
failure MQTT
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
failure MQTT
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
failure MQTT
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
failure MQTT
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
failure MQTT
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
failure MQTT
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
failure MQTT
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
failure MQTT
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
failure MQTT
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
failure MQTT
mqtt_handler raw client disconnected
<message_mapper> beginn parse
<incoming> Type: unknown
Type:  not declared
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: "unknown"
<sender> mqtt_sender client disconnected
{ Error: connect ECONNREFUSED 127.0.0.1:1883
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 1883 }
failure MQTT
websocket backend connected
mqtt_handler raw client connected
<sender> mqtt_sender client connected
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend mainchannel "unknown"
undefined
websocket backend send "unknown"
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"header 1 1"}
mqtt_handler datamapping incoming header 1 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
/GET
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"start"}
mqtt_handler datamapping incoming start
<message_mapper> beginn parse
<incoming> Type: start
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"start","time":"1585163702"}
websocket backend mainchannel {"type":"start","time":"1585163702"}
start
websocket backend send {"type":"start","time":"1585163702"}
/POST
Message: {"message":"lane 1 1:11,11 0"}
mqtt_handler datamapping incoming lane 1 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"1","place":"0","time":"1:11,11","heat":"1"}
<message_mapper> store lane 1: lane 1 1:11,11 0
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"0","time":"1:11,11","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"0","time":"1:11,11","heat":"1"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"lane 2 1:11,11 0"}
mqtt_handler datamapping incoming lane 2 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"1"}
<message_mapper> store lane 2: lane 2 1:11,11 0
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"0","time":"1:11,11","heat":"1"}
/POST
Message: {"message":"clear"}
mqtt_handler datamapping incoming clear
<message_mapper> beginn parse
<incoming> Type: clear
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"clear","time":"1585163786"}
<message_mapper> clear race
<message_mapper> race out lane 1 1:11,11 0
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> race out lane 2 1:11,11 0
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> race out lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"clear","time":"1585163786"}
clear
clear lanes
websocket backend send {"type":"clear","time":"1585163786"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"","time":"","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"","time":"","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"","time":"","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"","time":"","heat":"1"}
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"1"}
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"","time":"","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"","time":"","heat":"1"}
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"","time":"","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"","time":"","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"","time":"","heat":"1"}
/POST
Message: {"message":"lane 2 1:11,11 1"}
mqtt_handler datamapping incoming lane 2 1:11,11 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:11,11
(place)lane: 1
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"1"}
<message_mapper> store lane 2: lane 2 1:11,11 1
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"1","time":"1:11,11","heat":"1"}
/POST
Message: {"message":"lane 2 1:11,11 3"}
mqtt_handler datamapping incoming lane 2 1:11,11 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:11,11
(place)lane: 3
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"3","time":"1:11,11","heat":"1"}
<message_mapper> store lane 2: lane 2 1:11,11 3
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"3","time":"1:11,11","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"3","time":"1:11,11","heat":"1"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"lane 2 1:11,11 3"}
mqtt_handler datamapping incoming lane 2 1:11,11 3
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: 1:11,11
(place)lane: 3
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"3","time":"1:11,11","heat":"1"}
<message_mapper> store lane 2: lane 2 1:11,11 3
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"3","time":"1:11,11","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"3","time":"1:11,11","heat":"1"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"header 7 1"}
mqtt_handler datamapping incoming header 7 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -7-
HEAT: 1
<swim_events> getInternalHeatId 7 1
<swim_event> number heats 25632
Event: -7-
<swim_event> search for number 7
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"7","heat":"1","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m Kraulbeine mit Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25632 no relay lane 1
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25632 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25632 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25632 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25632 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25632 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"7","heat":"1","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m Kraulbeine mit Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"7","heat":"1","gender":"M","round":"TIM","swimstyle":"UNKNOWN","distance":"25","name":"25m Kraulbeine mit Brett","competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25356","birthdate":"2012-01-01","firstname":"Maxim","lastname":"Belyaev","lane":"1","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"2","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"3","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24359","birthdate":"2013-01-01","firstname":"Moritz","lastname":"Hartmann","lane":"3","entrytime":"00:01:00.00","name":"SG Bamberg","code":"5085","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"4","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"23973","birthdate":"2013-01-01","firstname":"Henri","lastname":"Wittl","lane":"4","entrytime":"00:01:00.00","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"5","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"5","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"7","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"7","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"7","place":"undefined","time":"undefined","heat":"1"}

> websocket_backend@1.0.0 start /Users/matthiasfuchs/projects/schwimmen/webtiming/websocket_backend
> node app.js


> administration@0.1.0 start /Users/matthiasfuchs/projects/schwimmen/webtiming/react_frontend/administration
> react-scripts start


> express-api-mqtt-example@1.0.0 start /Users/matthiasfuchs/projects/schwimmen/webtiming/datamapping
> node app.js

websocket backend Listening on port 4001
websocket backend connected
<incoming> using /Users/matthiasfuchs/projects/schwimmen/webtiming/datamapping/incoming/../property.ini
<incoming> using file resources/kinder.lef
<swim_event> read resources/kinder.lef
<mqqt_message_sender>lenex success upload new lenex file
<swim_event> Event type ALL
<sender> no auth set for outgoing mqttfalse undefined undefined
<sender> DEST_MQTT_HOST: mqtt://localhost
<mapper> use 8 lanes
app running on port. 3001
mqtt_handler raw client connected
<sender> mqtt_sender client connected
websocket backend Subscribing to mqtt://localhost
[34mâ„¹[39m [90mï½¢wdsï½£[39m: Project is running at http://192.168.178.144/
[34mâ„¹[39m [90mï½¢wdsï½£[39m: webpack output is served from 
[34mâ„¹[39m [90mï½¢wdsï½£[39m: Content not from webpack is served from /Users/matthiasfuchs/projects/schwimmen/webtiming/react_frontend/administration/public
[34mâ„¹[39m [90mï½¢wdsï½£[39m: 404s will fallback to /
Starting the development server...

Files successfully emitted, waiting for typecheck results...
/GET
Compiled successfully!

You can now view administration in the browser.

  Local:            http://localhost:3000
  On Your Network:  http://192.168.178.144:3000

Note that the development build is not optimized.
To create a production build, use npm run build.

/POST
Message: {"message":"header 1 1"}
mqtt_handler datamapping incoming header 1 1
<message_mapper> beginn parse
<incoming> Type: header
Event: -1-
HEAT: 1
<swim_events> getInternalHeatId 1 1
<swim_event> number heats 25607
Event: -1-
<swim_event> search for number 1
<swim_event> single event
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
<mapper> Store heat
<message_mapper> store lane 1: lane 1
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 2: lane 2
<incoming> Type: lane
(incoming.js)lane: 2
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 2
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 3: lane 3
<incoming> Type: lane
(incoming.js)lane: 3
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 3
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 4: lane 4
<incoming> Type: lane
(incoming.js)lane: 4
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 4
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 5: lane 5
<incoming> Type: lane
(incoming.js)lane: 5
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 5
<swim_event> lastswimmer
<swim_event> type single
<message_mapper> store lane 6: lane 6
<incoming> Type: lane
(incoming.js)lane: 6
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 6
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 7: lane 7
<incoming> Type: lane
(incoming.js)lane: 7
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 7
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> store lane 8: lane 8
<incoming> Type: lane
(incoming.js)lane: 8
(time)lane: undefined
(place)lane: undefined
<swim_event> get swimmer for internalheatid 25607 no relay lane 8
<swim_event> lastswimmer
<swim_event> type nothing
websocket backend mainchannel {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
header
websocket backend send {"type":"header","relaycount":"1","event":"1","heat":"1","gender":"M","round":"TIM","swimstyle":"BREAST","distance":"25","name":null,"competition":"43. FÃ¼rther Kinderschwimmen"}
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25362","birthdate":"2012-01-01","firstname":"Luis","lastname":"Ewald","lane":"2","entrytime":"NT","name":"SC Regensburg","code":"6524","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25466","birthdate":"2012-01-01","firstname":"Lasse","lastname":"Martin","lane":"3","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"25431","birthdate":"2014-01-01","firstname":"Nandor","lastname":"Sziklavari","lane":"4","entrytime":"NT","name":"SG RÃ¶dental","code":"6621","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"athleteid":"24779","birthdate":"2012-01-01","firstname":"Maximilian","lastname":"Schechtel","lane":"5","entrytime":"NT","name":"Schwimmgemeinschaft FÃ¼rth","code":"5147","type":"lane","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"6","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"7","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"7","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend mainchannel {"type":"lane","lane":"8","event":"1","place":"undefined","time":"undefined","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"8","event":"1","place":"undefined","time":"undefined","heat":"1"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"lane 1 1:11,11 0"}
mqtt_handler datamapping incoming lane 1 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"1","place":"0","time":"1:11,11","heat":"1"}
<message_mapper> store lane 1: lane 1 1:11,11 0
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"0","time":"1:11,11","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"0","time":"1:11,11","heat":"1"}
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1585165720"}
websocket backend mainchannel {"type":"startlist","time":"1585165720"}
startlist
websocket backend send {"type":"startlist","time":"1585165720"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"lane 1 1:11,11 1"}
mqtt_handler datamapping incoming lane 1 1:11,11 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 1
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"1","place":"1","time":"1:11,11","heat":"1"}
<message_mapper> store lane 1: lane 1 1:11,11 1
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"1","time":"1:11,11","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"1","time":"1:11,11","heat":"1"}
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1585167247"}
websocket backend mainchannel {"type":"startlist","time":"1585167247"}
startlist
websocket backend send {"type":"startlist","time":"1585167247"}
/POST
Message: {"message":"lane 1 1:11,11 1"}
mqtt_handler datamapping incoming lane 1 1:11,11 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 1
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"1","place":"1","time":"1:11,11","heat":"1"}
<message_mapper> store lane 1: lane 1 1:11,11 1
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"1","time":"1:11,11","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"1","time":"1:11,11","heat":"1"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"lane 1 1:11,11 1"}
mqtt_handler datamapping incoming lane 1 1:11,11 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 1
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"1","place":"1","time":"1:11,11","heat":"1"}
<message_mapper> store lane 1: lane 1 1:11,11 1
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"1","time":"1:11,11","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"1","time":"1:11,11","heat":"1"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"lane 1 1:11,11 0"}
mqtt_handler datamapping incoming lane 1 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"1","place":"0","time":"1:11,11","heat":"1"}
<message_mapper> store lane 1: lane 1 1:11,11 0
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"0","time":"1:11,11","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"0","time":"1:11,11","heat":"1"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
/POST
Message: {"message":"lane 1 1:11,11 0"}
mqtt_handler datamapping incoming lane 1 1:11,11 0
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 0
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"1","place":"0","time":"1:11,11","heat":"1"}
<message_mapper> store lane 1: lane 1 1:11,11 0
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"0","time":"1:11,11","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"0","time":"1:11,11","heat":"1"}
/POST
Message: {"message":"lane 1 1:11,11 1"}
mqtt_handler datamapping incoming lane 1 1:11,11 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 1
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"1","place":"1","time":"1:11,11","heat":"1"}
<message_mapper> store lane 1: lane 1 1:11,11 1
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"1","time":"1:11,11","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"1","time":"1:11,11","heat":"1"}
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1585167608"}
websocket backend mainchannel {"type":"startlist","time":"1585167608"}
startlist
websocket backend send {"type":"startlist","time":"1585167608"}
/POST
Message: {"message":"lane 1 1:11,11 1"}
mqtt_handler datamapping incoming lane 1 1:11,11 1
<message_mapper> beginn parse
<incoming> Type: lane
(incoming.js)lane: 1
(time)lane: 1:11,11
(place)lane: 1
<swim_event> get swimmer for internalheatid 25607 no relay lane 1
<swim_event> lastswimmer
<swim_event> type nothing
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"lane","lane":"1","event":"1","place":"1","time":"1:11,11","heat":"1"}
<message_mapper> store lane 1: lane 1 1:11,11 1
websocket backend mainchannel {"type":"lane","lane":"1","event":"1","place":"1","time":"1:11,11","heat":"1"}
lane
websocket backend send {"type":"lane","lane":"1","event":"1","place":"1","time":"1:11,11","heat":"1"}
/POST
Message: {"message":"startlist"}
mqtt_handler datamapping incoming startlist
<message_mapper> beginn parse
<incoming> Type: startlist
<message_mapper> aditional steps check
<message_mapper> generate message
<mapper> datamapping mapper: {"type":"startlist","time":"1585167661"}
websocket backend mainchannel {"type":"startlist","time":"1585167661"}
startlist
websocket backend send {"type":"startlist","time":"1585167661"}
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
websocket backend Subscribing to mqtt://localhost
websocket backend Client disconnected
